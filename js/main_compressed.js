(function(a,b,c){function d(a){a&&!a.setTargetAtTime&&(a.setTargetAtTime=a.setTargetValueAtTime)}window.hasOwnProperty("webkitAudioContext")&&!window.hasOwnProperty("AudioContext")&&(window.AudioContext=webkitAudioContext,AudioContext.prototype.internal_createGain=AudioContext.prototype.createGain,AudioContext.prototype.createGain=function(){var a=this.internal_createGain();d(a.gain);return a},AudioContext.prototype.internal_createDelay=AudioContext.prototype.createDelay,AudioContext.prototype.createDelay=
function(){var a=this.internal_createDelay();d(a.delayTime);return a},AudioContext.prototype.internal_createBufferSource=AudioContext.prototype.createBufferSource,AudioContext.prototype.createBufferSource=function(){var a=this.internal_createBufferSource();a.start||(a.start=function(a,b,c){b||c?this.noteGrainOn(a,b,c):this.noteOn(a)});a.stop||(a.stop=a.noteoff);d(a.playbackRate);return a},AudioContext.prototype.internal_createDynamicsCompressor=AudioContext.prototype.createDynamicsCompressor,AudioContext.prototype.createDynamicsCompressor=
function(){var a=this.internal_createDynamicsCompressor();d(a.threshold);d(a.knee);d(a.ratio);d(a.reduction);d(a.attack);d(a.release);return a},AudioContext.prototype.internal_createBiquadFilter=AudioContext.prototype.createBiquadFilter,AudioContext.prototype.createBiquadFilter=function(){var a=this.internal_createBiquadFilter();d(a.frequency);d(a.detune);d(a.Q);d(a.gain);return a},AudioContext.prototype.hasOwnProperty("createOscillator")&&(AudioContext.prototype.internal_createOscillator=AudioContext.prototype.createOscillator,
AudioContext.prototype.createOscillator=function(){var a=this.internal_createOscillator();a.start||(a.start=a.noteOn);a.stop||(a.stop=a.noteOff);d(a.frequency);d(a.detune);return a}),AudioContext.prototype.hasOwnProperty("createGain")||(AudioContext.prototype.createGain=AudioContext.prototype.createGainNode),AudioContext.prototype.hasOwnProperty("createDelay")||(AudioContext.prototype.createDelay=AudioContext.prototype.createDelayNode),AudioContext.prototype.hasOwnProperty("createScriptProcessor")||
(AudioContext.prototype.createScriptProcessor=AudioContext.prototype.createJavaScriptNode))})(window);
Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";a.style.background=
"#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c;a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};
AudioDetector={REVISION:3,webAudioSupport:void 0!==window.AudioContext||void 0!==window.webkitAudioContext,oggSupport:document.createElement("audio").canPlayType("audio/ogg"),errorMessages:{webAudioSupport:'Your browser does not seem to support the <a href="https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html" style="color:#000">Web Audio API</a>.<br/>Find out how to get it <a href="http://chromium.googlecode.com/svn/trunk/samples/audio/index.html" style="color:#000">here</a>.',oggSupport:'Your browser does not seem to support OGG audio.<br/>Find out how to get it <a href="https://developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements" style="color:#000">here</a>.'},
getErrorMessage:function(a){var b=document.createElement("div");b.style.fontFamily="monospace";b.style.fontSize="13px";b.style.fontWeight="normal";b.style.textAlign="center";b.style.background="#fff";b.style.color="#000";b.style.padding="1.5em";b.style.width="350px";b.style.margin="2em auto";b.style.zIndex=1E3;b.style.position="relative";b.style.top="0px";b.style.left="0px";b.style.border="6px solid red";b.innerHTML=a;return b},detects:function(a){if(!(a instanceof Array))return this.showErrorMessage('<span style="font-size: 200%;">Oi!</span> <strong>conditions</strong> must be an Array with conditions to be checked'),
!1;for(var b=0;b<a.length;b++){var c=a[b];if(void 0!==this.errorMessages[c]&&!this[c])return this.showErrorMessage(this.errorMessages[c]),!1}return!0},showErrorMessage:function(a,b){var c,d,e;b=b||{};c=void 0!==b.parent?b.parent:document.body;d=void 0!==b.id?b.id:"audio-error-message";e=AudioDetector.getErrorMessage(a);e.id=d;c.appendChild(e);e.style.position="absolute";e.style.top="100px";e.style.left=(window.innerWidth-e.clientWidth)/2+"px"}};
var TWEEN=TWEEN||function(){var a=[];return{REVISION:"7dev",getAll:function(){return a},removeAll:function(){a=[]},add:function(b){a.push(b)},remove:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},update:function(b){var c=a.length;if(0<c){var d=0;for(b=void 0!==b?b:Date.now();d<c;)a[d].update(b)?d++:(a.splice(d,1),c--);return!0}return!1}}}();
TWEEN.Tween=function(a){var b={},c={},d=1E3,e=0,f=null,g=TWEEN.Easing.Linear.None,h=TWEEN.Interpolation.Linear,l=[],n=null,p=!1,s=null,q=null;this.to=function(a,b){null!==b&&(d=b);c=a;return this};this.start=function(d){TWEEN.add(this);p=!1;f=void 0!==d?d:Date.now();f+=e;for(var g in c)if(null!==a[g]){if(c[g]instanceof Array){if(0===c[g].length)continue;c[g]=[a[g]].concat(c[g])}b[g]=a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(a){e=a;return this};this.easing=
function(a){g=a;return this};this.interpolation=function(a){h=a;return this};this.chain=function(){l=arguments;return this};this.onStart=function(a){n=a;return this};this.onUpdate=function(a){s=a;return this};this.onComplete=function(a){q=a;return this};this.update=function(e){if(e<f)return!0;!1===p&&(null!==n&&n.call(a),p=!0);var u=(e-f)/d,u=1<u?1:u,r=g(u),v;for(v in b){var z=b[v],x=c[v];a[v]=x instanceof Array?h(x,r):z+(x-z)*r}null!==s&&s.call(a,r);if(1==u){null!==q&&q.call(a);u=0;for(r=l.length;u<
r;u++)l[u].start(e);return!1}return!0}};
TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a:0.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a:-0.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*
a*a},Out:function(a){return--a*a*a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a*a:0.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI/2)},Out:function(a){return Math.sin(a*Math.PI/2)},InOut:function(a){return 0.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?0.5*Math.pow(1024,a-1):0.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-
Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return-(c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4))},Out:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return c*Math.pow(2,-10*a)*Math.sin(2*(a-
b)*Math.PI/0.4)+1},InOut:function(a){var b,c=0.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=0.1):b=0.4*Math.asin(1/c)/(2*Math.PI);return 1>(a*=2)?-0.5*c*Math.pow(2,10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4):0.5*c*Math.pow(2,-10*(a-=1))*Math.sin(2*(a-b)*Math.PI/0.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*(3.5949095*a-2.5949095):0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-
TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+0.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+0.9375:7.5625*(a-=2.625/2.75)*a+0.984375},InOut:function(a){return 0.5>a?0.5*TWEEN.Easing.Bounce.In(2*a):0.5*TWEEN.Easing.Bounce.Out(2*a-1)+0.5}}};
TWEEN.Interpolation={Linear:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>b?f(a[0],a[1],d):1<b?f(a[c],a[c-1],c-d):f(a[e],a[e+1>c?c:e+1],d-e)},Bezier:function(a,b){var c=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein,g;for(g=0;g<=d;g++)c+=e(1-b,d-g)*e(b,g)*a[g]*f(d,g);return c},CatmullRom:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[c]?(0>b&&(e=Math.floor(d=c*(1+b))),f(a[(e-
1+c)%c],a[e],a[(e+1)%c],a[(e+2)%c],d-e)):0>b?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<b?a[c]-(f(a[c],a[c],a[c-1],a[c-1],d-c)-a[c]):f(a[e?e-1:0],a[e],a[c<e+1?c:e+1],a[c<e+2?c:e+2],d-e)},Utils:{Linear:function(a,b,c){return(b-a)*c+a},Bernstein:function(a,b){var c=TWEEN.Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){var a=[1];return function(b){var c=1,d;if(a[b])return a[b];for(d=b;1<d;d--)c*=d;return a[b]=c}}(),CatmullRom:function(a,b,c,d,e){a=0.5*(c-a);d=0.5*(d-b);var f=
e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}}};"use strict";var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array);
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame||(window.cancelAnimationFrame=
function(a){clearTimeout(a)})})();THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;if(0===c)this.r=this.g=this.b=0;else switch(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),d){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=
Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return"rgb("+Math.floor(255*this.r)+","+Math.floor(255*this.g)+","+Math.floor(255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];
this.y=a.elements[13];this.z=a.elements[14];return this},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1,e=b?b.z:1,f=a.elements[0]/c,g=a.elements[4]/d,c=a.elements[1]/c,d=a.elements[5]/d,h=a.elements[9]/e,l=a.elements[10]/e;this.y=Math.asin(a.elements[8]/e);e=Math.cos(this.y);1E-5<Math.abs(e)?(this.x=Math.atan2(-h/e,l/e),this.z=Math.atan2(-g/e,f/e)):(this.x=0,this.z=Math.atan2(c,d));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),
c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b,c=this.planes,d=a.elements;a=d[0];b=d[1];var e=d[2],f=d[3],g=d[4],h=d[5],l=d[6],n=d[7],p=d[8],s=d[9],q=d[10],t=d[11],u=d[12],r=d[13],v=d[14],d=d[15];c[0].set(f-a,n-g,t-p,d-u);c[1].set(f+a,n+g,t+p,d+u);c[2].set(f+b,n+h,t+s,d+r);c[3].set(f-b,n-h,t-s,d-r);c[4].set(f-e,n-l,t-q,d-v);c[5].set(f+e,n+l,t+q,d+v);for(a=0;6>a;a++)b=c[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=this.planes,c=a.matrixWorld,d=c.elements,c=-a.geometry.boundingSphere.radius*c.getMaxScaleOnAxis(),e=0;6>e;e++)if(a=b[e].x*d[12]+b[e].y*d[13]+b[e].z*d[14]+b[e].w,a<=c)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
THREE.Ray=function(a,b){function c(a,b,c){u.sub(c,a);z=u.dot(b);x=r.add(a,v.copy(b).multiplyScalar(z));return c.distanceTo(x)}function d(a,b,c,d){u.sub(d,b);r.sub(c,b);v.sub(a,b);A=u.dot(u);w=u.dot(r);B=u.dot(v);M=r.dot(r);I=r.dot(v);C=1/(A*M-w*w);y=(M*B-w*I)*C;E=(A*I-w*B)*C;return 0<=y&&0<=E&&1>y+E}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;var e=1E-4;this.setPrecision=function(a){e=a};var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,n=
new THREE.Vector3,p=new THREE.Vector3,s=new THREE.Vector3,q=new THREE.Vector3,t=new THREE.Vector3;this.intersectObject=function(a){var b,r=[];if(a instanceof THREE.Particle){var u=c(this.origin,this.direction,a.matrixWorld.getPosition());if(u>a.scale.x)return[];b={distance:u,point:a.position,face:null,object:a};r.push(b)}else if(a instanceof THREE.Mesh){var u=c(this.origin,this.direction,a.matrixWorld.getPosition()),v=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),
a.matrixWorld.getColumnZ().length());if(u>a.geometry.boundingSphere.radius*Math.max(v.x,Math.max(v.y,v.z)))return r;var w,y,m=a.geometry,x=m.vertices,z;a.matrixRotationWorld.extractRotation(a.matrixWorld);u=0;for(v=m.faces.length;u<v;u++)(b=m.faces[u],n.copy(this.origin),p.copy(this.direction),z=a.matrixWorld,s=z.multiplyVector3(s.copy(b.centroid)).subSelf(n),q=a.matrixRotationWorld.multiplyVector3(q.copy(b.normal)),w=p.dot(q),Math.abs(w)<e||(y=q.dot(s)/w,0>y||!(a.doubleSided||(a.flipSided?0<w:0>
w))))||((t.add(n,p.multiplyScalar(y)),b instanceof THREE.Face3)?(f=z.multiplyVector3(f.copy(x[b.a])),g=z.multiplyVector3(g.copy(x[b.b])),h=z.multiplyVector3(h.copy(x[b.c])),d(t,f,g,h)&&(b={distance:n.distanceTo(t),point:t.clone(),face:b,object:a},r.push(b))):b instanceof THREE.Face4&&(f=z.multiplyVector3(f.copy(x[b.a])),g=z.multiplyVector3(g.copy(x[b.b])),h=z.multiplyVector3(h.copy(x[b.c])),l=z.multiplyVector3(l.copy(x[b.d])),d(t,f,g,l)||d(t,g,h,l))&&(b={distance:n.distanceTo(t),point:t.clone(),face:b,
object:a},r.push(b)))}return r};this.intersectObjects=function(a){for(var b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,this.intersectObject(a[c]));b.sort(function(a,b){return a.distance-b.distance});return b};var u=new THREE.Vector3,r=new THREE.Vector3,v=new THREE.Vector3,z,x,A,w,B,M,I,C,y,E};
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b,c,d,e,f,g,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,p,s){h=!1;b=f;c=g;d=p;e=s;a()};this.addPoint=function(f,g){h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>g?e:g);a()};this.add3Points=
function(f,g,p,s,q,t){h?(h=!1,b=f<p?f<q?f:q:p<q?p:q,c=g<s?g<t?g:t:s<t?s:t,d=f>p?f>q?f:q:p>q?p:q,e=g>s?g>t?g:t:s>t?s:t):(b=f<p?f<q?f<b?f:b:q<b?q:b:p<q?p<b?p:b:q<b?q:b,c=g<s?g<t?g<c?g:c:t<c?t:c:s<t?s<c?s:c:t<c?t:c,d=f>p?f>q?f>d?f:d:q>d?q:d:p>q?p>d?p:d:q>d?q:d,e=g>s?g>t?g>e?g:e:t>e?t:e:s>t?s>e?s:e:t>e?t:e);a()};this.addRectangle=function(f){h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),d=d>f.getRight()?d:f.getRight(),e=e>
f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],n=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,p=this.elements;p[0]=b*a;p[1]=b*c;p[2]=b*d;p[3]=b*e;p[4]=b*f;p[5]=b*g;p[6]=b*h;p[7]=b*l;p[8]=b*n;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,l,n,p,s,q,t,u,r){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,l||0,n||0,void 0!==p?p:1,s||0,q||0,t||0,u||0,void 0!==r?r:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,l,n,p,s,q,t,u,r){var v=this.elements;v[0]=a;v[4]=b;v[8]=c;v[12]=d;v[1]=e;v[5]=f;v[9]=g;v[13]=h;v[2]=l;v[6]=n;v[10]=p;v[14]=s;v[3]=q;v[7]=t;v[11]=u;v[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],l=c[12],n=c[1],p=c[5],s=c[9],q=c[13],t=c[2],u=c[6],r=c[10],v=c[14],z=c[3],x=c[7],A=c[11],c=c[15],w=d[0],B=d[4],M=d[8],
I=d[12],C=d[1],y=d[5],E=d[9],K=d[13],J=d[2],U=d[6],T=d[10],H=d[14],P=d[3],N=d[7],m=d[11],d=d[15];e[0]=f*w+g*C+h*J+l*P;e[4]=f*B+g*y+h*U+l*N;e[8]=f*M+g*E+h*T+l*m;e[12]=f*I+g*K+h*H+l*d;e[1]=n*w+p*C+s*J+q*P;e[5]=n*B+p*y+s*U+q*N;e[9]=n*M+p*E+s*T+q*m;e[13]=n*I+p*K+s*H+q*d;e[2]=t*w+u*C+r*J+v*P;e[6]=t*B+u*y+r*U+v*N;e[10]=t*M+u*E+r*T+v*m;e[14]=t*I+u*K+r*H+v*d;e[3]=z*w+x*C+A*J+c*P;e[7]=z*B+x*y+A*U+c*N;e[11]=z*M+x*E+A*T+c*m;e[15]=z*I+x*K+A*H+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*
b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],l=a[13],n=a[2],p=a[6],s=a[10],q=a[14],t=a[3],u=a[7],r=a[11],a=a[15];return e*h*p*t-d*l*p*t-e*g*s*t+c*l*s*t+d*g*q*t-c*h*
q*t-e*h*n*u+d*l*n*u+e*f*s*u-b*l*s*u-d*f*q*u+b*h*q*u+e*g*n*r-c*l*n*r-e*f*p*r+b*l*p*r+c*f*q*r-b*g*q*r-d*g*n*a+c*h*n*a+d*f*p*a-b*h*p*a-c*f*s*a+b*g*s*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];
a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=
a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],l=c[5],n=c[9],p=c[13],s=c[2],q=c[6],t=c[10],u=c[14],r=c[3],v=c[7],z=c[11],c=c[15];b[0]=n*u*v-p*t*v+p*q*z-l*u*z-n*q*
c+l*t*c;b[4]=g*t*v-f*u*v-g*q*z+e*u*z+f*q*c-e*t*c;b[8]=f*p*v-g*n*v+g*l*z-e*p*z-f*l*c+e*n*c;b[12]=g*n*q-f*p*q-g*l*t+e*p*t+f*l*u-e*n*u;b[1]=p*t*r-n*u*r-p*s*z+h*u*z+n*s*c-h*t*c;b[5]=f*u*r-g*t*r+g*s*z-d*u*z-f*s*c+d*t*c;b[9]=g*n*r-f*p*r-g*h*z+d*p*z+f*h*c-d*n*c;b[13]=f*p*s-g*n*s+g*h*t-d*p*t-f*h*u+d*n*u;b[2]=l*u*r-p*q*r+p*s*v-h*u*v-l*s*c+h*q*c;b[6]=g*q*r-e*u*r-g*s*v+d*u*v+e*s*c-d*q*c;b[10]=e*p*r-g*l*r+g*h*v-d*p*v-e*h*c+d*l*c;b[14]=g*l*s-e*p*s-g*h*q+d*p*q+e*h*u-d*l*u;b[3]=n*q*r-l*t*r-n*s*v+h*t*v+l*s*z-h*q*
z;b[7]=e*t*r-f*q*r+f*s*v-d*t*v-e*s*z+d*q*z;b[11]=f*l*r-e*n*r-f*h*v+d*n*v+e*h*z-d*l*z;b[15]=e*n*s-f*l*s+f*h*q-d*n*q-e*h*t+d*l*t;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),l=Math.cos(f),f=Math.sin(f);switch(b){case "YXZ":var n=h*l,p=h*f,s=e*l,q=e*f;c[0]=n+q*d;c[4]=s*d-p;c[8]=g*e;c[1]=g*f;c[5]=g*l;c[9]=-d;c[2]=p*d-s;c[6]=q+n*d;c[10]=g*h;break;case "ZXY":n=h*l;p=h*
f;s=e*l;q=e*f;c[0]=n-q*d;c[4]=-g*f;c[8]=s+p*d;c[1]=p+s*d;c[5]=g*l;c[9]=q-n*d;c[2]=-g*e;c[6]=d;c[10]=g*h;break;case "ZYX":n=g*l;p=g*f;s=d*l;q=d*f;c[0]=h*l;c[4]=s*e-p;c[8]=n*e+q;c[1]=h*f;c[5]=q*e+n;c[9]=p*e-s;c[2]=-e;c[6]=d*h;c[10]=g*h;break;case "YZX":n=g*h;p=g*e;s=d*h;q=d*e;c[0]=h*l;c[4]=q-n*f;c[8]=s*f+p;c[1]=f;c[5]=g*l;c[9]=-d*l;c[2]=-e*l;c[6]=p*f+s;c[10]=n-q*f;break;case "XZY":n=g*h;p=g*e;s=d*h;q=d*e;c[0]=h*l;c[4]=-f;c[8]=e*l;c[1]=n*f+q;c[5]=g*l;c[9]=p*f-s;c[2]=s*f-p;c[6]=d*l;c[10]=q*f+n;break;
default:n=g*l,p=g*f,s=d*l,q=d*f,c[0]=h*l,c[4]=-h*f,c[8]=e,c[1]=p+s*e,c[5]=n-q*e,c[9]=-d*h,c[2]=q-n*e,c[6]=s+p*e,c[10]=g*h}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,l=e+e;a=c*g;var n=c*h,c=c*l,p=d*h,d=d*l,e=e*l,g=f*g,h=f*h,f=f*l;b[0]=1-(p+e);b[4]=n-f;b[8]=c+h;b[1]=n+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+p);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);
f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;
d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],
a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],l=b[10],n=b[11],p=Math.cos(a);a=Math.sin(a);b[4]=p*c+a*g;b[5]=p*d+a*
h;b[6]=p*e+a*l;b[7]=p*f+a*n;b[8]=p*g-a*c;b[9]=p*h-a*d;b[10]=p*l-a*e;b[11]=p*n-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],l=b[10],n=b[11],p=Math.cos(a);a=Math.sin(a);b[0]=p*c-a*g;b[1]=p*d-a*h;b[2]=p*e-a*l;b[3]=p*f-a*n;b[8]=p*g+a*c;b[9]=p*h+a*d;b[10]=p*l+a*e;b[11]=p*n+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],l=b[6],n=b[7],p=Math.cos(a);a=Math.sin(a);b[0]=p*c+a*g;b[1]=p*d+a*h;b[2]=p*e+a*
l;b[3]=p*f+a*n;b[4]=p*g-a*c;b[5]=p*h-a*d;b[6]=p*l-a*e;b[7]=p*n-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,l=f*f,n=Math.cos(b),p=Math.sin(b),s=1-n,q=d*e*s,t=d*f*s,s=e*f*s,d=d*p,u=e*p,p=f*p,f=g+(1-g)*n,g=q+p,e=t-u,q=q-p,h=h+(1-h)*n,p=s+d,t=t+u,s=s-d,
l=l+(1-l)*n,n=c[0],d=c[1],u=c[2],r=c[3],v=c[4],z=c[5],x=c[6],A=c[7],w=c[8],B=c[9],M=c[10],I=c[11];c[0]=f*n+g*v+e*w;c[1]=f*d+g*z+e*B;c[2]=f*u+g*x+e*M;c[3]=f*r+g*A+e*I;c[4]=q*n+h*v+p*w;c[5]=q*d+h*z+p*B;c[6]=q*u+h*x+p*M;c[7]=q*r+h*A+p*I;c[8]=t*n+s*v+l*w;c[9]=t*d+s*z+l*B;c[10]=t*u+s*x+l*M;c[11]=t*r+s*A+l*I;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=
this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);
a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,l=e*f,n=e*g;this.set(l*f+c,l*g-d*h,l*h+d*g,0,l*g+d*h,n*g+c,n*h-d*f,0,l*h-d*g,n*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=
0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,l=c-d,n=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/l;g[9]=0;g[13]=-((c+d)/l);g[2]=0;g[6]=0;g[10]=-2/n;g[14]=-((f+e)/n);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],
a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);this.rotation.getRotationFromMatrix(this.matrix,this.scale);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,
this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=
this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,e;c=0;for(d=this.children.length;c<d;c++)if(e=this.children[c],e.name===a||b&&(e=e.getChildByName(a,b),void 0!==e))return e},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,
this.eulerOrder);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=g[f]=g[f]||new THREE.RenderableObject;f++;return a}function b(){var a=n[l]=n[l]||new THREE.RenderableVertex;l++;return a}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}
var e,f,g=[],h,l,n=[],p,s,q=[],t,u=[],r,v,z=[],x,A,w=[],B={objects:[],sprites:[],lights:[],elements:[]},M=new THREE.Vector3,I=new THREE.Vector4,C=new THREE.Matrix4,y=new THREE.Matrix4,E=new THREE.Frustum,K=new THREE.Vector4,J=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);C.multiply(b.projectionMatrix,b.matrixWorldInverse);C.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);C.multiply(b.matrixWorld,
b.projectionMatrixInverse);C.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,d){f=0;B.objects.length=0;B.sprites.length=0;B.lights.length=0;var g=function(b){if(!1!==b.visible){(b instanceof THREE.Mesh||b instanceof THREE.Line)&&(!1===b.frustumCulled||E.contains(b))?(M.copy(b.matrixWorld.getPosition()),C.multiplyVector3(M),
e=a(),e.object=b,e.z=M.z,B.objects.push(e)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(M.copy(b.matrixWorld.getPosition()),C.multiplyVector3(M),e=a(),e.object=b,e.z=M.z,B.sprites.push(e)):b instanceof THREE.Light&&B.lights.push(b);for(var c=0,d=b.children.length;c<d;c++)g(b.children[c])}};g(b);d&&B.objects.sort(c);return B};this.projectScene=function(a,e,f){var g=e.near,N=e.far,m=!1,M,X,G,Y,L,fa,ia,ka,S,Z,ca,ea,da,Ha,Ja;A=v=t=s=0;B.elements.length=0;void 0===e.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(e));a.updateMatrixWorld();e.matrixWorldInverse.getInverse(e.matrixWorld);C.multiply(e.projectionMatrix,e.matrixWorldInverse);E.setFromMatrix(C);B=this.projectGraph(a,!1);a=0;for(M=B.objects.length;a<M;a++)if(S=B.objects[a].object,Z=S.matrixWorld,l=0,S instanceof THREE.Mesh){ca=S.geometry;ea=S.geometry.materials;Y=ca.vertices;da=ca.faces;Ha=ca.faceVertexUvs;ca=S.matrixRotationWorld.extractRotation(Z);X=0;for(G=Y.length;X<G;X++)h=b(),h.positionWorld.copy(Y[X]),Z.multiplyVector3(h.positionWorld),
h.positionScreen.copy(h.positionWorld),C.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>g&&h.positionScreen.z<N;Y=0;for(X=da.length;Y<X;Y++){G=da[Y];if(G instanceof THREE.Face3)if(L=n[G.a],fa=n[G.b],ia=n[G.c],L.visible&&fa.visible&&ia.visible)if(m=0>(ia.positionScreen.x-L.positionScreen.x)*(fa.positionScreen.y-L.positionScreen.y)-(ia.positionScreen.y-L.positionScreen.y)*(fa.positionScreen.x-L.positionScreen.x),
S.doubleSided||m!=S.flipSided)ka=q[s]=q[s]||new THREE.RenderableFace3,s++,p=ka,p.v1.copy(L),p.v2.copy(fa),p.v3.copy(ia);else continue;else continue;else if(G instanceof THREE.Face4)if(L=n[G.a],fa=n[G.b],ia=n[G.c],ka=n[G.d],L.visible&&fa.visible&&ia.visible&&ka.visible)if(m=0>(ka.positionScreen.x-L.positionScreen.x)*(fa.positionScreen.y-L.positionScreen.y)-(ka.positionScreen.y-L.positionScreen.y)*(fa.positionScreen.x-L.positionScreen.x)||0>(fa.positionScreen.x-ia.positionScreen.x)*(ka.positionScreen.y-
ia.positionScreen.y)-(fa.positionScreen.y-ia.positionScreen.y)*(ka.positionScreen.x-ia.positionScreen.x),S.doubleSided||m!=S.flipSided)Ja=u[t]=u[t]||new THREE.RenderableFace4,t++,p=Ja,p.v1.copy(L),p.v2.copy(fa),p.v3.copy(ia),p.v4.copy(ka);else continue;else continue;p.normalWorld.copy(G.normal);!m&&(S.flipSided||S.doubleSided)&&p.normalWorld.negate();ca.multiplyVector3(p.normalWorld);p.centroidWorld.copy(G.centroid);Z.multiplyVector3(p.centroidWorld);p.centroidScreen.copy(p.centroidWorld);C.multiplyVector3(p.centroidScreen);
ia=G.vertexNormals;L=0;for(fa=ia.length;L<fa;L++)ka=p.vertexNormalsWorld[L],ka.copy(ia[L]),!m&&(S.flipSided||S.doubleSided)&&ka.negate(),ca.multiplyVector3(ka);L=0;for(fa=Ha.length;L<fa;L++)if(Ja=Ha[L][Y])for(ia=0,ka=Ja.length;ia<ka;ia++)p.uvs[L][ia]=Ja[ia];p.material=S.material;p.faceMaterial=null!==G.materialIndex?ea[G.materialIndex]:null;p.z=p.centroidScreen.z;B.elements.push(p)}}else if(S instanceof THREE.Line)for(y.multiply(C,Z),Y=S.geometry.vertices,L=b(),L.positionScreen.copy(Y[0]),y.multiplyVector4(L.positionScreen),
Z=S.type===THREE.LinePieces?2:1,X=1,G=Y.length;X<G;X++)L=b(),L.positionScreen.copy(Y[X]),y.multiplyVector4(L.positionScreen),0<(X+1)%Z||(fa=n[l-2],K.copy(L.positionScreen),J.copy(fa.positionScreen),d(K,J)&&(K.multiplyScalar(1/K.w),J.multiplyScalar(1/J.w),ea=z[v]=z[v]||new THREE.RenderableLine,v++,r=ea,r.v1.positionScreen.copy(K),r.v2.positionScreen.copy(J),r.z=Math.max(K.z,J.z),r.material=S.material,B.elements.push(r)));a=0;for(M=B.sprites.length;a<M;a++)S=B.sprites[a].object,Z=S.matrixWorld,S instanceof
THREE.Particle&&(I.set(Z.elements[12],Z.elements[13],Z.elements[14],1),C.multiplyVector4(I),I.z/=I.w,0<I.z&&1>I.z&&(g=w[A]=w[A]||new THREE.RenderableParticle,A++,x=g,x.x=I.x/I.w,x.y=I.y/I.w,x.z=I.z,x.rotation=S.rotation.z,x.scale.x=S.scale.x*Math.abs(x.x-(I.x+e.projectionMatrix.elements[0])/(I.w+e.projectionMatrix.elements[12])),x.scale.y=S.scale.y*Math.abs(x.y-(I.y+e.projectionMatrix.elements[5])/(I.w+e.projectionMatrix.elements[13])),x.material=S.material,B.elements.push(x)));f&&B.elements.sort(c);
return B}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,e=a.z*b;a=Math.cos(d);var d=Math.sin(d),b=Math.cos(-e),e=Math.sin(-e),f=Math.cos(c),c=Math.sin(c),g=a*b,h=d*e;this.w=g*f-h*c;this.x=g*c+h*f;this.y=d*b*f+a*e*c;this.z=a*e*f-d*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);
this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.elements[0]+a.elements[5]+a.elements[10]))/2;this.x=Math.sqrt(Math.max(0,b+a.elements[0]-a.elements[5]-a.elements[10]))/2;this.y=Math.sqrt(Math.max(0,b-a.elements[0]+a.elements[5]-a.elements[10]))/2;this.z=Math.sqrt(Math.max(0,b-a.elements[0]-a.elements[5]+a.elements[10]))/2;this.x=0>a.elements[6]-a.elements[9]?-Math.abs(this.x):
Math.abs(this.x);this.y=0>a.elements[8]-a.elements[2]?-Math.abs(this.y):Math.abs(this.y);this.z=0>a.elements[1]-a.elements[4]?-Math.abs(this.z):Math.abs(this.z);this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=
e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,l=this.w,n=l*c+g*e-h*d,p=l*d+h*c-f*e,s=l*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=n*l+c*-f+p*-h-s*-g;b.y=p*l+c*-g+s*-f-n*-h;b.z=s*l+c*-h+n*-g-p*-f;return b},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(e),e=Math.sqrt(1-e*e);if(0.001>Math.abs(e))return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-d)*f)/e;d=Math.sin(d*f)/e;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(d=this.__tmpVertices,a=0,b=this.vertices.length;a<b;a++)d[a].set(0,0,0);a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):
e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,l,n;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=new THREE.Vector3,n=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(l),h.push(n)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=g.faceNormals[c],n=g.vertexNormals[c],
l.copy(e.normal),e instanceof THREE.Face3?(n.a.copy(e.vertexNormals[0]),n.b.copy(e.vertexNormals[1]),n.c.copy(e.vertexNormals[2])):(n.a.copy(e.vertexNormals[0]),n.b.copy(e.vertexNormals[1]),n.c.copy(e.vertexNormals[2]),n.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,L){h=a.vertices[b];l=a.vertices[c];n=a.vertices[d];p=g[e];s=g[f];q=g[L];t=l.x-
h.x;u=n.x-h.x;r=l.y-h.y;v=n.y-h.y;z=l.z-h.z;x=n.z-h.z;A=s.u-p.u;w=q.u-p.u;B=s.v-p.v;M=q.v-p.v;I=1/(A*M-w*B);K.set((M*t-B*u)*I,(M*r-B*v)*I,(M*z-B*x)*I);J.set((A*u-w*t)*I,(A*v-w*r)*I,(A*x-w*z)*I);y[b].addSelf(K);y[c].addSelf(K);y[d].addSelf(K);E[b].addSelf(J);E[c].addSelf(J);E[d].addSelf(J)}var b,c,d,e,f,g,h,l,n,p,s,q,t,u,r,v,z,x,A,w,B,M,I,C,y=[],E=[],K=new THREE.Vector3,J=new THREE.Vector3,U=new THREE.Vector3,T=new THREE.Vector3,H=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)y[b]=new THREE.Vector3,
E[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var P=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++)for(f=this.faces[b],d=0;d<f.vertexNormals.length;d++)H.copy(f.vertexNormals[d]),e=f[P[d]],C=y[e],U.copy(C),U.subSelf(H.multiplyScalar(H.dot(C))).normalize(),T.cross(f.vertexNormals[d],C),e=T.dot(E[e]),e=0>e?-1:
1,f.vertexTangents[d]=new THREE.Vector4(U.x,U.y,U.z,e);this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&
(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var a,b=0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c].length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=f,
b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(e=this.faces[f],e instanceof THREE.Face3)e.a=c[e.a],e.b=c[e.b],e.c=c[e.c];else if(e instanceof THREE.Face4)for(e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e.d=c[e.d],d=[e.a,e.b,e.c,e.d],a=3;0<a;a--)if(d.indexOf(e["abcd"[a]])!=a){d.splice(a,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2]);e=0;for(d=this.faceVertexUvs.length;e<d;e++)(h=this.faceVertexUvs[e][f])&&h.splice(a,1);break}c=this.vertices.length-b.length;this.vertices=
b;return c}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,l,n,p,s,q;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;n=this.points[c[0]];p=this.points[c[1]];s=this.points[c[2]];q=this.points[c[3]];h=g*g;l=g*h;d.x=b(n.x,p.x,s.x,q.x,g,h,l);d.y=b(n.y,p.y,s.y,q.y,g,h,l);d.z=b(n.z,p.z,s.z,q.z,g,h,l);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],l=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/
c,d=this.getPoint(b),g.copy(d),l+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=l,e=b);h[h.length]=l;return{chunks:h,total:l}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],l=new THREE.Vector3,p=this.getLength();h.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=p.chunks[b]-p.chunks[b-1];g=Math.ceil(a*c/p.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),h.push(l.copy(d).clone());
h.push(l.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,b){var e=new Image;e.onload=function(){if(c(this.width)&&c(this.height))a.image=this;else{var b=d(this.width),e=d(this.height);a.image.width=b;a.image.height=e;a.image.getContext("2d").drawImage(this,0,0,b,e)}a.needsUpdate=!0};e.crossOrigin=h.crossOrigin;e.src=b}function f(a,c,d,f,g,h){var l=document.createElement("canvas");a[c]=new THREE.Texture(l);a[c].sourceFile=d;f&&
(a[c].repeat.set(f[0],f[1]),1!=f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!=f[1]&&(a[c].wrapT=THREE.RepeatWrapping));g&&a[c].offset.set(g[0],g[1]);h&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[h[0]]&&(a[c].wrapS=f[h[0]]),void 0!==f[h[1]]&&(a[c].wrapT=f[h[1]]));e(a[c],b+"/"+d)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,l="MeshLambertMaterial",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};if(a.shading){var p=
a.shading.toLowerCase();"phong"===p?l="MeshPhongMaterial":"basic"===p&&(l="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(n.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)n.transparent=a.transparent;void 0!==a.depthTest&&(n.depthTest=a.depthTest);void 0!==a.depthWrite&&(n.depthWrite=a.depthWrite);void 0!==a.vertexColors&&("face"==a.vertexColors?n.vertexColors=THREE.FaceColors:a.vertexColors&&(n.vertexColors=THREE.VertexColors));a.colorDiffuse?n.color=g(a.colorDiffuse):
a.DbgColor&&(n.color=a.DbgColor);a.colorSpecular&&(n.specular=g(a.colorSpecular));a.colorAmbient&&(n.ambient=g(a.colorAmbient));a.transparency&&(n.opacity=a.transparency);a.specularCoef&&(n.shininess=a.specularCoef);a.mapDiffuse&&b&&f(n,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&b&&f(n,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&b&&f(n,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);a.mapSpecular&&
b&&f(n,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);a.mapNormal?(l=THREE.ShaderUtils.lib.normal,p=THREE.UniformsUtils.clone(l.uniforms),p.tNormal.texture=n.normalMap,a.mapNormalFactor&&(p.uNormalScale.value=a.mapNormalFactor),n.map&&(p.tDiffuse.texture=n.map,p.enableDiffuse.value=!0),n.specularMap&&(p.tSpecular.texture=n.specularMap,p.enableSpecular.value=!0),n.lightMap&&(p.tAO.texture=n.lightMap,p.enableAO.value=!0),p.uDiffuseColor.value.setHex(n.color),
p.uSpecularColor.value.setHex(n.specular),p.uAmbientColor.value.setHex(n.ambient),p.uShininess.value=n.shininess,void 0!==n.opacity&&(p.uOpacity.value=n.opacity),n=new THREE.ShaderMaterial({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:p,lights:!0,fog:!0})):n=new THREE[l](n);void 0!==a.DbgName&&(n.name=a.DbgName);return n}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.overrideMimeType&&g.overrideMimeType("text/plain; charset=x-user-defined");g.setRequestHeader("Content-Type","text/plain");g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){4==f.readyState?200==f.status||0==f.status?THREE.BinaryLoader.prototype.createBinModel(f.response,b,d,a.materials):console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]"):3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};
f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){function c(a){return a%4?4-a%4:0}function e(a,b){return(new Uint8Array(a,b,1))[0]}function l(a,b){return(new Uint32Array(a,b,1))[0]}function n(b,c){var d,e,f,g,h,m,l,p,n=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=n[3*d];f=n[3*d+1];g=n[3*d+2];h=N[2*e];e=N[2*e+1];m=N[2*f];l=N[2*f+1];f=N[2*g];p=N[2*g+1];g=T.faceVertexUvs[0];var q=[];q.push(new THREE.UV(h,e));q.push(new THREE.UV(m,l));q.push(new THREE.UV(f,p));g.push(q)}}
function p(b,c){var d,e,f,g,h,m,l,p,n,q,r=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=r[4*d];f=r[4*d+1];g=r[4*d+2];h=r[4*d+3];m=N[2*e];e=N[2*e+1];l=N[2*f];n=N[2*f+1];p=N[2*g];q=N[2*g+1];g=N[2*h];f=N[2*h+1];h=T.faceVertexUvs[0];var s=[];s.push(new THREE.UV(m,e));s.push(new THREE.UV(l,n));s.push(new THREE.UV(p,q));s.push(new THREE.UV(g,f));h.push(s)}}function s(b,c,d){var e,f,g,h;c=new Uint32Array(a,c,3*b);var m=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=m[d],T.faces.push(new THREE.Face3(e,
f,g,null,null,h))}function q(b,c,d){var e,f,g,h,m;c=new Uint32Array(a,c,4*b);var l=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],m=l[d],T.faces.push(new THREE.Face4(e,f,g,h,null,null,m))}function t(b,c,d,e){var f,g,h,m,l,p,n;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var q=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];l=d[3*e];p=d[3*e+1];n=d[3*e+2];m=q[e];var r=P[3*p],s=P[3*p+1];p=P[3*p+2];var t=P[3*n],u=P[3*n+1];n=P[3*n+2];T.faces.push(new THREE.Face3(f,
g,h,[new THREE.Vector3(P[3*l],P[3*l+1],P[3*l+2]),new THREE.Vector3(r,s,p),new THREE.Vector3(t,u,n)],null,m))}}function u(b,c,d,e){var f,g,h,m,l,p,n,q,r;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var s=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];m=c[4*e+3];p=d[4*e];n=d[4*e+1];q=d[4*e+2];r=d[4*e+3];l=s[e];var t=P[3*n],u=P[3*n+1];n=P[3*n+2];var v=P[3*q],w=P[3*q+1];q=P[3*q+2];var y=P[3*r],x=P[3*r+1];r=P[3*r+2];T.faces.push(new THREE.Face4(f,g,h,m,[new THREE.Vector3(P[3*
p],P[3*p+1],P[3*p+2]),new THREE.Vector3(t,u,n),new THREE.Vector3(v,w,q),new THREE.Vector3(y,x,r)],null,l))}}var r,v,z,x,A,w,B,M,I,C,y,E,K,J,U,T=this,H=0,P=[],N=[],m,V,X;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(T,d,b);(function(a,b,c){a=new Uint8Array(a,b,c);for(var d="",e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d})(a,H,12);r=e(a,H+12);e(a,H+13);e(a,H+14);e(a,H+15);v=e(a,H+16);z=e(a,H+17);x=e(a,H+18);A=e(a,H+19);w=l(a,H+20);B=l(a,H+20+4);M=l(a,H+20+8);b=l(a,H+20+12);I=
l(a,H+20+16);C=l(a,H+20+20);y=l(a,H+20+24);E=l(a,H+20+28);K=l(a,H+20+32);J=l(a,H+20+36);U=l(a,H+20+40);H+=r;r=3*v+A;X=4*v+A;m=b*r;V=I*(r+3*z);v=C*(r+3*x);A=y*(r+3*z+3*x);r=E*X;z=K*(X+4*z);x=J*(X+4*x);H+=function(b){b=new Float32Array(a,b,3*w);var c,d,e,f;for(c=0;c<w;c++)d=b[3*c],e=b[3*c+1],f=b[3*c+2],T.vertices.push(new THREE.Vector3(d,e,f));return 3*w*Float32Array.BYTES_PER_ELEMENT}(H);H+=function(b){if(B){b=new Int8Array(a,b,3*B);var c,d,e,f;for(c=0;c<B;c++)d=b[3*c],e=b[3*c+1],f=b[3*c+2],P.push(d/
127,e/127,f/127)}return 3*B*Int8Array.BYTES_PER_ELEMENT}(H);H+=c(3*B);H+=function(b){if(M){b=new Float32Array(a,b,2*M);var c,d,e;for(c=0;c<M;c++)d=b[2*c],e=b[2*c+1],N.push(d,e)}return 2*M*Float32Array.BYTES_PER_ELEMENT}(H);m=H+m+c(2*b);V=m+V+c(2*I);v=V+v+c(2*C);A=v+A+c(2*y);r=A+r+c(2*E);z=r+z+c(2*K);x=z+x+c(2*J);(function(a){if(C){var b=a+3*C*Uint32Array.BYTES_PER_ELEMENT;s(C,a,b+3*C*Uint32Array.BYTES_PER_ELEMENT);n(C,b)}})(V);(function(a){if(y){var b=a+3*y*Uint32Array.BYTES_PER_ELEMENT,c=b+3*y*Uint32Array.BYTES_PER_ELEMENT;
t(y,a,b,c+3*y*Uint32Array.BYTES_PER_ELEMENT);n(y,c)}})(v);(function(a){if(J){var b=a+4*J*Uint32Array.BYTES_PER_ELEMENT;q(J,a,b+4*J*Uint32Array.BYTES_PER_ELEMENT);p(J,b)}})(z);(function(a){if(U){var b=a+4*U*Uint32Array.BYTES_PER_ELEMENT,c=b+4*U*Uint32Array.BYTES_PER_ELEMENT;u(U,a,b,c+4*U*Uint32Array.BYTES_PER_ELEMENT);p(U,c)}})(x);b&&s(b,H,H+3*b*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(I){var b=a+3*I*Uint32Array.BYTES_PER_ELEMENT;t(I,a,b,b+3*I*Uint32Array.BYTES_PER_ELEMENT)}})(m);E&&q(E,A,A+
4*E*Uint32Array.BYTES_PER_ELEMENT);(function(a){if(K){var b=a+4*K*Uint32Array.BYTES_PER_ELEMENT;u(K,a,b,b+4*K*Uint32Array.BYTES_PER_ELEMENT)}})(r);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(c))};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined");f.setRequestHeader("Content-Type","text/plain");f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(b){var c,e,l,n,p,s,q,t,u,r,v,z,x,A,w=a.faces;s=a.vertices;var B=a.normals,M=a.colors,I=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&I++;for(c=0;c<I;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];n=0;for(p=s.length;n<p;)q=new THREE.Vector3,q.x=s[n++]*b,q.y=s[n++]*b,q.z=s[n++]*b,d.vertices.push(q);n=0;for(p=w.length;n<p;){b=w[n++];s=b&1;l=b&2;c=b&4;
e=b&8;t=b&16;q=b&32;r=b&64;b&=128;s?(v=new THREE.Face4,v.a=w[n++],v.b=w[n++],v.c=w[n++],v.d=w[n++],s=4):(v=new THREE.Face3,v.a=w[n++],v.b=w[n++],v.c=w[n++],s=3);l&&(l=w[n++],v.materialIndex=l);l=d.faces.length;if(c)for(c=0;c<I;c++)z=a.uvs[c],u=w[n++],A=z[2*u],u=z[2*u+1],d.faceUvs[c][l]=new THREE.UV(A,u);if(e)for(c=0;c<I;c++){z=a.uvs[c];x=[];for(e=0;e<s;e++)u=w[n++],A=z[2*u],u=z[2*u+1],x[e]=new THREE.UV(A,u);d.faceVertexUvs[c][l]=x}t&&(t=3*w[n++],e=new THREE.Vector3,e.x=B[t++],e.y=B[t++],e.z=B[t],
v.normal=e);if(q)for(c=0;c<s;c++)t=3*w[n++],e=new THREE.Vector3,e.x=B[t++],e.y=B[t++],e.z=B[t],v.vertexNormals.push(e);r&&(q=w[n++],q=new THREE.Color(M[q]),v.color=q);if(b)for(c=0;c<s;c++)q=w[n++],q=new THREE.Color(M[q]),v.vertexColors.push(q);d.faces.push(v)}})(e);(function(){var b,c,e,l;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)e=a.skinWeights[b],l=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(e,l,0,0));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<c;b+=2)e=a.skinIndices[b],
l=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(e,l,0,0));d.bones=a.bones;d.animation=a.animation})();(function(b){if(void 0!==a.morphTargets){var c,e,l,n,p,s;c=0;for(e=a.morphTargets.length;c<e;c++)for(d.morphTargets[c]={},d.morphTargets[c].name=a.morphTargets[c].name,d.morphTargets[c].vertices=[],p=d.morphTargets[c].vertices,s=a.morphTargets[c].vertices,l=0,n=s.length;l<n;l+=3){var q=new THREE.Vector3;q.x=s[l]*b;q.y=s[l+1]*b;q.z=s[l+2]*b;p.push(q)}}if(void 0!==a.morphColors)for(c=0,e=
a.morphColors.length;c<e;c++)for(d.morphColors[c]={},d.morphColors[c].name=a.morphColors[c].name,d.morphColors[c].colors=[],n=d.morphColors[c].colors,p=a.morphColors[c].colors,b=0,l=p.length;b<l;b+=3)s=new THREE.Color(16755200),s.setRGB(p[b],p[b+1],p[b+2]),n.push(s)})(e);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4==d.readyState)if(200==d.status||0==d.status){var e=JSON.parse(d.responseText);c.createScene(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined");d.setRequestHeader("Content-Type","text/plain");d.send(null)};
THREE.SceneLoader.prototype.createScene=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:n+"/"+a}function e(){var a;for(q in H.objects)if(!G.objects[q])if(z=H.objects[q],void 0!==z.geometry){if(K=G.geometries[z.geometry])J=G.materials[z.materials[0]],J instanceof THREE.ShaderMaterial&&K.computeTangents(),B=z.position,M=z.rotation,I=z.quaternion,C=z.scale,x=z.matrix,I=0,0==z.materials.length&&(J=new THREE.MeshFaceMaterial),1<z.materials.length&&(J=new THREE.MeshFaceMaterial),a=new THREE.Mesh(K,
J),a.name=q,x?(a.matrixAutoUpdate=!1,a.matrix.set(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15])):(a.position.set(B[0],B[1],B[2]),I?(a.quaternion.set(I[0],I[1],I[2],I[3]),a.useQuaternion=!0):a.rotation.set(M[0],M[1],M[2]),a.scale.set(C[0],C[1],C[2])),a.visible=z.visible,a.doubleSided=z.doubleSided,a.castShadow=z.castShadow,a.receiveShadow=z.receiveShadow,G.scene.add(a),G.objects[q]=a}else B=z.position,M=z.rotation,I=z.quaternion,C=z.scale,I=0,a=new THREE.Object3D,
a.name=q,a.position.set(B[0],B[1],B[2]),I?(a.quaternion.set(I[0],I[1],I[2],I[3]),a.useQuaternion=!0):a.rotation.set(M[0],M[1],M[2]),a.scale.set(C[0],C[1],C[2]),a.visible=void 0!==z.visible?z.visible:!1,G.scene.add(a),G.objects[q]=a,G.empties[q]=a}function f(a){return function(b){G.geometries[a]=b;e();N-=1;l.onLoadComplete();h()}}function g(a){return function(b){G.geometries[a]=b}}function h(){l.callbackProgress({totalModels:V,totalTextures:X,loadedModels:V-N,loadedTextures:X-m},G);l.onLoadProgress();
0==N&&0==m&&b(G)}var l=this,n=THREE.Loader.prototype.extractUrlBase(c),p,s,q,t,u,r,v,z,x,A,w,B,M,I,C,y,E,K,J,U,T,H,P,N,m,V,X,G;H=a;c=new THREE.BinaryLoader;P=new THREE.JSONLoader;m=N=0;G={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};H.transform&&(a=H.transform.position,A=H.transform.rotation,y=H.transform.scale,a&&G.scene.position.set(a[0],a[1],a[2]),A&&G.scene.rotation.set(A[0],A[1],A[2]),y&&G.scene.scale.set(y[0],y[1],y[2]),a||
A||y)&&(G.scene.updateMatrix(),G.scene.updateMatrixWorld());a=function(){m-=1;h();l.onLoadComplete()};for(u in H.cameras)y=H.cameras[u],"perspective"==y.type?U=new THREE.PerspectiveCamera(y.fov,y.aspect,y.near,y.far):"ortho"==y.type&&(U=new THREE.OrthographicCamera(y.left,y.right,y.top,y.bottom,y.near,y.far)),B=y.position,A=y.target,y=y.up,U.position.set(B[0],B[1],B[2]),U.target=new THREE.Vector3(A[0],A[1],A[2]),y&&U.up.set(y[0],y[1],y[2]),G.cameras[u]=U;for(t in H.lights)A=H.lights[t],u=void 0!==
A.color?A.color:16777215,U=void 0!==A.intensity?A.intensity:1,"directional"==A.type?(B=A.direction,w=new THREE.DirectionalLight(u,U),w.position.set(B[0],B[1],B[2]),w.position.normalize()):"point"==A.type?(B=A.position,w=A.distance,w=new THREE.PointLight(u,U,w),w.position.set(B[0],B[1],B[2])):"ambient"==A.type&&(w=new THREE.AmbientLight(u)),G.scene.add(w),G.lights[t]=w;for(r in H.fogs)t=H.fogs[r],"linear"==t.type?T=new THREE.Fog(0,t.near,t.far):"exp2"==t.type&&(T=new THREE.FogExp2(0,t.density)),y=
t.color,T.color.setRGB(y[0],y[1],y[2]),G.fogs[r]=T;G.cameras&&H.defaults.camera&&(G.currentCamera=G.cameras[H.defaults.camera]);G.fogs&&H.defaults.fog&&(G.scene.fog=G.fogs[H.defaults.fog]);y=H.defaults.bgcolor;G.bgColor=new THREE.Color;G.bgColor.setRGB(y[0],y[1],y[2]);G.bgColorAlpha=H.defaults.bgalpha;for(p in H.geometries)if(r=H.geometries[p],"bin_mesh"==r.type||"ascii_mesh"==r.type)N+=1,l.onLoadStart();V=N;for(p in H.geometries)r=H.geometries[p],"cube"==r.type?(K=new THREE.CubeGeometry(r.width,
r.height,r.depth,r.segmentsWidth,r.segmentsHeight,r.segmentsDepth,null,r.flipped,r.sides),G.geometries[p]=K):"plane"==r.type?(K=new THREE.PlaneGeometry(r.width,r.height,r.segmentsWidth,r.segmentsHeight),G.geometries[p]=K):"sphere"==r.type?(K=new THREE.SphereGeometry(r.radius,r.segmentsWidth,r.segmentsHeight),G.geometries[p]=K):"cylinder"==r.type?(K=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),G.geometries[p]=K):"torus"==r.type?(K=new THREE.TorusGeometry(r.radius,r.tube,
r.segmentsR,r.segmentsT),G.geometries[p]=K):"icosahedron"==r.type?(K=new THREE.IcosahedronGeometry(r.radius,r.subdivisions),G.geometries[p]=K):"bin_mesh"==r.type?c.load(d(r.url,H.urlBaseType),f(p)):"ascii_mesh"==r.type?P.load(d(r.url,H.urlBaseType),f(p)):"embedded_mesh"==r.type&&(r=H.embeds[r.id],r.metadata=H.metadata,r&&P.createModel(r,g(p),""));for(v in H.textures)if(p=H.textures[v],p.url instanceof Array)for(m+=p.url.length,r=0;r<p.url.length;r++)l.onLoadStart();else m+=1,l.onLoadStart();X=m;for(v in H.textures){p=
H.textures[v];void 0!=p.mapping&&void 0!=THREE[p.mapping]&&(p.mapping=new THREE[p.mapping]);if(p.url instanceof Array){r=[];for(T=0;T<p.url.length;T++)r[T]=d(p.url[T],H.urlBaseType);r=THREE.ImageUtils.loadTextureCube(r,p.mapping,a)}else r=THREE.ImageUtils.loadTexture(d(p.url,H.urlBaseType),p.mapping,a),void 0!=THREE[p.minFilter]&&(r.minFilter=THREE[p.minFilter]),void 0!=THREE[p.magFilter]&&(r.magFilter=THREE[p.magFilter]),p.repeat&&(r.repeat.set(p.repeat[0],p.repeat[1]),1!=p.repeat[0]&&(r.wrapS=THREE.RepeatWrapping),
1!=p.repeat[1]&&(r.wrapT=THREE.RepeatWrapping)),p.offset&&r.offset.set(p.offset[0],p.offset[1]),p.wrap&&(T={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==T[p.wrap[0]]&&(r.wrapS=T[p.wrap[0]]),void 0!==T[p.wrap[1]]&&(r.wrapT=T[p.wrap[1]]));G.textures[v]=r}for(s in H.materials){x=H.materials[s];for(E in x.parameters)"envMap"==E||"map"==E||"lightMap"==E?x.parameters[E]=G.textures[x.parameters[E]]:"shading"==E?x.parameters[E]="flat"==x.parameters[E]?THREE.FlatShading:THREE.SmoothShading:
"blending"==E?x.parameters[E]=THREE[x.parameters[E]]?THREE[x.parameters[E]]:THREE.NormalBlending:"combine"==E?x.parameters[E]="MixOperation"==x.parameters[E]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"==E&&("face"==x.parameters[E]?x.parameters[E]=THREE.FaceColors:x.parameters[E]&&(x.parameters[E]=THREE.VertexColors));void 0!==x.parameters.opacity&&1>x.parameters.opacity&&(x.parameters.transparent=!0);x.parameters.normalMap?(v=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(v.uniforms),
p=x.parameters.color,r=x.parameters.specular,T=x.parameters.ambient,c=x.parameters.shininess,a.tNormal.texture=G.textures[x.parameters.normalMap],x.parameters.normalMapFactor&&(a.uNormalScale.value=x.parameters.normalMapFactor),x.parameters.map&&(a.tDiffuse.texture=x.parameters.map,a.enableDiffuse.value=!0),x.parameters.lightMap&&(a.tAO.texture=x.parameters.lightMap,a.enableAO.value=!0),x.parameters.specularMap&&(a.tSpecular.texture=G.textures[x.parameters.specularMap],a.enableSpecular.value=!0),
a.uDiffuseColor.value.setHex(p),a.uSpecularColor.value.setHex(r),a.uAmbientColor.value.setHex(T),a.uShininess.value=c,x.parameters.opacity&&(a.uOpacity.value=x.parameters.opacity),J=new THREE.ShaderMaterial({fragmentShader:v.fragmentShader,vertexShader:v.vertexShader,uniforms:a,lights:!0,fog:!0})):J=new THREE[x.type](x.parameters);G.materials[s]=J}e();l.callbackSync(G);h()};
THREE.Material=function(a){a=a||{};this.id=THREE.MaterialCount++;this.name="";this.opacity=void 0!==a.opacity?a.opacity:1;this.transparent=void 0!==a.transparent?a.transparent:!1;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.depthTest=void 0!==a.depthTest?a.depthTest:
!0;this.depthWrite=void 0!==a.depthWrite?a.depthWrite:!0;this.polygonOffset=void 0!==a.polygonOffset?a.polygonOffset:!1;this.polygonOffsetFactor=void 0!==a.polygonOffsetFactor?a.polygonOffsetFactor:0;this.polygonOffsetUnits=void 0!==a.polygonOffsetUnits?a.polygonOffsetUnits:0;this.alphaTest=void 0!==a.alphaTest?a.alphaTest:0;this.overdraw=void 0!==a.overdraw?a.overdraw:!1;this.needsUpdate=this.visible=!0};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;
THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.AdditiveAlphaBlending=5;THREE.CustomBlending=6;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;
THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=void 0!==a.linewidth?a.linewidth:1;this.linecap=void 0!==a.linecap?a.linecap:"round";this.linejoin=void 0!==a.linejoin?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:
!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?
a.morphTargets:!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0);this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=
void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?
a.wireframeLinecap:"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0);this.specular=void 0!==a.specular?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=void 0!==a.shininess?a.shininess:30;this.metal=void 0!==a.metal?a.metal:!1;this.perPixel=
void 0!==a.perPixel?a.perPixel:!1;this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:0.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==
a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:
!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;
THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.size=void 0!==a.size?a.size:1;this.sizeAttenuation=void 0!==a.sizeAttenuation?a.sizeAttenuation:!0;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.program=void 0!==a.program?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=void 0!==a.fragmentShader?a.fragmentShader:"void main() {}";this.vertexShader=void 0!==a.vertexShader?a.vertexShader:"void main() {}";this.uniforms=void 0!==a.uniforms?a.uniforms:{};this.attributes=a.attributes;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.fog=void 0!==
a.fog?a.fog:!1;this.lights=void 0!==a.lights?a.lights:!1;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,d,e,f,g,h){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=
!0;this.needsUpdate=this.premultiplyAlpha=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;
THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,e,f,g,h,l,n){THREE.Texture.call(this,null,f,g,h,l,n,d,e);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,d,e,f,g,h;if(void 0!==this.geometry.bones){for(c=0;c<this.geometry.bones.length;c++)e=this.geometry.bones[c],f=e.pos,g=e.rotq,h=e.scl,d=this.addBone(),d.name=e.name,d.position.set(f[0],f[1],f[2]),d.quaternion.set(g[0],g[1],g[2],g[3]),d.useQuaternion=!0,void 0!==h?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)e=this.geometry.bones[c],
d=this.bones[c],-1===e.parent?this.add(d):this.bones[e.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}var b=this.bones.length,c=this.bones,d=this.boneMatrices;for(a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,
16*a)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*c)}if(void 0===this.geometry.skinVerticesA)for(this.geometry.skinVerticesA=[],this.geometry.skinVerticesB=[],a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a],e=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,d=new THREE.Vector3(c.x,
c.y,c.z);this.geometry.skinVerticesA.push(b[e].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(d));1!==this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y&&(c=0.5*(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y)),this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}};
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;
THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=new THREE.Object3D;
THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};
THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;g=function(a){for(var b=document.documentElement,c=0;c<a.length;c++)if("string"===typeof b.style[a[c]])return a[c];return null}(["transform","MozTransform","WebkitTransform","msTransform","OTransform"]);this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;f=d/2};this.render=function(c,d){var p,s,q,t,u,r;a=h.projectScene(c,d);b=a.elements;p=0;for(s=
b.length;p<s;p++)q=b[p],q instanceof THREE.RenderableParticle&&q.material instanceof THREE.ParticleDOMMaterial&&(t=q.material.domElement,u=q.x*e+e-(t.offsetWidth>>1),r=q.y*f+f-(t.offsetHeight>>1),t.style.left=u+"px",t.style.top=r+"px",t.style.zIndex=Math.abs(Math.floor((1-q.z)*d.far/d.near)),g&&(t.style[g]="scale("+q.scale.x*e+","+q.scale.y*f+")"))}};
THREE.CanvasRenderer=function(a){function b(a){x!=a&&(r.globalAlpha=x=a)}function c(a){if(A!=a){switch(a){case THREE.NormalBlending:r.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:r.globalCompositeOperation="lighter"}A=a}}function d(a){w!=a&&(r.strokeStyle=w=a)}function e(a){B!=a&&(r.fillStyle=B=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var f=this,g,h,l,n=new THREE.Projector,p=void 0!==a.canvas?a.canvas:document.createElement("canvas"),s,q,t,u,r=p.getContext("2d"),
v=new THREE.Color(0),z=0,x=1,A=0,w=null,B=null,M=null,I=null,C=null,y,E,K,J,U=new THREE.RenderableVertex,T=new THREE.RenderableVertex,H,P,N,m,V,X,G,Y,L,fa,ia,ka,S=new THREE.Color,Z=new THREE.Color,ca=new THREE.Color,ea=new THREE.Color,da=new THREE.Color,Ha=[],Ja=[],Ka,Va,ta,Ta,na,kb,Na,Nb,pb,Wa,Xa=new THREE.Rectangle,Ca=new THREE.Rectangle,Ea=new THREE.Rectangle,gb=!1,ma=new THREE.Color,$a=new THREE.Color,ab=new THREE.Color,ua=new THREE.Vector3,nb,Gb,Vc,hb,rc,Ec;a=16;nb=document.createElement("canvas");
nb.width=nb.height=2;Gb=nb.getContext("2d");Gb.fillStyle="rgba(0,0,0,1)";Gb.fillRect(0,0,2,2);Vc=Gb.getImageData(0,0,2,2);hb=Vc.data;rc=document.createElement("canvas");rc.width=rc.height=a;Ec=rc.getContext("2d");Ec.translate(-a/2,-a/2);Ec.scale(a,a);a--;this.domElement=p;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){s=a;q=b;t=Math.floor(s/2);u=Math.floor(q/2);p.width=s;p.height=q;Xa.set(-t,-u,t,u);Ca.set(-t,-u,t,u);x=1;A=0;
C=I=M=B=w=null};this.setClearColor=function(a,b){v.copy(a);z=void 0!==b?b:1;Ca.set(-t,-u,t,u)};this.setClearColorHex=function(a,b){v.setHex(a);z=void 0!==b?b:1;Ca.set(-t,-u,t,u)};this.clear=function(){r.setTransform(1,0,0,-1,t,u);Ca.isEmpty()||(Ca.minSelf(Xa),Ca.inflate(2),1>z&&r.clearRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight())),0<z&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*v.r)+","+Math.floor(255*v.g)+","+Math.floor(255*v.b)+
","+z+")"),r.fillRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight()))),Ca.empty())};this.render=function(a,p){function q(a){var b,c,d,e;ma.setRGB(0,0,0);$a.setRGB(0,0,0);ab.setRGB(0,0,0);b=0;for(c=a.length;b<c;b++)d=a[b],e=d.color,d instanceof THREE.AmbientLight?(ma.r+=e.r,ma.g+=e.g,ma.b+=e.b):d instanceof THREE.DirectionalLight?($a.r+=e.r,$a.g+=e.g,$a.b+=e.b):d instanceof THREE.PointLight&&(ab.r+=e.r,ab.g+=e.g,ab.b+=e.b)}function s(a,b,c,d){var e,
f,g,h,m,l;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(m=g.matrixWorld.getPosition(),l=c.dot(m),0>=l||(l*=g.intensity,d.r+=h.r*l,d.g+=h.g*l,d.b+=h.b*l)):g instanceof THREE.PointLight&&(m=g.matrixWorld.getPosition(),l=c.dot(ua.sub(m,b).normalize()),0>=l||(l*=0==g.distance?1:1-Math.min(b.distanceTo(m)/g.distance,1),0!=l&&(l*=g.intensity,d.r+=h.r*l,d.g+=h.g*l,d.b+=h.b*l)))}function v(a,f,g){b(g.opacity);c(g.blending);var h,m,l,p,n,q;g instanceof THREE.ParticleBasicMaterial?
g.map&&(p=g.map.image,n=p.width>>1,q=p.height>>1,g=f.scale.x*t,l=f.scale.y*u,h=g*n,m=l*q,Ea.set(a.x-h,a.y-m,a.x+h,a.y+m),Xa.intersects(Ea)&&(r.save(),r.translate(a.x,a.y),r.rotate(-f.rotation),r.scale(g,-l),r.translate(-n,-q),r.drawImage(p,0,0),r.restore())):g instanceof THREE.ParticleCanvasMaterial&&(h=f.scale.x*t,m=f.scale.y*u,Ea.set(a.x-h,a.y-m,a.x+h,a.y+m),Xa.intersects(Ea)&&(d(g.color.getContextStyle()),e(g.color.getContextStyle()),r.save(),r.translate(a.x,a.y),r.rotate(-f.rotation),r.scale(h,
m),g.program(r),r.restore()))}function w(a,e,f,g){b(g.opacity);c(g.blending);r.beginPath();r.moveTo(a.positionScreen.x,a.positionScreen.y);r.lineTo(e.positionScreen.x,e.positionScreen.y);r.closePath();g instanceof THREE.LineBasicMaterial&&(a=g.linewidth,M!=a&&(r.lineWidth=M=a),a=g.linecap,I!=a&&(r.lineCap=I=a),a=g.linejoin,C!=a&&(r.lineJoin=C=a),d(g.color.getContextStyle()),r.stroke(),Ea.inflate(2*g.linewidth))}function x(a,d,e,g,h,n,q,r){f.info.render.vertices+=3;f.info.render.faces++;b(r.opacity);
c(r.blending);H=a.positionScreen.x;P=a.positionScreen.y;N=d.positionScreen.x;m=d.positionScreen.y;V=e.positionScreen.x;X=e.positionScreen.y;B(H,P,N,m,V,X);r instanceof THREE.MeshBasicMaterial?r.map?r.map.mapping instanceof THREE.UVMapping&&(Ta=q.uvs[0],ed(H,P,N,m,V,X,Ta[g].u,Ta[g].v,Ta[h].u,Ta[h].v,Ta[n].u,Ta[n].v,r.map)):r.envMap?r.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=p.matrixWorldInverse,ua.copy(q.vertexNormalsWorld[g]),na=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*
a.elements[8])+0.5,kb=0.5*-(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(q.vertexNormalsWorld[h]),Na=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,Nb=0.5*-(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(q.vertexNormalsWorld[n]),pb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,Wa=0.5*-(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ed(H,P,N,m,V,X,na,kb,Na,Nb,pb,Wa,r.envMap)):r.wireframe?Ob(r.color,
r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):Hb(r.color):r instanceof THREE.MeshLambertMaterial?gb?r.wireframe||r.shading!=THREE.SmoothShading||3!=q.vertexNormalsWorld.length?(S.r=ma.r,S.g=ma.g,S.b=ma.b,s(l,q.centroidWorld,q.normalWorld,S),S.r=Math.max(0,Math.min(r.color.r*S.r,1)),S.g=Math.max(0,Math.min(r.color.g*S.g,1)),S.b=Math.max(0,Math.min(r.color.b*S.b,1)),r.wireframe?Ob(S,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):Hb(S)):(Z.r=ca.r=ea.r=ma.r,Z.g=ca.g=ea.g=
ma.g,Z.b=ca.b=ea.b=ma.b,s(l,q.v1.positionWorld,q.vertexNormalsWorld[0],Z),s(l,q.v2.positionWorld,q.vertexNormalsWorld[1],ca),s(l,q.v3.positionWorld,q.vertexNormalsWorld[2],ea),Z.r=Math.max(0,Math.min(r.color.r*Z.r,1)),Z.g=Math.max(0,Math.min(r.color.g*Z.g,1)),Z.b=Math.max(0,Math.min(r.color.b*Z.b,1)),ca.r=Math.max(0,Math.min(r.color.r*ca.r,1)),ca.g=Math.max(0,Math.min(r.color.g*ca.g,1)),ca.b=Math.max(0,Math.min(r.color.b*ca.b,1)),ea.r=Math.max(0,Math.min(r.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(r.color.g*
ea.g,1)),ea.b=Math.max(0,Math.min(r.color.b*ea.b,1)),da.r=0.5*(ca.r+ea.r),da.g=0.5*(ca.g+ea.g),da.b=0.5*(ca.b+ea.b),ta=Fc(Z,ca,ea,da),ic(H,P,N,m,V,X,0,0,1,0,0,1,ta)):r.wireframe?Ob(r.color,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):Hb(r.color):r instanceof THREE.MeshDepthMaterial?(Ka=p.near,Va=p.far,Z.r=Z.g=Z.b=1-cc(a.positionScreen.z,Ka,Va),ca.r=ca.g=ca.b=1-cc(d.positionScreen.z,Ka,Va),ea.r=ea.g=ea.b=1-cc(e.positionScreen.z,Ka,Va),da.r=0.5*(ca.r+ea.r),da.g=0.5*(ca.g+ea.g),da.b=
0.5*(ca.b+ea.b),ta=Fc(Z,ca,ea,da),ic(H,P,N,m,V,X,0,0,1,0,0,1,ta)):r instanceof THREE.MeshNormalMaterial&&(S.r=jc(q.normalWorld.x),S.g=jc(q.normalWorld.y),S.b=jc(q.normalWorld.z),r.wireframe?Ob(S,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):Hb(S))}function z(a,d,e,g,h,n,r,q,t){f.info.render.vertices+=4;f.info.render.faces++;b(q.opacity);c(q.blending);q.map||q.envMap?(x(a,d,g,0,1,3,r,q,t),x(h,e,n,1,2,3,r,q,t)):(H=a.positionScreen.x,P=a.positionScreen.y,N=d.positionScreen.x,m=d.positionScreen.y,
V=e.positionScreen.x,X=e.positionScreen.y,G=g.positionScreen.x,Y=g.positionScreen.y,L=h.positionScreen.x,fa=h.positionScreen.y,ia=n.positionScreen.x,ka=n.positionScreen.y,q instanceof THREE.MeshBasicMaterial?(A(H,P,N,m,V,X,G,Y),q.wireframe?Ob(q.color,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):Hb(q.color)):q instanceof THREE.MeshLambertMaterial?gb?q.wireframe||q.shading!=THREE.SmoothShading||4!=r.vertexNormalsWorld.length?(S.r=ma.r,S.g=ma.g,S.b=ma.b,s(l,r.centroidWorld,r.normalWorld,
S),S.r=Math.max(0,Math.min(q.color.r*S.r,1)),S.g=Math.max(0,Math.min(q.color.g*S.g,1)),S.b=Math.max(0,Math.min(q.color.b*S.b,1)),A(H,P,N,m,V,X,G,Y),q.wireframe?Ob(S,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):Hb(S)):(Z.r=ca.r=ea.r=da.r=ma.r,Z.g=ca.g=ea.g=da.g=ma.g,Z.b=ca.b=ea.b=da.b=ma.b,s(l,r.v1.positionWorld,r.vertexNormalsWorld[0],Z),s(l,r.v2.positionWorld,r.vertexNormalsWorld[1],ca),s(l,r.v4.positionWorld,r.vertexNormalsWorld[3],ea),s(l,r.v3.positionWorld,r.vertexNormalsWorld[2],
da),Z.r=Math.max(0,Math.min(q.color.r*Z.r,1)),Z.g=Math.max(0,Math.min(q.color.g*Z.g,1)),Z.b=Math.max(0,Math.min(q.color.b*Z.b,1)),ca.r=Math.max(0,Math.min(q.color.r*ca.r,1)),ca.g=Math.max(0,Math.min(q.color.g*ca.g,1)),ca.b=Math.max(0,Math.min(q.color.b*ca.b,1)),ea.r=Math.max(0,Math.min(q.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(q.color.g*ea.g,1)),ea.b=Math.max(0,Math.min(q.color.b*ea.b,1)),da.r=Math.max(0,Math.min(q.color.r*da.r,1)),da.g=Math.max(0,Math.min(q.color.g*da.g,1)),da.b=Math.max(0,Math.min(q.color.b*
da.b,1)),ta=Fc(Z,ca,ea,da),B(H,P,N,m,G,Y),ic(H,P,N,m,G,Y,0,0,1,0,0,1,ta),B(L,fa,V,X,ia,ka),ic(L,fa,V,X,ia,ka,1,0,1,1,0,1,ta)):(A(H,P,N,m,V,X,G,Y),q.wireframe?Ob(q.color,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):Hb(q.color)):q instanceof THREE.MeshNormalMaterial?(S.r=jc(r.normalWorld.x),S.g=jc(r.normalWorld.y),S.b=jc(r.normalWorld.z),A(H,P,N,m,V,X,G,Y),q.wireframe?Ob(S,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):Hb(S)):q instanceof THREE.MeshDepthMaterial&&(Ka=p.near,
Va=p.far,Z.r=Z.g=Z.b=1-cc(a.positionScreen.z,Ka,Va),ca.r=ca.g=ca.b=1-cc(d.positionScreen.z,Ka,Va),ea.r=ea.g=ea.b=1-cc(g.positionScreen.z,Ka,Va),da.r=da.g=da.b=1-cc(e.positionScreen.z,Ka,Va),ta=Fc(Z,ca,ea,da),B(H,P,N,m,G,Y),ic(H,P,N,m,G,Y,0,0,1,0,0,1,ta),B(L,fa,V,X,ia,ka),ic(L,fa,V,X,ia,ka,1,0,1,1,0,1,ta)))}function B(a,b,c,d,e,f){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);r.lineTo(e,f);r.lineTo(a,b);r.closePath()}function A(a,b,c,d,e,f,g,h){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);r.lineTo(e,f);r.lineTo(g,
h);r.lineTo(a,b);r.closePath()}function Ob(a,b,c,e){M!=b&&(r.lineWidth=M=b);I!=c&&(r.lineCap=I=c);C!=e&&(r.lineJoin=C=e);d(a.getContextStyle());r.stroke();Ea.inflate(2*b)}function Hb(a){e(a.getContextStyle());r.fill()}function ed(a,b,c,d,f,g,h,m,l,p,n,q,s){if(0!=s.image.width){if(!0==s.needsUpdate||void 0==Ha[s.id]){var t=s.wrapS==THREE.RepeatWrapping,u=s.wrapT==THREE.RepeatWrapping;Ha[s.id]=r.createPattern(s.image,t&&u?"repeat":t&&!u?"repeat-x":!t&&u?"repeat-y":"no-repeat");s.needsUpdate=!1}e(Ha[s.id]);
var t=s.offset.x/s.repeat.x,u=s.offset.y/s.repeat.y,Gb=s.image.width*s.repeat.x,v=s.image.height*s.repeat.y;h=(h+t)*Gb;m=(m+u)*v;c-=a;d-=b;f-=a;g-=b;l=(l+t)*Gb-h;p=(p+u)*v-m;n=(n+t)*Gb-h;q=(q+u)*v-m;t=l*q-n*p;0==t?(void 0===Ja[s.id]&&(b=document.createElement("canvas"),b.width=s.image.width,b.height=s.image.height,b=b.getContext("2d"),b.drawImage(s.image,0,0),Ja[s.id]=b.getImageData(0,0,s.image.width,s.image.height).data),b=Ja[s.id],h=4*(Math.floor(h)+Math.floor(m)*s.image.width),S.setRGB(b[h]/255,
b[h+1]/255,b[h+2]/255),Hb(S)):(t=1/t,s=(q*c-p*f)*t,p=(q*d-p*g)*t,c=(l*f-n*c)*t,d=(l*g-n*d)*t,a=a-s*h-c*m,h=b-p*h-d*m,r.save(),r.transform(s,p,c,d,a,h),r.fill(),r.restore())}}function ic(a,b,c,d,e,f,g,h,m,l,p,n,q){var s,t;s=q.width-1;t=q.height-1;g*=s;h*=t;c-=a;d-=b;e-=a;f-=b;m=m*s-g;l=l*t-h;p=p*s-g;n=n*t-h;t=1/(m*n-p*l);s=(n*c-l*e)*t;l=(n*d-l*f)*t;c=(m*e-p*c)*t;d=(m*f-p*d)*t;a=a-s*g-c*h;b=b-l*g-d*h;r.save();r.transform(s,l,c,d,a,b);r.clip();r.drawImage(q,0,0);r.restore()}function Fc(a,b,c,d){var e=
~~(255*a.r),f=~~(255*a.g);a=~~(255*a.b);var g=~~(255*b.r),h=~~(255*b.g);b=~~(255*b.b);var m=~~(255*c.r),l=~~(255*c.g);c=~~(255*c.b);var p=~~(255*d.r),n=~~(255*d.g);d=~~(255*d.b);hb[0]=0>e?0:255<e?255:e;hb[1]=0>f?0:255<f?255:f;hb[2]=0>a?0:255<a?255:a;hb[4]=0>g?0:255<g?255:g;hb[5]=0>h?0:255<h?255:h;hb[6]=0>b?0:255<b?255:b;hb[8]=0>m?0:255<m?255:m;hb[9]=0>l?0:255<l?255:l;hb[10]=0>c?0:255<c?255:c;hb[12]=0>p?0:255<p?255:p;hb[13]=0>n?0:255<n?255:n;hb[14]=0>d?0:255<d?255:d;Gb.putImageData(Vc,0,0);Ec.drawImage(nb,
0,0);return rc}function cc(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function jc(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Pb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!=e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}var Gc,fd,Ra,lb;this.autoClear?this.clear():r.setTransform(1,0,0,-1,t,u);f.info.render.vertices=0;f.info.render.faces=0;g=n.projectScene(a,p,this.sortElements);h=g.elements;l=g.lights;(gb=0<l.length)&&q(l);Gc=0;for(fd=h.length;Gc<fd;Gc++)Ra=h[Gc],lb=Ra.material,lb=lb instanceof
THREE.MeshFaceMaterial?Ra.faceMaterial:lb,void 0!==lb&&!1!==lb.visible&&(Ea.empty(),Ra instanceof THREE.RenderableParticle?(y=Ra,y.x*=t,y.y*=u,v(y,Ra,lb,a)):Ra instanceof THREE.RenderableLine?(y=Ra.v1,E=Ra.v2,y.positionScreen.x*=t,y.positionScreen.y*=u,E.positionScreen.x*=t,E.positionScreen.y*=u,Ea.addPoint(y.positionScreen.x,y.positionScreen.y),Ea.addPoint(E.positionScreen.x,E.positionScreen.y),Xa.intersects(Ea)&&w(y,E,Ra,lb,a)):Ra instanceof THREE.RenderableFace3?(y=Ra.v1,E=Ra.v2,K=Ra.v3,y.positionScreen.x*=
t,y.positionScreen.y*=u,E.positionScreen.x*=t,E.positionScreen.y*=u,K.positionScreen.x*=t,K.positionScreen.y*=u,lb.overdraw&&(Pb(y.positionScreen,E.positionScreen),Pb(E.positionScreen,K.positionScreen),Pb(K.positionScreen,y.positionScreen)),Ea.add3Points(y.positionScreen.x,y.positionScreen.y,E.positionScreen.x,E.positionScreen.y,K.positionScreen.x,K.positionScreen.y),Xa.intersects(Ea)&&x(y,E,K,0,1,2,Ra,lb,a)):Ra instanceof THREE.RenderableFace4&&(y=Ra.v1,E=Ra.v2,K=Ra.v3,J=Ra.v4,y.positionScreen.x*=
t,y.positionScreen.y*=u,E.positionScreen.x*=t,E.positionScreen.y*=u,K.positionScreen.x*=t,K.positionScreen.y*=u,J.positionScreen.x*=t,J.positionScreen.y*=u,U.positionScreen.copy(E.positionScreen),T.positionScreen.copy(J.positionScreen),lb.overdraw&&(Pb(y.positionScreen,E.positionScreen),Pb(E.positionScreen,J.positionScreen),Pb(J.positionScreen,y.positionScreen),Pb(K.positionScreen,U.positionScreen),Pb(K.positionScreen,T.positionScreen)),Ea.addPoint(y.positionScreen.x,y.positionScreen.y),Ea.addPoint(E.positionScreen.x,
E.positionScreen.y),Ea.addPoint(K.positionScreen.x,K.positionScreen.y),Ea.addPoint(J.positionScreen.x,J.positionScreen.y),Xa.intersects(Ea)&&z(y,E,K,J,U,T,Ra,lb,a)),Ca.addRectangle(Ea));r.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,l,p;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(l=g.matrixWorld.getPosition(),p=c.dot(l),0>=p||(p*=g.intensity,d.r+=h.r*p,d.g+=h.g*p,d.b+=h.b*p)):g instanceof THREE.PointLight&&(l=g.matrixWorld.getPosition(),p=c.dot(y.sub(l,b).normalize()),0>=p||(p*=0==g.distance?1:1-Math.min(b.distanceTo(l)/g.distance,1),0!=p&&(p*=g.intensity,d.r+=h.r*p,d.g+=h.g*p,d.b+=h.b*p)))}function b(a){null==E[a]&&(E[a]=document.createElementNS("http://www.w3.org/2000/svg",
"path"),0==H&&E[a].setAttribute("shape-rendering","crispEdges"));return E[a]}function c(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,h=new THREE.Projector,l=document.createElementNS("http://www.w3.org/2000/svg","svg"),n,p,s,q,t,u,r,v,z=new THREE.Rectangle,x=new THREE.Rectangle,A=!1,w=new THREE.Color,B=new THREE.Color,M=new THREE.Color,I=new THREE.Color,C,y=new THREE.Vector3,E=[],K=[],J,U,T,H=1;this.domElement=l;this.sortElements=this.sortObjects=
this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":H=1;break;case "low":H=0}};this.setSize=function(a,b){n=a;p=b;s=n/2;q=p/2;l.setAttribute("viewBox",-s+" "+-q+" "+n+" "+p);l.setAttribute("width",n);l.setAttribute("height",p);z.set(-s,-q,s,q)};this.clear=function(){for(;0<l.childNodes.length;)l.removeChild(l.childNodes[0])};this.render=function(p,n){var m,y,E,G;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=h.projectScene(p,
n,this.sortElements);f=e.elements;g=e.lights;T=U=0;if(A=0<g.length)for(B.setRGB(0,0,0),M.setRGB(0,0,0),I.setRGB(0,0,0),m=0,y=g.length;m<y;m++)G=g[m],E=G.color,G instanceof THREE.AmbientLight?(B.r+=E.r,B.g+=E.g,B.b+=E.b):G instanceof THREE.DirectionalLight?(M.r+=E.r,M.g+=E.g,M.b+=E.b):G instanceof THREE.PointLight&&(I.r+=E.r,I.g+=E.g,I.b+=E.b);m=0;for(y=f.length;m<y;m++)if(E=f[m],G=E.material,G=G instanceof THREE.MeshFaceMaterial?E.faceMaterial:G,void 0!==G&&!1!==G.visible)if(x.empty(),E instanceof
THREE.RenderableParticle)t=E,t.x*=s,t.y*=-q;else if(E instanceof THREE.RenderableLine){if(t=E.v1,u=E.v2,t.positionScreen.x*=s,t.positionScreen.y*=-q,u.positionScreen.x*=s,u.positionScreen.y*=-q,x.addPoint(t.positionScreen.x,t.positionScreen.y),x.addPoint(u.positionScreen.x,u.positionScreen.y),z.intersects(x)){E=t;var Y=u,L=T++;null==K[L]&&(K[L]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==H&&K[L].setAttribute("shape-rendering","crispEdges"));J=K[L];J.setAttribute("x1",E.positionScreen.x);
J.setAttribute("y1",E.positionScreen.y);J.setAttribute("x2",Y.positionScreen.x);J.setAttribute("y2",Y.positionScreen.y);G instanceof THREE.LineBasicMaterial&&(J.setAttribute("style","fill: none; stroke: "+G.color.getContextStyle()+"; stroke-width: "+G.linewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.linecap+"; stroke-linejoin: "+G.linejoin),l.appendChild(J))}}else if(E instanceof THREE.RenderableFace3){if(t=E.v1,u=E.v2,r=E.v3,t.positionScreen.x*=s,t.positionScreen.y*=-q,u.positionScreen.x*=
s,u.positionScreen.y*=-q,r.positionScreen.x*=s,r.positionScreen.y*=-q,x.addPoint(t.positionScreen.x,t.positionScreen.y),x.addPoint(u.positionScreen.x,u.positionScreen.y),x.addPoint(r.positionScreen.x,r.positionScreen.y),z.intersects(x)){var Y=t,L=u,fa=r;d.info.render.vertices+=3;d.info.render.faces++;J=b(U++);J.setAttribute("d","M "+Y.positionScreen.x+" "+Y.positionScreen.y+" L "+L.positionScreen.x+" "+L.positionScreen.y+" L "+fa.positionScreen.x+","+fa.positionScreen.y+"z");G instanceof THREE.MeshBasicMaterial?
w.copy(G.color):G instanceof THREE.MeshLambertMaterial?A?(w.r=B.r,w.g=B.g,w.b=B.b,a(g,E.centroidWorld,E.normalWorld,w),w.r=Math.max(0,Math.min(G.color.r*w.r,1)),w.g=Math.max(0,Math.min(G.color.g*w.g,1)),w.b=Math.max(0,Math.min(G.color.b*w.b,1))):w.copy(G.color):G instanceof THREE.MeshDepthMaterial?(C=1-G.__2near/(G.__farPlusNear-E.z*G.__farMinusNear),w.setRGB(C,C,C)):G instanceof THREE.MeshNormalMaterial&&w.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));G.wireframe?J.setAttribute("style",
"fill: none; stroke: "+w.getContextStyle()+"; stroke-width: "+G.wireframeLinewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframeLinecap+"; stroke-linejoin: "+G.wireframeLinejoin):J.setAttribute("style","fill: "+w.getContextStyle()+"; fill-opacity: "+G.opacity);l.appendChild(J)}}else if(E instanceof THREE.RenderableFace4&&(t=E.v1,u=E.v2,r=E.v3,v=E.v4,t.positionScreen.x*=s,t.positionScreen.y*=-q,u.positionScreen.x*=s,u.positionScreen.y*=-q,r.positionScreen.x*=s,r.positionScreen.y*=
-q,v.positionScreen.x*=s,v.positionScreen.y*=-q,x.addPoint(t.positionScreen.x,t.positionScreen.y),x.addPoint(u.positionScreen.x,u.positionScreen.y),x.addPoint(r.positionScreen.x,r.positionScreen.y),x.addPoint(v.positionScreen.x,v.positionScreen.y),z.intersects(x))){var Y=t,L=u,fa=r,ia=v;d.info.render.vertices+=4;d.info.render.faces++;J=b(U++);J.setAttribute("d","M "+Y.positionScreen.x+" "+Y.positionScreen.y+" L "+L.positionScreen.x+" "+L.positionScreen.y+" L "+fa.positionScreen.x+","+fa.positionScreen.y+
" L "+ia.positionScreen.x+","+ia.positionScreen.y+"z");G instanceof THREE.MeshBasicMaterial?w.copy(G.color):G instanceof THREE.MeshLambertMaterial?A?(w.r=B.r,w.g=B.g,w.b=B.b,a(g,E.centroidWorld,E.normalWorld,w),w.r=Math.max(0,Math.min(G.color.r*w.r,1)),w.g=Math.max(0,Math.min(G.color.g*w.g,1)),w.b=Math.max(0,Math.min(G.color.b*w.b,1))):w.copy(G.color):G instanceof THREE.MeshDepthMaterial?(C=1-G.__2near/(G.__farPlusNear-E.z*G.__farMinusNear),w.setRGB(C,C,C)):G instanceof THREE.MeshNormalMaterial&&
w.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));G.wireframe?J.setAttribute("style","fill: none; stroke: "+w.getContextStyle()+"; stroke-width: "+G.wireframeLinewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframeLinecap+"; stroke-linejoin: "+G.wireframeLinejoin):J.setAttribute("style","fill: "+w.getContextStyle()+"; fill-opacity: "+G.opacity);l.appendChild(J)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",
envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",
linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",
value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",
value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,
1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",
THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=m.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;
var l=a.colors,p=l.length,n=a.__vertexArray,q=a.__colorArray,r=a.__sortArray,s=a.verticesNeedUpdate,t=a.colorsNeedUpdate,u=a.__webglCustomAttributesList;if(c.sortParticles){Ea.copy(Ca);Ea.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],gb.copy(e),Ea.multiplyVector3(gb),r[d]=[gb.z,d];r.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[r[d][1]],f=3*d,n[f]=e.x,n[f+1]=e.y,n[f+2]=e.z;for(d=0;d<p;d++)f=3*d,e=l[r[d][1]],q[f]=e.r,q[f+1]=e.g,q[f+2]=e.b;if(u)for(l=0,p=u.length;l<p;l++)if(h=u[l],
void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;d<e;d++)g=r[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=r[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=r[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=r[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=r[d][1],g=h.value[g],
h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}else{if(s)for(d=0;d<g;d++)e=h[d],f=3*d,n[f]=e.x,n[f+1]=e.y,n[f+2]=e.z;if(t)for(d=0;d<p;d++)e=l[d],f=3*d,q[f]=e.r,q[f+1]=e.g,q[f+2]=e.b;if(u)for(l=0,p=u.length;l<p;l++)if(h=u[l],h.needsUpdate&&(void 0===h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=
0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}if(s||c.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,n,b);if(t||c.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,a.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,q,b);if(u)for(l=
0,p=u.length;l<p;l++)if(h=u[l],h.needsUpdate||c.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,h.buffer),m.bufferData(m.ARRAY_BUFFER,h.array,b)}function g(a,b){return b.z-a.z}function h(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)fa=X=null,Y=L=S=ka=Ja=Ha=Z=-1,$a=!0,a[d].render(b,c,pb,Wa),fa=X=null,Y=L=S=ka=Ja=Ha=Z=-1,$a=!0}function l(a,b,c,d,e,f,g,h){var m,l,p,n;b?(l=a.length-1,n=b=-1):(l=0,b=a.length,n=1);for(var q=l;q!==b;q+=n)if(m=a[q],m.render){l=m.object;p=m.buffer;if(h)m=h;else{m=m[c];if(!m)continue;
g&&N.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst);N.setDepthTest(m.depthTest);N.setDepthWrite(m.depthWrite);z(m.polygonOffset,m.polygonOffsetFactor,m.polygonOffsetUnits)}N.setObjectFaces(l);p instanceof THREE.BufferGeometry?N.renderBufferDirect(d,e,f,m,p,l):N.renderBuffer(d,e,f,m,p,l)}}function n(a,b,c,d,e,f,g){for(var h,m,l=0,p=a.length;l<p;l++)if(h=a[l],m=h.object,m.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&N.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);N.setDepthTest(h.depthTest);
N.setDepthWrite(h.depthWrite);z(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}N.renderImmediateObject(c,d,e,h,m)}}function p(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function s(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function q(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function t(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function u(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,
1)}function r(a,b,c,d,e){if(!d.program||d.needsUpdate)N.initMaterial(d,b,c,e),d.needsUpdate=!1;if(d.morphTargets&&!e.__webglMorphTargetInfluences){e.__webglMorphTargetInfluences=new Float32Array(N.maxMorphTargets);for(var f=0,g=N.maxMorphTargets;f<g;f++)e.__webglMorphTargetInfluences[f]=0}var h=!1,f=d.program,g=f.uniforms,l=d.uniforms;f!==X&&(m.useProgram(f),X=f,h=!0);d.id!==Y&&(Y=d.id,h=!0);if(h||a!==fa)m.uniformMatrix4fv(g.projectionMatrix,!1,a._projectionMatrixArray),a!==fa&&(fa=a);if(h){c&&d.fog&&
(l.fogColor.value=c.color,c instanceof THREE.Fog?(l.fogNear.value=c.near,l.fogFar.value=c.far):c instanceof THREE.FogExp2&&(l.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if($a){var p,n=0,q=0,r=0,s,t,u,v=ab,w=v.directional.colors,y=v.directional.positions,x=v.point.colors,z=v.point.positions,B=v.point.distances,C=v.spot.colors,E=v.spot.positions,H=v.spot.distances,G=v.spot.directions,L=v.spot.angles,K=v.spot.exponents,J=0,
Z=0,Wa=0,P=0;c=0;for(h=b.length;c<h;c++)p=b[c],p.onlyShadow||(s=p.color,t=p.intensity,u=p.distance,p instanceof THREE.AmbientLight?N.gammaInput?(n+=s.r*s.r,q+=s.g*s.g,r+=s.b*s.b):(n+=s.r,q+=s.g,r+=s.b):p instanceof THREE.DirectionalLight?(u=3*J,N.gammaInput?(w[u]=s.r*s.r*t*t,w[u+1]=s.g*s.g*t*t,w[u+2]=s.b*s.b*t*t):(w[u]=s.r*t,w[u+1]=s.g*t,w[u+2]=s.b*t),ma.copy(p.matrixWorld.getPosition()),ma.subSelf(p.target.matrixWorld.getPosition()),ma.normalize(),y[u]=ma.x,y[u+1]=ma.y,y[u+2]=ma.z,J+=1):p instanceof
THREE.PointLight?(P=3*Z,N.gammaInput?(x[P]=s.r*s.r*t*t,x[P+1]=s.g*s.g*t*t,x[P+2]=s.b*s.b*t*t):(x[P]=s.r*t,x[P+1]=s.g*t,x[P+2]=s.b*t),s=p.matrixWorld.getPosition(),z[P]=s.x,z[P+1]=s.y,z[P+2]=s.z,B[Z]=u,Z+=1):p instanceof THREE.SpotLight&&(P=3*Wa,N.gammaInput?(C[P]=s.r*s.r*t*t,C[P+1]=s.g*s.g*t*t,C[P+2]=s.b*s.b*t*t):(C[P]=s.r*t,C[P+1]=s.g*t,C[P+2]=s.b*t),s=p.matrixWorld.getPosition(),E[P]=s.x,E[P+1]=s.y,E[P+2]=s.z,H[Wa]=u,ma.copy(s),ma.subSelf(p.target.matrixWorld.getPosition()),ma.normalize(),G[P]=
ma.x,G[P+1]=ma.y,G[P+2]=ma.z,L[Wa]=Math.cos(p.angle),K[Wa]=p.exponent,Wa+=1));c=3*J;for(h=w.length;c<h;c++)w[c]=0;c=3*Z;for(h=x.length;c<h;c++)x[c]=0;c=3*Wa;for(h=C.length;c<h;c++)C[c]=0;v.directional.length=J;v.point.length=Z;v.spot.length=Wa;v.ambient[0]=n;v.ambient[1]=q;v.ambient[2]=r;$a=!1}c=ab;l.ambientLightColor.value=c.ambient;l.directionalLightColor.value=c.directional.colors;l.directionalLightDirection.value=c.directional.positions;l.pointLightColor.value=c.point.colors;l.pointLightPosition.value=
c.point.positions;l.pointLightDistance.value=c.point.distances;l.spotLightColor.value=c.spot.colors;l.spotLightPosition.value=c.spot.positions;l.spotLightDistance.value=c.spot.distances;l.spotLightDirection.value=c.spot.directions;l.spotLightAngle.value=c.spot.angles;l.spotLightExponent.value=c.spot.exponents}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)l.opacity.value=d.opacity,N.gammaInput?l.diffuse.value.copyGammaToLinear(d.color):
l.diffuse.value=d.color,(l.map.texture=d.map)&&l.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),l.lightMap.texture=d.lightMap,l.envMap.texture=d.envMap,l.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,l.reflectivity.value=d.reflectivity,l.refractionRatio.value=d.refractionRatio,l.combine.value=d.combine,l.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;d instanceof THREE.LineBasicMaterial?(l.diffuse.value=
d.color,l.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(l.psColor.value=d.color,l.opacity.value=d.opacity,l.size.value=d.size,l.scale.value=I.height/2,l.map.texture=d.map):d instanceof THREE.MeshPhongMaterial?(l.shininess.value=d.shininess,N.gammaInput?(l.ambient.value.copyGammaToLinear(d.ambient),l.emissive.value.copyGammaToLinear(d.emissive),l.specular.value.copyGammaToLinear(d.specular)):(l.ambient.value=d.ambient,l.emissive.value=d.emissive,l.specular.value=d.specular),d.wrapAround&&
l.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(N.gammaInput?(l.ambient.value.copyGammaToLinear(d.ambient),l.emissive.value.copyGammaToLinear(d.emissive)):(l.ambient.value=d.ambient,l.emissive.value=d.emissive),d.wrapAround&&l.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(l.mNear.value=a.near,l.mFar.value=a.far,l.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(l.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&l.shadowMatrix)for(h=
c=0,p=b.length;h<p;h++)n=b[h],n.castShadow&&(n instanceof THREE.SpotLight||n instanceof THREE.DirectionalLight&&!n.shadowCascade)&&(l.shadowMap.texture[c]=n.shadowMap,l.shadowMapSize.value[c]=n.shadowMapSize,l.shadowMatrix.value[c]=n.shadowMatrix,l.shadowDarkness.value[c]=n.shadowDarkness,l.shadowBias.value[c]=n.shadowBias,c++);b=d.uniformsList;l=0;for(c=b.length;l<c;l++)if(n=f.uniforms[b[l][1]])switch(h=b[l][0],q=h.type,p=h.value,q){case "i":m.uniform1i(n,p);break;case "f":m.uniform1f(n,p);break;
case "v2":m.uniform2f(n,p.x,p.y);break;case "v3":m.uniform3f(n,p.x,p.y,p.z);break;case "v4":m.uniform4f(n,p.x,p.y,p.z,p.w);break;case "c":m.uniform3f(n,p.r,p.g,p.b);break;case "fv1":m.uniform1fv(n,p);break;case "fv":m.uniform3fv(n,p);break;case "v2v":h._array||(h._array=new Float32Array(2*p.length));q=0;for(r=p.length;q<r;q++)v=2*q,h._array[v]=p[q].x,h._array[v+1]=p[q].y;m.uniform2fv(n,h._array);break;case "v3v":h._array||(h._array=new Float32Array(3*p.length));q=0;for(r=p.length;q<r;q++)v=3*q,h._array[v]=
p[q].x,h._array[v+1]=p[q].y,h._array[v+2]=p[q].z;m.uniform3fv(n,h._array);break;case "v4v":h._array||(h._array=new Float32Array(4*p.length));q=0;for(r=p.length;q<r;q++)v=4*q,h._array[v]=p[q].x,h._array[v+1]=p[q].y,h._array[v+2]=p[q].z,h._array[v+3]=p[q].w;m.uniform4fv(n,h._array);break;case "m4":h._array||(h._array=new Float32Array(16));p.flattenToArray(h._array);m.uniformMatrix4fv(n,!1,h._array);break;case "m4v":h._array||(h._array=new Float32Array(16*p.length));q=0;for(r=p.length;q<r;q++)p[q].flattenToArrayOffset(h._array,
16*q);m.uniformMatrix4fv(n,!1,h._array);break;case "t":m.uniform1i(n,p);n=h.texture;if(!n)continue;if(n.image instanceof Array&&6===n.image.length){if(h=n,6===h.image.length)if(h.needsUpdate){h.image.__webglTextureCube||(h.image.__webglTextureCube=m.createTexture());m.activeTexture(m.TEXTURE0+p);m.bindTexture(m.TEXTURE_CUBE_MAP,h.image.__webglTextureCube);p=[];for(n=0;6>n;n++)q=p,r=n,N.autoScaleCubemaps?(v=h.image[n],y=nb,v.width<=y&&v.height<=y||(x=Math.max(v.width,v.height),w=Math.floor(v.width*
y/x),y=Math.floor(v.height*y/x),x=document.createElement("canvas"),x.width=w,x.height=y,x.getContext("2d").drawImage(v,0,0,v.width,v.height,0,0,w,y),v=x)):v=h.image[n],q[r]=v;n=p[0];q=0===(n.width&n.width-1)&&0===(n.height&n.height-1);r=M(h.format);v=M(h.type);A(m.TEXTURE_CUBE_MAP,h,q);for(n=0;6>n;n++)m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,r,v,p[n]);h.generateMipmaps&&q&&m.generateMipmap(m.TEXTURE_CUBE_MAP);h.needsUpdate=!1;if(h.onUpdate)h.onUpdate()}else m.activeTexture(m.TEXTURE0+p),m.bindTexture(m.TEXTURE_CUBE_MAP,
h.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(h=n,m.activeTexture(m.TEXTURE0+p),m.bindTexture(m.TEXTURE_CUBE_MAP,h.__webglTexture)):N.setTexture(n,p);break;case "tv":if(!h._array)for(h._array=[],q=0,r=h.texture.length;q<r;q++)h._array[q]=p+q;m.uniform1iv(n,h._array);q=0;for(r=h.texture.length;q<r;q++)(n=h.texture[q])&&N.setTexture(n,h._array[q])}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==g.cameraPosition&&(b=a.matrixWorld.getPosition(),
m.uniform3f(g.cameraPosition,b.x,b.y,b.z));(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==g.viewMatrix&&m.uniformMatrix4fv(g.viewMatrix,!1,a._viewMatrixArray);d.skinning&&m.uniformMatrix4fv(g.boneGlobalMatrices,!1,e.boneMatrices)}m.uniformMatrix4fv(g.modelViewMatrix,!1,e._modelViewMatrix.elements);g.normalMatrix&&m.uniformMatrix3fv(g.normalMatrix,!1,e._normalMatrix.elements);null!==g.objectMatrix&&m.uniformMatrix4fv(g.objectMatrix,
!1,e.matrixWorld.elements);return f}function v(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function z(a,b,c){Ka!==a&&(a?m.enable(m.POLYGON_OFFSET_FILL):m.disable(m.POLYGON_OFFSET_FILL),Ka=a);!a||Va===b&&ta===c||(m.polygonOffset(b,c),Va=b,ta=c)}function x(a,b){var c;"fragment"===a?c=m.createShader(m.FRAGMENT_SHADER):"vertex"===a&&(c=m.createShader(m.VERTEX_SHADER));m.shaderSource(c,b);m.compileShader(c);
return m.getShaderParameter(c,m.COMPILE_STATUS)?c:(console.error(m.getShaderInfoLog(c)),console.error(b),null)}function A(a,b,c){c?(m.texParameteri(a,m.TEXTURE_WRAP_S,M(b.wrapS)),m.texParameteri(a,m.TEXTURE_WRAP_T,M(b.wrapT)),m.texParameteri(a,m.TEXTURE_MAG_FILTER,M(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,M(b.minFilter))):(m.texParameteri(a,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_MAG_FILTER,B(b.magFilter)),m.texParameteri(a,
m.TEXTURE_MIN_FILTER,B(b.minFilter)))}function w(a,b){m.bindRenderbuffer(m.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_COMPONENT16,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a)):m.renderbufferStorage(m.RENDERBUFFER,
m.RGBA4,b.width,b.height)}function B(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return m.NEAREST;default:return m.LINEAR}}function M(a){switch(a){case THREE.RepeatWrapping:return m.REPEAT;case THREE.ClampToEdgeWrapping:return m.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return m.MIRRORED_REPEAT;case THREE.NearestFilter:return m.NEAREST;case THREE.NearestMipMapNearestFilter:return m.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return m.NEAREST_MIPMAP_LINEAR;
case THREE.LinearFilter:return m.LINEAR;case THREE.LinearMipMapNearestFilter:return m.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return m.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return m.BYTE;case THREE.UnsignedByteType:return m.UNSIGNED_BYTE;case THREE.ShortType:return m.SHORT;case THREE.UnsignedShortType:return m.UNSIGNED_SHORT;case THREE.IntType:return m.INT;case THREE.UnsignedIntType:return m.UNSIGNED_INT;case THREE.FloatType:return m.FLOAT;case THREE.AlphaFormat:return m.ALPHA;
case THREE.RGBFormat:return m.RGB;case THREE.RGBAFormat:return m.RGBA;case THREE.LuminanceFormat:return m.LUMINANCE;case THREE.LuminanceAlphaFormat:return m.LUMINANCE_ALPHA;case THREE.AddEquation:return m.FUNC_ADD;case THREE.SubtractEquation:return m.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return m.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return m.ZERO;case THREE.OneFactor:return m.ONE;case THREE.SrcColorFactor:return m.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return m.ONE_MINUS_SRC_COLOR;
case THREE.SrcAlphaFactor:return m.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return m.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return m.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return m.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return m.DST_COLOR;case THREE.OneMinusDstColorFactor:return m.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return m.SRC_ALPHA_SATURATE}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var I=void 0!==a.canvas?a.canvas:document.createElement("canvas"),
C=void 0!==a.precision?a.precision:"highp",y=void 0!==a.alpha?a.alpha:!0,E=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,K=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.stencil?a.stencil:!0,U=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,T=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),H=void 0!==a.clearAlpha?a.clearAlpha:0,P=void 0!==a.maxLights?a.maxLights:4;this.domElement=I;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=
this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};
var N=this,m,V=[],X=null,G=null,Y=-1,L=null,fa=null,ia=0,ka=-1,S=-1,Z=-1,ca=-1,ea=-1,da=-1,Ha=-1,Ja=-1,Ka=null,Va=null,ta=null,Ta=null,na=0,kb=0,Na=0,Nb=0,pb=0,Wa=0,Xa=new THREE.Frustum,Ca=new THREE.Matrix4,Ea=new THREE.Matrix4,gb=new THREE.Vector4,ma=new THREE.Vector3,$a=!0,ab={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};m=function(){var a;
try{if(!(a=I.getContext("experimental-webgl",{alpha:y,premultipliedAlpha:E,antialias:K,stencil:J,preserveDrawingBuffer:U})))throw"Error creating WebGL context.";}catch(b){console.error(b)}a.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported.");return a}();m.clearColor(0,0,0,1);m.clearDepth(1);m.clearStencil(0);m.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);m.enable(m.CULL_FACE);m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);
m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);m.clearColor(T.r,T.g,T.b,H);this.context=m;var ua=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS);m.getParameter(m.MAX_TEXTURE_SIZE);var nb=m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return m};this.supportsVertexTextures=function(){return 0<ua};this.setSize=function(a,b){I.width=a;I.height=b;this.setViewport(0,0,I.width,I.height)};this.setViewport=function(a,b,c,d){na=a;kb=b;Na=c;Nb=d;m.viewport(na,kb,Na,Nb)};this.setScissor=
function(a,b,c,d){m.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.setClearColorHex=function(a,b){T.setHex(a);H=b;m.clearColor(T.r,T.g,T.b,H)};this.setClearColor=function(a,b){T.copy(a);H=b;m.clearColor(T.r,T.g,T.b,H)};this.getClearColor=function(){return T};this.getClearAlpha=function(){return H};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=m.COLOR_BUFFER_BIT;if(void 0===b||b)d|=m.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=m.STENCIL_BUFFER_BIT;
m.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=
a.geometry.geometryGroups[b];m.deleteBuffer(c.__webglVertexBuffer);m.deleteBuffer(c.__webglNormalBuffer);m.deleteBuffer(c.__webglTangentBuffer);m.deleteBuffer(c.__webglColorBuffer);m.deleteBuffer(c.__webglUVBuffer);m.deleteBuffer(c.__webglUV2Buffer);m.deleteBuffer(c.__webglSkinVertexABuffer);m.deleteBuffer(c.__webglSkinVertexBBuffer);m.deleteBuffer(c.__webglSkinIndicesBuffer);m.deleteBuffer(c.__webglSkinWeightsBuffer);m.deleteBuffer(c.__webglFaceBuffer);m.deleteBuffer(c.__webglLineBuffer);var d=void 0,
e=void 0;if(c.numMorphTargets)for(d=0,e=c.numMorphTargets;d<e;d++)m.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.numMorphNormals)for(d=0,e=c.numMorphNormals;d<e;d++)m.deleteBuffer(c.__webglMorphNormalsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)m.deleteBuffer(c.__webglCustomAttributesList[d].buffer);N.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,m.deleteBuffer(a.__webglVertexBuffer),m.deleteBuffer(a.__webglColorBuffer),
N.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,m.deleteBuffer(a.__webglVertexBuffer),m.deleteBuffer(a.__webglColorBuffer),N.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,m.deleteBuffer(a.__webglVertexBuffer),m.deleteBuffer(a.__webglColorBuffer),N.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,m.deleteTexture(a.__webglTexture),N.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(m.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)m.deleteFramebuffer(a.__webglFramebuffer[b]),m.deleteRenderbuffer(a.__webglRenderbuffer[b]);else m.deleteFramebuffer(a.__webglFramebuffer),m.deleteRenderbuffer(a.__webglRenderbuffer)};this.updateShadowMap=function(a,b){X=null;Y=L=Ja=Ha=Z=-1;$a=!0;S=ka=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.__webglVertexBuffer||(a.__webglVertexBuffer=m.createBuffer());a.__webglNormalBuffer||(a.__webglNormalBuffer=
m.createBuffer());a.hasPos&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,a.positionArray,m.DYNAMIC_DRAW),m.enableVertexAttribArray(b.attributes.position),m.vertexAttribPointer(b.attributes.position,3,m.FLOAT,!1,0,0));if(a.hasNormal){m.bindBuffer(m.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,e,f,g,h,l,p,n,q,r,s=3*a.count;for(r=0;r<s;r+=9)c=a.normalArray,d=c[r],e=c[r+1],f=c[r+2],g=c[r+3],l=c[r+4],n=c[r+5],h=c[r+6],p=c[r+7],q=c[r+8],d=(d+g+h)/
3,e=(e+l+p)/3,f=(f+n+q)/3,c[r]=d,c[r+1]=e,c[r+2]=f,c[r+3]=d,c[r+4]=e,c[r+5]=f,c[r+6]=d,c[r+7]=e,c[r+8]=f}m.bufferData(m.ARRAY_BUFFER,a.normalArray,m.DYNAMIC_DRAW);m.enableVertexAttribArray(b.attributes.normal);m.vertexAttribPointer(b.attributes.normal,3,m.FLOAT,!1,0,0)}m.drawArrays(m.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible&&(c=r(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==L&&(L=d,b=!0),f instanceof THREE.Mesh))for(f=
e.offsets,d=0,c=f.length;d<c;++d)b&&(m.bindBuffer(m.ARRAY_BUFFER,e.vertexPositionBuffer),m.vertexAttribPointer(a.position,e.vertexPositionBuffer.itemSize,m.FLOAT,!1,0,12*f[d].index),0<=a.normal&&e.vertexNormalBuffer&&(m.bindBuffer(m.ARRAY_BUFFER,e.vertexNormalBuffer),m.vertexAttribPointer(a.normal,e.vertexNormalBuffer.itemSize,m.FLOAT,!1,0,12*f[d].index)),0<=a.uv&&e.vertexUvBuffer&&(e.vertexUvBuffer?(m.bindBuffer(m.ARRAY_BUFFER,e.vertexUvBuffer),m.vertexAttribPointer(a.uv,e.vertexUvBuffer.itemSize,
m.FLOAT,!1,0,8*f[d].index),m.enableVertexAttribArray(a.uv)):m.disableVertexAttribArray(a.uv)),0<=a.color&&e.vertexColorBuffer&&(m.bindBuffer(m.ARRAY_BUFFER,e.vertexColorBuffer),m.vertexAttribPointer(a.color,e.vertexColorBuffer.itemSize,m.FLOAT,!1,0,16*f[d].index)),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.vertexIndexBuffer)),m.drawElements(m.TRIANGLES,f[d].count,m.UNSIGNED_SHORT,2*f[d].start),N.info.render.calls++,N.info.render.vertices+=f[d].count,N.info.render.faces+=f[d].count/3};this.renderBuffer=
function(a,b,c,d,e,f){if(!1!==d.visible){var g,h;c=r(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==L&&(L=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),m.vertexAttribPointer(b.position,3,m.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0)):0<=c.position&&
(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){g=0;var l=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<l.length;)m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[l[g]]),m.vertexAttribPointer(c["morphTarget"+g],3,m.FLOAT,!1,0,0),d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[l[g]]),m.vertexAttribPointer(c["morphNormal"+g],3,m.FLOAT,
!1,0,0)),f.__webglMorphTargetInfluences[g]=h[l[g]],g++}else{var l=[],p=-1,n=0;h=f.morphTargetInfluences;var q,s=h.length;g=0;for(-1!==f.morphTargetBase&&(l[f.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(q=0;q<s;q++)!l[q]&&h[q]>p&&(n=q,p=h[n]);m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n]);m.vertexAttribPointer(c["morphTarget"+g],3,m.FLOAT,!1,0,0);d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n]),m.vertexAttribPointer(c["morphNormal"+g],3,m.FLOAT,
!1,0,0));f.__webglMorphTargetInfluences[g]=p;l[n]=1;p=-1;g++}}null!==d.program.uniforms.morphTargetInfluences&&m.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(g=0,h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(m.bindBuffer(m.ARRAY_BUFFER,c.buffer),m.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,m.FLOAT,!1,0,0));0<=b.color&&(m.bindBuffer(m.ARRAY_BUFFER,
e.__webglColorBuffer),m.vertexAttribPointer(b.color,3,m.FLOAT,!1,0,0));0<=b.normal&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglNormalBuffer),m.vertexAttribPointer(b.normal,3,m.FLOAT,!1,0,0));0<=b.tangent&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglTangentBuffer),m.vertexAttribPointer(b.tangent,4,m.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUVBuffer),m.vertexAttribPointer(b.uv,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(b.uv)):m.disableVertexAttribArray(b.uv));0<=b.uv2&&
(e.__webglUV2Buffer?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUV2Buffer),m.vertexAttribPointer(b.uv2,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(b.uv2)):m.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinVertexA&&0<=b.skinVertexB&&0<=b.skinIndex&&0<=b.skinWeight)&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinVertexABuffer),m.vertexAttribPointer(b.skinVertexA,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinVertexBBuffer),m.vertexAttribPointer(b.skinVertexB,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,
e.__webglSkinIndicesBuffer),m.vertexAttribPointer(b.skinIndex,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),m.vertexAttribPointer(b.skinWeight,4,m.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Ta&&(m.lineWidth(d),Ta=d),a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),m.drawElements(m.LINES,e.__webglLineCount,m.UNSIGNED_SHORT,0)):(a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),m.drawElements(m.TRIANGLES,e.__webglFaceCount,
m.UNSIGNED_SHORT,0)),N.info.render.calls++,N.info.render.vertices+=e.__webglFaceCount,N.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?m.LINE_STRIP:m.LINES,d=d.linewidth,d!==Ta&&(m.lineWidth(d),Ta=d),m.drawArrays(f,0,e.__webglLineCount),N.info.render.calls++):f instanceof THREE.ParticleSystem?(m.drawArrays(m.POINTS,0,e.__webglParticleCount),N.info.render.calls++,N.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(m.drawArrays(m.TRIANGLE_STRIP,
0,e.__webglVertexCount),N.info.render.calls++)}};this.render=function(a,b,c,d){var e,f,p,q,r=a.__lights,s=a.fog;Y=-1;$a=!0;void 0===b.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Ca.multiply(b.projectionMatrix,b.matrixWorldInverse);Xa.setFromMatrix(Ca);this.autoUpdateObjects&&this.initWebGLObjects(a);h(this.renderPluginsPre,a,b);N.info.render.calls=0;N.info.render.vertices=0;N.info.render.faces=0;N.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);q=a.__webglObjects;d=0;for(e=q.length;d<e;d++)if(f=q[d],p=f.object,f.render=!1,
p.visible&&(!(p instanceof THREE.Mesh||p instanceof THREE.ParticleSystem)||!p.frustumCulled||Xa.contains(p))){v(p,b);var t=f,u=t.object,w=t.buffer,y=void 0,y=u.material;y instanceof THREE.MeshFaceMaterial?(y=w.materialIndex,0<=y&&(y=u.geometry.materials[y],y.transparent?(t.transparent=y,t.opaque=null):(t.opaque=y,t.transparent=null))):y&&(y.transparent?(t.transparent=y,t.opaque=null):(t.opaque=y,t.transparent=null));f.render=!0;this.sortObjects&&(p.renderDepth?f.z=p.renderDepth:(gb.copy(p.matrixWorld.getPosition()),
Ca.multiplyVector3(gb),f.z=gb.z))}this.sortObjects&&q.sort(g);q=a.__webglObjectsImmediate;d=0;for(e=q.length;d<e;d++)f=q[d],p=f.object,p.visible&&(v(p,b),p=f.object.material,p.transparent?(f.transparent=p,f.opaque=null):(f.opaque=p,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),z(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),l(a.__webglObjects,
!1,"",b,r,s,!0,d),n(a.__webglObjectsImmediate,"",b,r,s,!1,d)):(this.setBlending(THREE.NormalBlending),l(a.__webglObjects,!0,"opaque",b,r,s,!1),n(a.__webglObjectsImmediate,"opaque",b,r,s,!1),l(a.__webglObjects,!1,"transparent",b,r,s,!0),n(a.__webglObjectsImmediate,"transparent",b,r,s,!0));h(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(m.bindTexture(m.TEXTURE_CUBE_MAP,c.__webglTexture),
m.generateMipmap(m.TEXTURE_CUBE_MAP),m.bindTexture(m.TEXTURE_CUBE_MAP,null)):(m.bindTexture(m.TEXTURE_2D,c.__webglTexture),m.generateMipmap(m.TEXTURE_2D),m.bindTexture(m.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)};this.renderImmediateObject=function(a,b,c,d,e){var f=r(a,b,c,d,e);L=-1;N.setObjectFaces(e);e.immediateRenderCallback?e.immediateRenderCallback(f,m,Xa):e.render(function(a){N.renderBufferImmediate(a,f,d.shading)})};this.initWebGLObjects=function(a){a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var g=a.__objectsAdded[0],h=a,l=void 0,n=void 0,r=void 0;if(!g.__webglInit)if(g.__webglInit=!0,g._modelViewMatrix=new THREE.Matrix4,g._normalMatrix=new THREE.Matrix3,g instanceof THREE.Mesh){if(n=g.geometry,n instanceof THREE.Geometry){if(void 0===n.geometryGroups){var v=n,w=void 0,y=void 0,x=void 0,z=void 0,B=void 0,C=void 0,A=void 0,E={},H=v.morphTargets.length,G=v.morphNormals.length;
v.geometryGroups={};w=0;for(y=v.faces.length;w<y;w++)x=v.faces[w],z=x.materialIndex,C=void 0!==z?z:-1,void 0===E[C]&&(E[C]={hash:C,counter:0}),A=E[C].hash+"_"+E[C].counter,void 0===v.geometryGroups[A]&&(v.geometryGroups[A]={faces3:[],faces4:[],materialIndex:z,vertices:0,numMorphTargets:H,numMorphNormals:G}),B=x instanceof THREE.Face3?3:4,65535<v.geometryGroups[A].vertices+B&&(E[C].counter+=1,A=E[C].hash+"_"+E[C].counter,void 0===v.geometryGroups[A]&&(v.geometryGroups[A]={faces3:[],faces4:[],materialIndex:z,
vertices:0,numMorphTargets:H,numMorphNormals:G})),x instanceof THREE.Face3?v.geometryGroups[A].faces3.push(w):v.geometryGroups[A].faces4.push(w),v.geometryGroups[A].vertices+=B;v.geometryGroupsList=[];var I=void 0;for(I in v.geometryGroups)v.geometryGroups[I].id=ia++,v.geometryGroupsList.push(v.geometryGroups[I])}for(l in n.geometryGroups)if(r=n.geometryGroups[l],!r.__webglVertexBuffer){var L=r;L.__webglVertexBuffer=m.createBuffer();L.__webglNormalBuffer=m.createBuffer();L.__webglTangentBuffer=m.createBuffer();
L.__webglColorBuffer=m.createBuffer();L.__webglUVBuffer=m.createBuffer();L.__webglUV2Buffer=m.createBuffer();L.__webglSkinVertexABuffer=m.createBuffer();L.__webglSkinVertexBBuffer=m.createBuffer();L.__webglSkinIndicesBuffer=m.createBuffer();L.__webglSkinWeightsBuffer=m.createBuffer();L.__webglFaceBuffer=m.createBuffer();L.__webglLineBuffer=m.createBuffer();var K=void 0,M=void 0;if(L.numMorphTargets)for(L.__webglMorphTargetsBuffers=[],K=0,M=L.numMorphTargets;K<M;K++)L.__webglMorphTargetsBuffers.push(m.createBuffer());
if(L.numMorphNormals)for(L.__webglMorphNormalsBuffers=[],K=0,M=L.numMorphNormals;K<M;K++)L.__webglMorphNormalsBuffers.push(m.createBuffer());N.info.memory.geometries++;var J=r,P=g,Z=P.geometry,Wa=J.faces3,T=J.faces4,S=3*Wa.length+4*T.length,ca=1*Wa.length+2*T.length,ea=3*Wa.length+4*T.length,Y=c(P,J),U=e(Y),Nb=d(Y),V=Y.vertexColors?Y.vertexColors:!1;J.__vertexArray=new Float32Array(3*S);Nb&&(J.__normalArray=new Float32Array(3*S));Z.hasTangents&&(J.__tangentArray=new Float32Array(4*S));V&&(J.__colorArray=
new Float32Array(3*S));if(U){if(0<Z.faceUvs.length||0<Z.faceVertexUvs.length)J.__uvArray=new Float32Array(2*S);if(1<Z.faceUvs.length||1<Z.faceVertexUvs.length)J.__uv2Array=new Float32Array(2*S)}P.geometry.skinWeights.length&&P.geometry.skinIndices.length&&(J.__skinVertexAArray=new Float32Array(4*S),J.__skinVertexBArray=new Float32Array(4*S),J.__skinIndexArray=new Float32Array(4*S),J.__skinWeightArray=new Float32Array(4*S));J.__faceArray=new Uint16Array(3*ca);J.__lineArray=new Uint16Array(2*ea);var fa=
void 0,pb=void 0;if(J.numMorphTargets)for(J.__morphTargetsArrays=[],fa=0,pb=J.numMorphTargets;fa<pb;fa++)J.__morphTargetsArrays.push(new Float32Array(3*S));if(J.numMorphNormals)for(J.__morphNormalsArrays=[],fa=0,pb=J.numMorphNormals;fa<pb;fa++)J.__morphNormalsArrays.push(new Float32Array(3*S));J.__webglFaceCount=3*ca;J.__webglLineCount=2*ea;if(Y.attributes){void 0===J.__webglCustomAttributesList&&(J.__webglCustomAttributesList=[]);var ka=void 0;for(ka in Y.attributes){var X=Y.attributes[ka],da={},
Ca;for(Ca in X)da[Ca]=X[Ca];if(!da.__webglInitialized||da.createUniqueBuffers){da.__webglInitialized=!0;var Xa=1;"v2"===da.type?Xa=2:"v3"===da.type?Xa=3:"v4"===da.type?Xa=4:"c"===da.type&&(Xa=3);da.size=Xa;da.array=new Float32Array(S*Xa);da.buffer=m.createBuffer();da.buffer.belongsToAttribute=ka;X.needsUpdate=!0;da.__original=X}J.__webglCustomAttributesList.push(da)}}J.__inittedArrays=!0;n.verticesNeedUpdate=!0;n.morphTargetsNeedUpdate=!0;n.elementsNeedUpdate=!0;n.uvsNeedUpdate=!0;n.normalsNeedUpdate=
!0;n.tangetsNeedUpdate=!0;n.colorsNeedUpdate=!0}}}else if(g instanceof THREE.Ribbon){if(n=g.geometry,!n.__webglVertexBuffer){var ma=n;ma.__webglVertexBuffer=m.createBuffer();ma.__webglColorBuffer=m.createBuffer();N.info.memory.geometries++;var ua=n,Ea=ua.vertices.length;ua.__vertexArray=new Float32Array(3*Ea);ua.__colorArray=new Float32Array(3*Ea);ua.__webglVertexCount=Ea;n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(g instanceof THREE.Line){if(n=g.geometry,!n.__webglVertexBuffer){var Ha=
n;Ha.__webglVertexBuffer=m.createBuffer();Ha.__webglColorBuffer=m.createBuffer();N.info.memory.geometries++;var Ka=n,ta=g,Ja=Ka.vertices.length;Ka.__vertexArray=new Float32Array(3*Ja);Ka.__colorArray=new Float32Array(3*Ja);Ka.__webglLineCount=Ja;b(Ka,ta);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(g instanceof THREE.ParticleSystem&&(n=g.geometry,!n.__webglVertexBuffer)){var $a=n;$a.__webglVertexBuffer=m.createBuffer();$a.__webglColorBuffer=m.createBuffer();N.info.geometries++;var ab=n,
Va=g,gb=ab.vertices.length;ab.__vertexArray=new Float32Array(3*gb);ab.__colorArray=new Float32Array(3*gb);ab.__sortArray=[];ab.__webglParticleCount=gb;b(ab,Va);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}if(!g.__webglActive){if(g instanceof THREE.Mesh)if(n=g.geometry,n instanceof THREE.BufferGeometry)p(h.__webglObjects,n,g);else for(l in n.geometryGroups)r=n.geometryGroups[l],p(h.__webglObjects,r,g);else g instanceof THREE.Ribbon||g instanceof THREE.Line||g instanceof THREE.ParticleSystem?(n=g.geometry,
p(h.__webglObjects,n,g)):g instanceof THREE.ImmediateRenderObject||g.immediateRenderCallback?h.__webglObjectsImmediate.push({object:g,opaque:null,transparent:null}):g instanceof THREE.Sprite?h.__webglSprites.push(g):g instanceof THREE.LensFlare&&h.__webglFlares.push(g);g.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var na=a.__objectsRemoved[0],Ta=a;na instanceof THREE.Mesh||na instanceof THREE.ParticleSystem||na instanceof THREE.Ribbon||na instanceof THREE.Line?t(Ta.__webglObjects,
na):na instanceof THREE.Sprite?u(Ta.__webglSprites,na):na instanceof THREE.LensFlare?u(Ta.__webglFlares,na):(na instanceof THREE.ImmediateRenderObject||na.immediateRenderCallback)&&t(Ta.__webglObjectsImmediate,na);na.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var nb=0,kb=a.__webglObjects.length;nb<kb;nb++){var Na=a.__webglObjects[nb].object,la=Na.geometry,sc=void 0,kc=void 0,bb=void 0;if(Na instanceof THREE.Mesh)if(la instanceof THREE.BufferGeometry)la.verticesNeedUpdate=!1,la.elementsNeedUpdate=
!1,la.uvsNeedUpdate=!1,la.normalsNeedUpdate=!1,la.colorsNeedUpdate=!1;else{for(var Wc=0,rd=la.geometryGroupsList.length;Wc<rd;Wc++)if(sc=la.geometryGroupsList[Wc],bb=c(Na,sc),kc=bb.attributes&&s(bb),la.verticesNeedUpdate||la.morphTargetsNeedUpdate||la.elementsNeedUpdate||la.uvsNeedUpdate||la.normalsNeedUpdate||la.colorsNeedUpdate||la.tangetsNeedUpdate||kc){var ha=sc,sd=Na,db=m.DYNAMIC_DRAW,td=!la.dynamic,dc=bb;if(ha.__inittedArrays){var gd=d(dc),Xc=dc.vertexColors?dc.vertexColors:!1,hd=e(dc),Hc=gd===
THREE.SmoothShading,O=void 0,W=void 0,mb=void 0,R=void 0,lc=void 0,Qb=void 0,ob=void 0,Ic=void 0,Ib=void 0,mc=void 0,nc=void 0,$=void 0,aa=void 0,ba=void 0,ra=void 0,qb=void 0,rb=void 0,sb=void 0,tc=void 0,tb=void 0,ub=void 0,vb=void 0,uc=void 0,wb=void 0,xb=void 0,yb=void 0,vc=void 0,zb=void 0,Ab=void 0,Bb=void 0,wc=void 0,Cb=void 0,Db=void 0,Eb=void 0,xc=void 0,Rb=void 0,Sb=void 0,Tb=void 0,Jc=void 0,Ub=void 0,Vb=void 0,Wb=void 0,Kc=void 0,oa=void 0,id=void 0,Xb=void 0,oc=void 0,pc=void 0,Oa=void 0,
jd=void 0,La=void 0,Ma=void 0,Yb=void 0,Jb=void 0,Da=0,Ia=0,Kb=0,Lb=0,ib=0,Ua=0,sa=0,Ya=0,Fa=0,Q=0,ga=0,F=0,eb=void 0,Pa=ha.__vertexArray,yc=ha.__uvArray,zc=ha.__uv2Array,jb=ha.__normalArray,wa=ha.__tangentArray,Qa=ha.__colorArray,xa=ha.__skinVertexAArray,ya=ha.__skinVertexBArray,za=ha.__skinIndexArray,Aa=ha.__skinWeightArray,Yc=ha.__morphTargetsArrays,Zc=ha.__morphNormalsArrays,$c=ha.__webglCustomAttributesList,D=void 0,Fb=ha.__faceArray,fb=ha.__lineArray,Za=sd.geometry,ud=Za.elementsNeedUpdate,
kd=Za.uvsNeedUpdate,vd=Za.normalsNeedUpdate,wd=Za.tangetsNeedUpdate,xd=Za.colorsNeedUpdate,yd=Za.morphTargetsNeedUpdate,ec=Za.vertices,pa=ha.faces3,qa=ha.faces4,Ga=Za.faces,ad=Za.faceVertexUvs[0],bd=Za.faceVertexUvs[1],fc=Za.skinVerticesA,gc=Za.skinVerticesB,hc=Za.skinIndices,Zb=Za.skinWeights,$b=Za.morphTargets,Lc=Za.morphNormals;if(Za.verticesNeedUpdate){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],$=ec[R.a],aa=ec[R.b],ba=ec[R.c],Pa[Ia]=$.x,Pa[Ia+1]=$.y,Pa[Ia+2]=$.z,Pa[Ia+3]=aa.x,Pa[Ia+4]=aa.y,Pa[Ia+
5]=aa.z,Pa[Ia+6]=ba.x,Pa[Ia+7]=ba.y,Pa[Ia+8]=ba.z,Ia+=9;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],$=ec[R.a],aa=ec[R.b],ba=ec[R.c],ra=ec[R.d],Pa[Ia]=$.x,Pa[Ia+1]=$.y,Pa[Ia+2]=$.z,Pa[Ia+3]=aa.x,Pa[Ia+4]=aa.y,Pa[Ia+5]=aa.z,Pa[Ia+6]=ba.x,Pa[Ia+7]=ba.y,Pa[Ia+8]=ba.z,Pa[Ia+9]=ra.x,Pa[Ia+10]=ra.y,Pa[Ia+11]=ra.z,Ia+=12;m.bindBuffer(m.ARRAY_BUFFER,ha.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Pa,db)}if(yd)for(Oa=0,jd=$b.length;Oa<jd;Oa++){O=ga=0;for(W=pa.length;O<W;O++)Yb=pa[O],R=Ga[Yb],$=$b[Oa].vertices[R.a],
aa=$b[Oa].vertices[R.b],ba=$b[Oa].vertices[R.c],La=Yc[Oa],La[ga]=$.x,La[ga+1]=$.y,La[ga+2]=$.z,La[ga+3]=aa.x,La[ga+4]=aa.y,La[ga+5]=aa.z,La[ga+6]=ba.x,La[ga+7]=ba.y,La[ga+8]=ba.z,dc.morphNormals&&(Hc?(Jb=Lc[Oa].vertexNormals[Yb],tb=Jb.a,ub=Jb.b,vb=Jb.c):vb=ub=tb=Lc[Oa].faceNormals[Yb],Ma=Zc[Oa],Ma[ga]=tb.x,Ma[ga+1]=tb.y,Ma[ga+2]=tb.z,Ma[ga+3]=ub.x,Ma[ga+4]=ub.y,Ma[ga+5]=ub.z,Ma[ga+6]=vb.x,Ma[ga+7]=vb.y,Ma[ga+8]=vb.z),ga+=9;O=0;for(W=qa.length;O<W;O++)Yb=qa[O],R=Ga[Yb],$=$b[Oa].vertices[R.a],aa=$b[Oa].vertices[R.b],
ba=$b[Oa].vertices[R.c],ra=$b[Oa].vertices[R.d],La=Yc[Oa],La[ga]=$.x,La[ga+1]=$.y,La[ga+2]=$.z,La[ga+3]=aa.x,La[ga+4]=aa.y,La[ga+5]=aa.z,La[ga+6]=ba.x,La[ga+7]=ba.y,La[ga+8]=ba.z,La[ga+9]=ra.x,La[ga+10]=ra.y,La[ga+11]=ra.z,dc.morphNormals&&(Hc?(Jb=Lc[Oa].vertexNormals[Yb],tb=Jb.a,ub=Jb.b,vb=Jb.c,uc=Jb.d):uc=vb=ub=tb=Lc[Oa].faceNormals[Yb],Ma=Zc[Oa],Ma[ga]=tb.x,Ma[ga+1]=tb.y,Ma[ga+2]=tb.z,Ma[ga+3]=ub.x,Ma[ga+4]=ub.y,Ma[ga+5]=ub.z,Ma[ga+6]=vb.x,Ma[ga+7]=vb.y,Ma[ga+8]=vb.z,Ma[ga+9]=uc.x,Ma[ga+10]=uc.y,
Ma[ga+11]=uc.z),ga+=12;m.bindBuffer(m.ARRAY_BUFFER,ha.__webglMorphTargetsBuffers[Oa]);m.bufferData(m.ARRAY_BUFFER,Yc[Oa],db);dc.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,ha.__webglMorphNormalsBuffers[Oa]),m.bufferData(m.ARRAY_BUFFER,Zc[Oa],db))}if(Zb.length){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],zb=Zb[R.a],Ab=Zb[R.b],Bb=Zb[R.c],Aa[Q]=zb.x,Aa[Q+1]=zb.y,Aa[Q+2]=zb.z,Aa[Q+3]=zb.w,Aa[Q+4]=Ab.x,Aa[Q+5]=Ab.y,Aa[Q+6]=Ab.z,Aa[Q+7]=Ab.w,Aa[Q+8]=Bb.x,Aa[Q+9]=Bb.y,Aa[Q+10]=Bb.z,Aa[Q+11]=Bb.w,Cb=hc[R.a],Db=
hc[R.b],Eb=hc[R.c],za[Q]=Cb.x,za[Q+1]=Cb.y,za[Q+2]=Cb.z,za[Q+3]=Cb.w,za[Q+4]=Db.x,za[Q+5]=Db.y,za[Q+6]=Db.z,za[Q+7]=Db.w,za[Q+8]=Eb.x,za[Q+9]=Eb.y,za[Q+10]=Eb.z,za[Q+11]=Eb.w,Rb=fc[R.a],Sb=fc[R.b],Tb=fc[R.c],xa[Q]=Rb.x,xa[Q+1]=Rb.y,xa[Q+2]=Rb.z,xa[Q+3]=1,xa[Q+4]=Sb.x,xa[Q+5]=Sb.y,xa[Q+6]=Sb.z,xa[Q+7]=1,xa[Q+8]=Tb.x,xa[Q+9]=Tb.y,xa[Q+10]=Tb.z,xa[Q+11]=1,Ub=gc[R.a],Vb=gc[R.b],Wb=gc[R.c],ya[Q]=Ub.x,ya[Q+1]=Ub.y,ya[Q+2]=Ub.z,ya[Q+3]=1,ya[Q+4]=Vb.x,ya[Q+5]=Vb.y,ya[Q+6]=Vb.z,ya[Q+7]=1,ya[Q+8]=Wb.x,ya[Q+
9]=Wb.y,ya[Q+10]=Wb.z,ya[Q+11]=1,Q+=12;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],zb=Zb[R.a],Ab=Zb[R.b],Bb=Zb[R.c],wc=Zb[R.d],Aa[Q]=zb.x,Aa[Q+1]=zb.y,Aa[Q+2]=zb.z,Aa[Q+3]=zb.w,Aa[Q+4]=Ab.x,Aa[Q+5]=Ab.y,Aa[Q+6]=Ab.z,Aa[Q+7]=Ab.w,Aa[Q+8]=Bb.x,Aa[Q+9]=Bb.y,Aa[Q+10]=Bb.z,Aa[Q+11]=Bb.w,Aa[Q+12]=wc.x,Aa[Q+13]=wc.y,Aa[Q+14]=wc.z,Aa[Q+15]=wc.w,Cb=hc[R.a],Db=hc[R.b],Eb=hc[R.c],xc=hc[R.d],za[Q]=Cb.x,za[Q+1]=Cb.y,za[Q+2]=Cb.z,za[Q+3]=Cb.w,za[Q+4]=Db.x,za[Q+5]=Db.y,za[Q+6]=Db.z,za[Q+7]=Db.w,za[Q+8]=Eb.x,za[Q+9]=
Eb.y,za[Q+10]=Eb.z,za[Q+11]=Eb.w,za[Q+12]=xc.x,za[Q+13]=xc.y,za[Q+14]=xc.z,za[Q+15]=xc.w,Rb=fc[R.a],Sb=fc[R.b],Tb=fc[R.c],Jc=fc[R.d],xa[Q]=Rb.x,xa[Q+1]=Rb.y,xa[Q+2]=Rb.z,xa[Q+3]=1,xa[Q+4]=Sb.x,xa[Q+5]=Sb.y,xa[Q+6]=Sb.z,xa[Q+7]=1,xa[Q+8]=Tb.x,xa[Q+9]=Tb.y,xa[Q+10]=Tb.z,xa[Q+11]=1,xa[Q+12]=Jc.x,xa[Q+13]=Jc.y,xa[Q+14]=Jc.z,xa[Q+15]=1,Ub=gc[R.a],Vb=gc[R.b],Wb=gc[R.c],Kc=gc[R.d],ya[Q]=Ub.x,ya[Q+1]=Ub.y,ya[Q+2]=Ub.z,ya[Q+3]=1,ya[Q+4]=Vb.x,ya[Q+5]=Vb.y,ya[Q+6]=Vb.z,ya[Q+7]=1,ya[Q+8]=Wb.x,ya[Q+9]=Wb.y,ya[Q+
10]=Wb.z,ya[Q+11]=1,ya[Q+12]=Kc.x,ya[Q+13]=Kc.y,ya[Q+14]=Kc.z,ya[Q+15]=1,Q+=16;0<Q&&(m.bindBuffer(m.ARRAY_BUFFER,ha.__webglSkinVertexABuffer),m.bufferData(m.ARRAY_BUFFER,xa,db),m.bindBuffer(m.ARRAY_BUFFER,ha.__webglSkinVertexBBuffer),m.bufferData(m.ARRAY_BUFFER,ya,db),m.bindBuffer(m.ARRAY_BUFFER,ha.__webglSkinIndicesBuffer),m.bufferData(m.ARRAY_BUFFER,za,db),m.bindBuffer(m.ARRAY_BUFFER,ha.__webglSkinWeightsBuffer),m.bufferData(m.ARRAY_BUFFER,Aa,db))}if(xd&&Xc){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],
ob=R.vertexColors,Ic=R.color,3===ob.length&&Xc===THREE.VertexColors?(wb=ob[0],xb=ob[1],yb=ob[2]):yb=xb=wb=Ic,Qa[Fa]=wb.r,Qa[Fa+1]=wb.g,Qa[Fa+2]=wb.b,Qa[Fa+3]=xb.r,Qa[Fa+4]=xb.g,Qa[Fa+5]=xb.b,Qa[Fa+6]=yb.r,Qa[Fa+7]=yb.g,Qa[Fa+8]=yb.b,Fa+=9;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],ob=R.vertexColors,Ic=R.color,4===ob.length&&Xc===THREE.VertexColors?(wb=ob[0],xb=ob[1],yb=ob[2],vc=ob[3]):vc=yb=xb=wb=Ic,Qa[Fa]=wb.r,Qa[Fa+1]=wb.g,Qa[Fa+2]=wb.b,Qa[Fa+3]=xb.r,Qa[Fa+4]=xb.g,Qa[Fa+5]=xb.b,Qa[Fa+6]=yb.r,Qa[Fa+
7]=yb.g,Qa[Fa+8]=yb.b,Qa[Fa+9]=vc.r,Qa[Fa+10]=vc.g,Qa[Fa+11]=vc.b,Fa+=12;0<Fa&&(m.bindBuffer(m.ARRAY_BUFFER,ha.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,Qa,db))}if(wd&&Za.hasTangents){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],Ib=R.vertexTangents,qb=Ib[0],rb=Ib[1],sb=Ib[2],wa[sa]=qb.x,wa[sa+1]=qb.y,wa[sa+2]=qb.z,wa[sa+3]=qb.w,wa[sa+4]=rb.x,wa[sa+5]=rb.y,wa[sa+6]=rb.z,wa[sa+7]=rb.w,wa[sa+8]=sb.x,wa[sa+9]=sb.y,wa[sa+10]=sb.z,wa[sa+11]=sb.w,sa+=12;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],Ib=R.vertexTangents,
qb=Ib[0],rb=Ib[1],sb=Ib[2],tc=Ib[3],wa[sa]=qb.x,wa[sa+1]=qb.y,wa[sa+2]=qb.z,wa[sa+3]=qb.w,wa[sa+4]=rb.x,wa[sa+5]=rb.y,wa[sa+6]=rb.z,wa[sa+7]=rb.w,wa[sa+8]=sb.x,wa[sa+9]=sb.y,wa[sa+10]=sb.z,wa[sa+11]=sb.w,wa[sa+12]=tc.x,wa[sa+13]=tc.y,wa[sa+14]=tc.z,wa[sa+15]=tc.w,sa+=16;m.bindBuffer(m.ARRAY_BUFFER,ha.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,wa,db)}if(vd&&gd){O=0;for(W=pa.length;O<W;O++)if(R=Ga[pa[O]],lc=R.vertexNormals,Qb=R.normal,3===lc.length&&Hc)for(oa=0;3>oa;oa++)Xb=lc[oa],jb[Ua]=Xb.x,
jb[Ua+1]=Xb.y,jb[Ua+2]=Xb.z,Ua+=3;else for(oa=0;3>oa;oa++)jb[Ua]=Qb.x,jb[Ua+1]=Qb.y,jb[Ua+2]=Qb.z,Ua+=3;O=0;for(W=qa.length;O<W;O++)if(R=Ga[qa[O]],lc=R.vertexNormals,Qb=R.normal,4===lc.length&&Hc)for(oa=0;4>oa;oa++)Xb=lc[oa],jb[Ua]=Xb.x,jb[Ua+1]=Xb.y,jb[Ua+2]=Xb.z,Ua+=3;else for(oa=0;4>oa;oa++)jb[Ua]=Qb.x,jb[Ua+1]=Qb.y,jb[Ua+2]=Qb.z,Ua+=3;m.bindBuffer(m.ARRAY_BUFFER,ha.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,jb,db)}if(kd&&ad&&hd){O=0;for(W=pa.length;O<W;O++)if(mb=pa[O],R=Ga[mb],mc=ad[mb],
void 0!==mc)for(oa=0;3>oa;oa++)oc=mc[oa],yc[Kb]=oc.u,yc[Kb+1]=oc.v,Kb+=2;O=0;for(W=qa.length;O<W;O++)if(mb=qa[O],R=Ga[mb],mc=ad[mb],void 0!==mc)for(oa=0;4>oa;oa++)oc=mc[oa],yc[Kb]=oc.u,yc[Kb+1]=oc.v,Kb+=2;0<Kb&&(m.bindBuffer(m.ARRAY_BUFFER,ha.__webglUVBuffer),m.bufferData(m.ARRAY_BUFFER,yc,db))}if(kd&&bd&&hd){O=0;for(W=pa.length;O<W;O++)if(mb=pa[O],R=Ga[mb],nc=bd[mb],void 0!==nc)for(oa=0;3>oa;oa++)pc=nc[oa],zc[Lb]=pc.u,zc[Lb+1]=pc.v,Lb+=2;O=0;for(W=qa.length;O<W;O++)if(mb=qa[O],R=Ga[mb],nc=bd[mb],
void 0!==nc)for(oa=0;4>oa;oa++)pc=nc[oa],zc[Lb]=pc.u,zc[Lb+1]=pc.v,Lb+=2;0<Lb&&(m.bindBuffer(m.ARRAY_BUFFER,ha.__webglUV2Buffer),m.bufferData(m.ARRAY_BUFFER,zc,db))}if(ud){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],Fb[ib]=Da,Fb[ib+1]=Da+1,Fb[ib+2]=Da+2,ib+=3,fb[Ya]=Da,fb[Ya+1]=Da+1,fb[Ya+2]=Da,fb[Ya+3]=Da+2,fb[Ya+4]=Da+1,fb[Ya+5]=Da+2,Ya+=6,Da+=3;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],Fb[ib]=Da,Fb[ib+1]=Da+1,Fb[ib+2]=Da+3,Fb[ib+3]=Da+1,Fb[ib+4]=Da+2,Fb[ib+5]=Da+3,ib+=6,fb[Ya]=Da,fb[Ya+1]=Da+1,fb[Ya+
2]=Da,fb[Ya+3]=Da+3,fb[Ya+4]=Da+1,fb[Ya+5]=Da+2,fb[Ya+6]=Da+2,fb[Ya+7]=Da+3,Ya+=8,Da+=4;m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,ha.__webglFaceBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Fb,db);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,ha.__webglLineBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,fb,db)}if($c)for(oa=0,id=$c.length;oa<id;oa++)if(D=$c[oa],D.__original.needsUpdate){F=0;if(1===D.size)if(void 0===D.boundTo||"vertices"===D.boundTo){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],D.array[F]=D.value[R.a],D.array[F+
1]=D.value[R.b],D.array[F+2]=D.value[R.c],F+=3;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],D.array[F]=D.value[R.a],D.array[F+1]=D.value[R.b],D.array[F+2]=D.value[R.c],D.array[F+3]=D.value[R.d],F+=4}else{if("faces"===D.boundTo){O=0;for(W=pa.length;O<W;O++)eb=D.value[pa[O]],D.array[F]=eb,D.array[F+1]=eb,D.array[F+2]=eb,F+=3;O=0;for(W=qa.length;O<W;O++)eb=D.value[qa[O]],D.array[F]=eb,D.array[F+1]=eb,D.array[F+2]=eb,D.array[F+3]=eb,F+=4}}else if(2===D.size)if(void 0===D.boundTo||"vertices"===D.boundTo){O=
0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],$=D.value[R.a],aa=D.value[R.b],ba=D.value[R.c],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=aa.x,D.array[F+3]=aa.y,D.array[F+4]=ba.x,D.array[F+5]=ba.y,F+=6;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],$=D.value[R.a],aa=D.value[R.b],ba=D.value[R.c],ra=D.value[R.d],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=aa.x,D.array[F+3]=aa.y,D.array[F+4]=ba.x,D.array[F+5]=ba.y,D.array[F+6]=ra.x,D.array[F+7]=ra.y,F+=8}else{if("faces"===D.boundTo){O=0;for(W=pa.length;O<W;O++)ba=
aa=$=eb=D.value[pa[O]],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=aa.x,D.array[F+3]=aa.y,D.array[F+4]=ba.x,D.array[F+5]=ba.y,F+=6;O=0;for(W=qa.length;O<W;O++)ra=ba=aa=$=eb=D.value[qa[O]],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=aa.x,D.array[F+3]=aa.y,D.array[F+4]=ba.x,D.array[F+5]=ba.y,D.array[F+6]=ra.x,D.array[F+7]=ra.y,F+=8}}else if(3===D.size){var ja;ja="c"===D.type?["r","g","b"]:["x","y","z"];if(void 0===D.boundTo||"vertices"===D.boundTo){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],$=D.value[R.a],
aa=D.value[R.b],ba=D.value[R.c],D.array[F]=$[ja[0]],D.array[F+1]=$[ja[1]],D.array[F+2]=$[ja[2]],D.array[F+3]=aa[ja[0]],D.array[F+4]=aa[ja[1]],D.array[F+5]=aa[ja[2]],D.array[F+6]=ba[ja[0]],D.array[F+7]=ba[ja[1]],D.array[F+8]=ba[ja[2]],F+=9;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],$=D.value[R.a],aa=D.value[R.b],ba=D.value[R.c],ra=D.value[R.d],D.array[F]=$[ja[0]],D.array[F+1]=$[ja[1]],D.array[F+2]=$[ja[2]],D.array[F+3]=aa[ja[0]],D.array[F+4]=aa[ja[1]],D.array[F+5]=aa[ja[2]],D.array[F+6]=ba[ja[0]],D.array[F+
7]=ba[ja[1]],D.array[F+8]=ba[ja[2]],D.array[F+9]=ra[ja[0]],D.array[F+10]=ra[ja[1]],D.array[F+11]=ra[ja[2]],F+=12}else if("faces"===D.boundTo){O=0;for(W=pa.length;O<W;O++)ba=aa=$=eb=D.value[pa[O]],D.array[F]=$[ja[0]],D.array[F+1]=$[ja[1]],D.array[F+2]=$[ja[2]],D.array[F+3]=aa[ja[0]],D.array[F+4]=aa[ja[1]],D.array[F+5]=aa[ja[2]],D.array[F+6]=ba[ja[0]],D.array[F+7]=ba[ja[1]],D.array[F+8]=ba[ja[2]],F+=9;O=0;for(W=qa.length;O<W;O++)ra=ba=aa=$=eb=D.value[qa[O]],D.array[F]=$[ja[0]],D.array[F+1]=$[ja[1]],
D.array[F+2]=$[ja[2]],D.array[F+3]=aa[ja[0]],D.array[F+4]=aa[ja[1]],D.array[F+5]=aa[ja[2]],D.array[F+6]=ba[ja[0]],D.array[F+7]=ba[ja[1]],D.array[F+8]=ba[ja[2]],D.array[F+9]=ra[ja[0]],D.array[F+10]=ra[ja[1]],D.array[F+11]=ra[ja[2]],F+=12}}else if(4===D.size)if(void 0===D.boundTo||"vertices"===D.boundTo){O=0;for(W=pa.length;O<W;O++)R=Ga[pa[O]],$=D.value[R.a],aa=D.value[R.b],ba=D.value[R.c],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=$.z,D.array[F+3]=$.w,D.array[F+4]=aa.x,D.array[F+5]=aa.y,D.array[F+
6]=aa.z,D.array[F+7]=aa.w,D.array[F+8]=ba.x,D.array[F+9]=ba.y,D.array[F+10]=ba.z,D.array[F+11]=ba.w,F+=12;O=0;for(W=qa.length;O<W;O++)R=Ga[qa[O]],$=D.value[R.a],aa=D.value[R.b],ba=D.value[R.c],ra=D.value[R.d],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=$.z,D.array[F+3]=$.w,D.array[F+4]=aa.x,D.array[F+5]=aa.y,D.array[F+6]=aa.z,D.array[F+7]=aa.w,D.array[F+8]=ba.x,D.array[F+9]=ba.y,D.array[F+10]=ba.z,D.array[F+11]=ba.w,D.array[F+12]=ra.x,D.array[F+13]=ra.y,D.array[F+14]=ra.z,D.array[F+15]=ra.w,F+=16}else if("faces"===
D.boundTo){O=0;for(W=pa.length;O<W;O++)ba=aa=$=eb=D.value[pa[O]],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=$.z,D.array[F+3]=$.w,D.array[F+4]=aa.x,D.array[F+5]=aa.y,D.array[F+6]=aa.z,D.array[F+7]=aa.w,D.array[F+8]=ba.x,D.array[F+9]=ba.y,D.array[F+10]=ba.z,D.array[F+11]=ba.w,F+=12;O=0;for(W=qa.length;O<W;O++)ra=ba=aa=$=eb=D.value[qa[O]],D.array[F]=$.x,D.array[F+1]=$.y,D.array[F+2]=$.z,D.array[F+3]=$.w,D.array[F+4]=aa.x,D.array[F+5]=aa.y,D.array[F+6]=aa.z,D.array[F+7]=aa.w,D.array[F+8]=ba.x,D.array[F+
9]=ba.y,D.array[F+10]=ba.z,D.array[F+11]=ba.w,D.array[F+12]=ra.x,D.array[F+13]=ra.y,D.array[F+14]=ra.z,D.array[F+15]=ra.w,F+=16}m.bindBuffer(m.ARRAY_BUFFER,D.buffer);m.bufferData(m.ARRAY_BUFFER,D.array,db)}td&&(delete ha.__inittedArrays,delete ha.__colorArray,delete ha.__normalArray,delete ha.__tangentArray,delete ha.__uvArray,delete ha.__uv2Array,delete ha.__faceArray,delete ha.__vertexArray,delete ha.__lineArray,delete ha.__skinVertexAArray,delete ha.__skinVertexBArray,delete ha.__skinIndexArray,
delete ha.__skinWeightArray)}}la.verticesNeedUpdate=!1;la.morphTargetsNeedUpdate=!1;la.elementsNeedUpdate=!1;la.uvsNeedUpdate=!1;la.normalsNeedUpdate=!1;la.colorsNeedUpdate=!1;la.tangetsNeedUpdate=!1;bb.attributes&&q(bb)}else if(Na instanceof THREE.Ribbon){if(la.verticesNeedUpdate||la.colorsNeedUpdate){var ac=la,ld=m.DYNAMIC_DRAW,Ac=void 0,Bc=void 0,Mc=void 0,bc=void 0,Nc=void 0,md=ac.vertices,nd=ac.colors,zd=md.length,Ad=nd.length,Oc=ac.__vertexArray,Pc=ac.__colorArray,Bd=ac.colorsNeedUpdate;if(ac.verticesNeedUpdate){for(Ac=
0;Ac<zd;Ac++)Mc=md[Ac],bc=3*Ac,Oc[bc]=Mc.x,Oc[bc+1]=Mc.y,Oc[bc+2]=Mc.z;m.bindBuffer(m.ARRAY_BUFFER,ac.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Oc,ld)}if(Bd){for(Bc=0;Bc<Ad;Bc++)Nc=nd[Bc],bc=3*Bc,Pc[bc]=Nc.r,Pc[bc+1]=Nc.g,Pc[bc+2]=Nc.b;m.bindBuffer(m.ARRAY_BUFFER,ac.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,Pc,ld)}}la.verticesNeedUpdate=!1;la.colorsNeedUpdate=!1}else if(Na instanceof THREE.Line){bb=c(Na,sc);kc=bb.attributes&&s(bb);if(la.verticesNeedUpdate||la.colorsNeedUpdate||kc){var Mb=
la,cd=m.DYNAMIC_DRAW,Cc=void 0,Dc=void 0,Qc=void 0,Ba=void 0,Rc=void 0,od=Mb.vertices,pd=Mb.colors,Cd=od.length,Dd=pd.length,Sc=Mb.__vertexArray,Tc=Mb.__colorArray,Ed=Mb.colorsNeedUpdate,dd=Mb.__webglCustomAttributesList,Uc=void 0,qd=void 0,Sa=void 0,qc=void 0,cb=void 0,va=void 0;if(Mb.verticesNeedUpdate){for(Cc=0;Cc<Cd;Cc++)Qc=od[Cc],Ba=3*Cc,Sc[Ba]=Qc.x,Sc[Ba+1]=Qc.y,Sc[Ba+2]=Qc.z;m.bindBuffer(m.ARRAY_BUFFER,Mb.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Sc,cd)}if(Ed){for(Dc=0;Dc<Dd;Dc++)Rc=
pd[Dc],Ba=3*Dc,Tc[Ba]=Rc.r,Tc[Ba+1]=Rc.g,Tc[Ba+2]=Rc.b;m.bindBuffer(m.ARRAY_BUFFER,Mb.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,Tc,cd)}if(dd)for(Uc=0,qd=dd.length;Uc<qd;Uc++)if(va=dd[Uc],va.needsUpdate&&(void 0===va.boundTo||"vertices"===va.boundTo)){Ba=0;qc=va.value.length;if(1===va.size)for(Sa=0;Sa<qc;Sa++)va.array[Sa]=va.value[Sa];else if(2===va.size)for(Sa=0;Sa<qc;Sa++)cb=va.value[Sa],va.array[Ba]=cb.x,va.array[Ba+1]=cb.y,Ba+=2;else if(3===va.size)if("c"===va.type)for(Sa=0;Sa<qc;Sa++)cb=
va.value[Sa],va.array[Ba]=cb.r,va.array[Ba+1]=cb.g,va.array[Ba+2]=cb.b,Ba+=3;else for(Sa=0;Sa<qc;Sa++)cb=va.value[Sa],va.array[Ba]=cb.x,va.array[Ba+1]=cb.y,va.array[Ba+2]=cb.z,Ba+=3;else if(4===va.size)for(Sa=0;Sa<qc;Sa++)cb=va.value[Sa],va.array[Ba]=cb.x,va.array[Ba+1]=cb.y,va.array[Ba+2]=cb.z,va.array[Ba+3]=cb.w,Ba+=4;m.bindBuffer(m.ARRAY_BUFFER,va.buffer);m.bufferData(m.ARRAY_BUFFER,va.array,cd)}}la.verticesNeedUpdate=!1;la.colorsNeedUpdate=!1;bb.attributes&&q(bb)}else Na instanceof THREE.ParticleSystem&&
(bb=c(Na,sc),kc=bb.attributes&&s(bb),(la.verticesNeedUpdate||la.colorsNeedUpdate||Na.sortParticles||kc)&&f(la,m.DYNAMIC_DRAW,Na),la.verticesNeedUpdate=!1,la.colorsNeedUpdate=!1,bb.attributes&&q(bb))}};this.initMaterial=function(a,b,c,d){var e,f,g;a instanceof THREE.MeshDepthMaterial?g="depth":a instanceof THREE.MeshNormalMaterial?g="normal":a instanceof THREE.MeshBasicMaterial?g="basic":a instanceof THREE.MeshLambertMaterial?g="lambert":a instanceof THREE.MeshPhongMaterial?g="phong":a instanceof THREE.LineBasicMaterial?
g="basic":a instanceof THREE.ParticleBasicMaterial&&(g="particle_basic");if(g){var h=THREE.ShaderLib[g];a.uniforms=THREE.UniformsUtils.clone(h.uniforms);a.vertexShader=h.vertexShader;a.fragmentShader=h.fragmentShader}var l,p,n,q,r;l=q=r=h=0;for(p=b.length;l<p;l++)n=b[l],n.onlyShadow||(n instanceof THREE.DirectionalLight&&q++,n instanceof THREE.PointLight&&r++,n instanceof THREE.SpotLight&&h++);r+h+q<=P?(p=q,n=r,q=h):(p=Math.ceil(P*q/(r+q)),q=n=P-p);var s=0,h=0;for(r=b.length;h<r;h++)l=b[h],l.castShadow&&
(l instanceof THREE.SpotLight&&s++,l instanceof THREE.DirectionalLight&&!l.shadowCascade&&s++);var t=50;void 0!==d&&d instanceof THREE.SkinnedMesh&&(t=d.bones.length);var u;a:{r=a.fragmentShader;l=a.vertexShader;h=a.uniforms;b=a.attributes;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:t,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,
maxDirLights:p,maxPointLights:n,maxSpotLights:q,maxShadows:s,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided};var v;d=[];g?d.push(g):(d.push(r),d.push(l));for(v in c)d.push(v),d.push(c[v]);g=d.join();v=0;for(d=V.length;v<d;v++)if(V[v].code===g){u=V[v].program;break a}v=m.createProgram();
d=["precision "+C+" float;",0<ua?"#define VERTEX_TEXTURES":"",N.gammaInput?"#define GAMMA_INPUT":"",N.gammaOutput?"#define GAMMA_OUTPUT":"",N.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?
"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":
"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
p=["precision "+C+" float;","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",N.gammaInput?"#define GAMMA_INPUT":"",N.gammaOutput?"#define GAMMA_OUTPUT":"",N.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":
"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");
m.attachShader(v,x("fragment",p+r));m.attachShader(v,x("vertex",d+l));m.linkProgram(v);m.getProgramParameter(v,m.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+m.getProgramParameter(v,m.VALIDATE_STATUS)+", gl error ["+m.getError()+"]");v.uniforms={};v.attributes={};var w;d="viewMatrix modelViewMatrix projectionMatrix normalMatrix objectMatrix cameraPosition boneGlobalMatrices morphTargetInfluences".split(" ");for(w in h)d.push(w);w=d;d=0;for(h=w.length;d<h;d++)r=w[d],
v.uniforms[r]=m.getUniformLocation(v,r);d="position normal uv uv2 tangent color skinVertexA skinVertexB skinIndex skinWeight".split(" ");for(w=0;w<c.maxMorphTargets;w++)d.push("morphTarget"+w);for(w=0;w<c.maxMorphNormals;w++)d.push("morphNormal"+w);for(u in b)d.push(u);u=d;w=0;for(b=u.length;w<b;w++)c=u[w],v.attributes[c]=m.getAttribLocation(v,c);v.id=V.length;V.push({program:v,code:g});N.info.memory.programs=V.length;u=v}a.program=u;u=a.program.attributes;0<=u.position&&m.enableVertexAttribArray(u.position);
0<=u.color&&m.enableVertexAttribArray(u.color);0<=u.normal&&m.enableVertexAttribArray(u.normal);0<=u.tangent&&m.enableVertexAttribArray(u.tangent);a.skinning&&(0<=u.skinVertexA&&0<=u.skinVertexB&&0<=u.skinIndex&&0<=u.skinWeight)&&(m.enableVertexAttribArray(u.skinVertexA),m.enableVertexAttribArray(u.skinVertexB),m.enableVertexAttribArray(u.skinIndex),m.enableVertexAttribArray(u.skinWeight));if(a.attributes)for(f in a.attributes)void 0!==u[f]&&0<=u[f]&&m.enableVertexAttribArray(u[f]);if(a.morphTargets)for(a.numSupportedMorphTargets=
0,v="morphTarget",f=0;f<this.maxMorphTargets;f++)w=v+f,0<=u[w]&&(m.enableVertexAttribArray(u[w]),a.numSupportedMorphTargets++);if(a.morphNormals)for(a.numSupportedMorphNormals=0,v="morphNormal",f=0;f<this.maxMorphNormals;f++)w=v+f,0<=u[w]&&(m.enableVertexAttribArray(u[w]),a.numSupportedMorphNormals++);a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])};this.setFaceCulling=function(a,b){a?(b&&"ccw"!==b?m.frontFace(m.CW):m.frontFace(m.CCW),"back"===a?m.cullFace(m.BACK):"front"===
a?m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE)):m.disable(m.CULL_FACE)};this.setObjectFaces=function(a){ka!==a.doubleSided&&(a.doubleSided?m.disable(m.CULL_FACE):m.enable(m.CULL_FACE),ka=a.doubleSided);S!==a.flipSided&&(a.flipSided?m.frontFace(m.CW):m.frontFace(m.CCW),S=a.flipSided)};this.setDepthTest=function(a){Ha!==a&&(a?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),Ha=a)};this.setDepthWrite=function(a){Ja!==a&&(m.depthMask(a),Ja=a)};this.setBlending=function(a,b,c,d){if(a!==
Z){switch(a){case THREE.NoBlending:m.disable(m.BLEND);break;case THREE.AdditiveBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE);break;case THREE.SubtractiveBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,m.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,m.SRC_COLOR);break;case THREE.CustomBlending:m.enable(m.BLEND);break;default:m.enable(m.BLEND),m.blendEquationSeparate(m.FUNC_ADD,
m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA)}Z=a}if(a===THREE.CustomBlending){if(b!==ca&&(m.blendEquation(M(b)),ca=b),c!==ea||d!==da)m.blendFunc(M(c),M(d)),ea=c,da=d}else da=ea=ca=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=m.createTexture(),N.info.memory.textures++);m.activeTexture(m.TEXTURE0+b);m.bindTexture(m.TEXTURE_2D,a.__webglTexture);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);
var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=M(a.format),f=M(a.type);A(m.TEXTURE_2D,a,d);a instanceof THREE.DataTexture?m.texImage2D(m.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):m.texImage2D(m.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&m.generateMipmap(m.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else m.activeTexture(m.TEXTURE0+b),m.bindTexture(m.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.__webglTexture=m.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=M(a.format),e=M(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture);A(m.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=m.createFramebuffer();a.__webglRenderbuffer[f]=m.createRenderbuffer();m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+
f,0,d,a.width,a.height,0,d,e,null);var g=a,h=m.TEXTURE_CUBE_MAP_POSITIVE_X+f;m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer[f]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,h,g.__webglTexture,0);w(a.__webglRenderbuffer[f],a)}c&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=m.createFramebuffer(),a.__webglRenderbuffer=m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,a.__webglTexture),A(m.TEXTURE_2D,a,c),m.texImage2D(m.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=
m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,d,a.__webglTexture,0),w(a.__webglRenderbuffer,a),c&&m.generateMipmap(m.TEXTURE_2D);b?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,null);m.bindFramebuffer(m.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Na,a=Nb,d=na,e=kb);b!==G&&(m.bindFramebuffer(m.FRAMEBUFFER,
b),m.viewport(d,e,c,a),G=b);pb=c;Wa=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:
THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=f;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,l=a.faces,n=f.faces,p=a.faceVertexUvs[0],s=f.faceVertexUvs[0],q={},t=0;t<a.materials.length;t++)q[a.materials[t].id]=t;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var t=0,u=h.length;t<u;t++){var r=h[t].clone();c&&c.multiplyVector3(r);g.push(r)}t=0;for(u=n.length;t<u;t++){var g=n[t],
v,z,x=g.vertexNormals,A=g.vertexColors;g instanceof THREE.Face3?v=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(v=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));v.normal.copy(g.normal);d&&d.multiplyVector3(v.normal);h=0;for(r=x.length;h<r;h++)z=x[h].clone(),d&&d.multiplyVector3(z),v.vertexNormals.push(z);v.color.copy(g.color);h=0;for(r=A.length;h<r;h++)z=A[h],v.vertexColors.push(z.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],r=h.id,A=q[r],void 0===A&&(A=a.materials.length,
q[r]=A,a.materials.push(h)),v.materialIndex=A);v.centroid.copy(g.centroid);c&&c.multiplyVector3(v.centroid);l.push(v)}t=0;for(u=s.length;t<u;t++){c=s[t];d=[];h=0;for(r=c.length;h<r;h++)d.push(new THREE.UV(c[h].u,c[h].v));p.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<
c;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return n[e]>a?b(c,e-1):n[e]<a?b(e+1,d):e}return b(0,n.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,l=0,n=[],p,s,q,t;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(p=g[d.a],s=g[d.b],q=g[d.c],d._area=THREE.GeometryUtils.triangleArea(p,s,q)):d instanceof THREE.Face4&&(p=g[d.a],s=g[d.b],q=g[d.c],t=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(p,
s,t),d._area2=THREE.GeometryUtils.triangleArea(s,q,t),d._area=d._area1+d._area2),l+=d._area,n[e]=l;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*l,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v&&(d[e].v-=Math.floor(d[e].v))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){e=d.a;var l=d.b,n=d.c,p=d.d,s=new THREE.Face3,q=new THREE.Face3;s.color.copy(d.color);q.color.copy(d.color);s.materialIndex=d.materialIndex;q.materialIndex=d.materialIndex;s.a=e;s.b=l;s.c=p;q.a=l;q.b=n;q.c=p;4===d.vertexColors.length&&(s.vertexColors[0]=d.vertexColors[0].clone(),s.vertexColors[1]=d.vertexColors[1].clone(),s.vertexColors[2]=d.vertexColors[3].clone(),q.vertexColors[0]=d.vertexColors[1].clone(),q.vertexColors[1]=d.vertexColors[2].clone(),q.vertexColors[2]=
d.vertexColors[3].clone());f.push(s,q);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(s=a.faceVertexUvs[d][b],l=s[1],n=s[2],p=s[3],s=[s[0].clone(),l.clone(),p.clone()],l=[l.clone(),n.clone(),p.clone()],h[d].push(s,l));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(l=a.faceUvs[d][b],g[d].push(l,l))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d])}a.faces=f;a.faceUvs=g;a.faceVertexUvs=
h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,l=f.c,g=a.vertices[g],h=a.vertices[h],l=a.vertices[l],n=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(l.clone());b.push(n.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,l=f.c,g=a.vertices[g],h=a.vertices[h],l=a.vertices[l],b.push(g.clone()),
b.push(h.clone()),b.push(l.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,l,n,p,s,q,t,u,r,v,z,x,A,w,B=[],M=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)M[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,n=a.vertices[f],p=a.vertices[g],s=a.vertices[h],t=n.distanceTo(p),u=p.distanceTo(s),q=n.distanceTo(s),t>b||u>b||q>b)for(l=a.vertices.length,A=e.clone(),w=e.clone(),t>=u&&t>=q?(n=n.clone(),
n.lerpSelf(p,0.5),A.a=f,A.b=l,A.c=h,w.a=l,w.b=g,w.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),A.vertexNormals[1].copy(f),w.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),A.vertexColors[1].copy(f),w.vertexColors[0].copy(f)),e=0):u>=t&&u>=q?(n=p.clone(),n.lerpSelf(s,0.5),A.a=f,A.b=g,A.c=l,w.a=l,w.b=h,w.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],
0.5),A.vertexNormals[2].copy(f),w.vertexNormals[0].copy(f),w.vertexNormals[1].copy(e.vertexNormals[2]),w.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),A.vertexColors[2].copy(f),w.vertexColors[0].copy(f),w.vertexColors[1].copy(e.vertexColors[2]),w.vertexColors[2].copy(e.vertexColors[0])),e=1):(n=n.clone(),n.lerpSelf(s,0.5),A.a=f,A.b=g,A.c=l,w.a=l,w.b=g,w.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),A.vertexNormals[2].copy(f),w.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),A.vertexColors[2].copy(f),w.vertexColors[0].copy(f)),e=2),B.push(A,w),a.vertices.push(n),f=0,g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(n=a.faceVertexUvs[f][c],w=n[0],h=n[1],A=n[2],0===e?(p=w.clone(),p.lerpSelf(h,0.5),n=[w.clone(),p.clone(),A.clone()],h=[p.clone(),h.clone(),A.clone()]):1===e?(p=h.clone(),
p.lerpSelf(A,0.5),n=[w.clone(),h.clone(),p.clone()],h=[p.clone(),A.clone(),w.clone()]):(p=w.clone(),p.lerpSelf(A,0.5),n=[w.clone(),h.clone(),p.clone()],h=[p.clone(),h.clone(),A.clone()]),M[f].push(n,h));else for(B.push(e),f=0,g=a.faceVertexUvs.length;f<g;f++)M[f].push(a.faceVertexUvs[f][c]);else if(f=e.a,g=e.b,h=e.c,l=e.d,n=a.vertices[f],p=a.vertices[g],s=a.vertices[h],q=a.vertices[l],t=n.distanceTo(p),u=p.distanceTo(s),r=s.distanceTo(q),v=n.distanceTo(q),t>b||u>b||r>b||v>b)for(z=a.vertices.length,
x=a.vertices.length+1,A=e.clone(),w=e.clone(),t>=u&&t>=r&&t>=v||r>=u&&r>=t&&r>=v?(t=n.clone(),t.lerpSelf(p,0.5),p=s.clone(),p.lerpSelf(q,0.5),A.a=f,A.b=z,A.c=x,A.d=l,w.a=z,w.b=g,w.c=h,w.d=x,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),A.vertexNormals[1].copy(f),A.vertexNormals[2].copy(g),w.vertexNormals[0].copy(f),w.vertexNormals[3].copy(g)),4===e.vertexColors.length&&(f=e.vertexColors[0].clone(),
f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),A.vertexColors[1].copy(f),A.vertexColors[2].copy(g),w.vertexColors[0].copy(f),w.vertexColors[3].copy(g)),e=0):(t=p.clone(),t.lerpSelf(s,0.5),p=q.clone(),p.lerpSelf(n,0.5),A.a=f,A.b=g,A.c=z,A.d=x,w.a=x,w.b=z,w.c=h,w.d=l,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),A.vertexNormals[2].copy(f),A.vertexNormals[3].copy(g),
w.vertexNormals[0].copy(g),w.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),A.vertexColors[2].copy(f),A.vertexColors[3].copy(g),w.vertexColors[0].copy(g),w.vertexColors[1].copy(f)),e=1),B.push(A,w),a.vertices.push(t,p),f=0,g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(n=a.faceVertexUvs[f][c],w=n[0],h=n[1],A=n[2],n=n[3],0===e?(p=w.clone(),p.lerpSelf(h,0.5),
s=A.clone(),s.lerpSelf(n,0.5),w=[w.clone(),p.clone(),s.clone(),n.clone()],h=[p.clone(),h.clone(),A.clone(),s.clone()]):(p=h.clone(),p.lerpSelf(A,0.5),s=n.clone(),s.lerpSelf(w,0.5),w=[w.clone(),h.clone(),p.clone(),s.clone()],h=[s.clone(),p.clone(),A.clone(),n.clone()]),M[f].push(w,h));else for(B.push(e),f=0,g=a.faceVertexUvs.length;f<g;f++)M[f].push(a.faceVertexUvs[f][c]);a.faces=B;a.faceVertexUvs=M}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);d.onload=function(){e.needsUpdate=!0;c&&c(this)};d.crossOrigin=this.crossOrigin;d.src=a;return e},loadTextureCube:function(a,b,c){var d,e=[],f=new THREE.Texture(e,b);b=e.loadCount=0;for(d=a.length;b<d;++b)e[b]=new Image,e[b].onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0);c&&c(this)},e[b].crossOrigin=this.crossOrigin,e[b].src=a[b];return f},getNormalMap:function(a,b){var c=
function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,l=g.createImageData(d,e),n=l.data,p=0;p<d;p++)for(var s=0;s<e;s++){var q=0>s-1?0:s-1,t=s+1>e-1?e-1:s+1,u=0>p-1?0:p-1,r=p+1>d-1?d-1:p+1,v=[],z=[0,0,h[4*(s*d+p)]/255*b];v.push([-1,0,h[4*(s*d+u)]/255*b]);v.push([-1,-1,h[4*(q*d+u)]/255*b]);v.push([0,
-1,h[4*(q*d+p)]/255*b]);v.push([1,-1,h[4*(q*d+r)]/255*b]);v.push([1,0,h[4*(s*d+r)]/255*b]);v.push([1,1,h[4*(t*d+r)]/255*b]);v.push([0,1,h[4*(t*d+p)]/255*b]);v.push([-1,1,h[4*(t*d+u)]/255*b]);q=[];u=v.length;for(t=0;t<u;t++){var r=v[t],x=v[(t+1)%u],r=[r[0]-z[0],r[1]-z[1],r[2]-z[2]],x=[x[0]-z[0],x[1]-z[1],x[2]-z[2]];q.push(c([r[1]*x[2]-r[2]*x[1],r[2]*x[0]-r[0]*x[2],r[0]*x[1]-r[1]*x[0]]))}v=[0,0,0];for(t=0;t<q.length;t++)v[0]+=q[t][0],v[1]+=q[t][1],v[2]+=q[t][2];v[0]/=q.length;v[1]/=q.length;v[2]/=q.length;
z=4*(s*d+p);n[z]=255*((v[0]+1)/2)|0;n[z+1]=255*(v[1]+0.5)|0;n[z+2]=255*v[2]|0;n[z+3]=255}g.putImageData(l,0,0);return f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;d<e;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),
b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?
(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,
b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.doubleSided=a.doubleSided;
b.flipSided=a.flipSided;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=
a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",
value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),
fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null;this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}};
THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,l;g<=h;)if(d=Math.floor(g+(h-g)/2),l=c[d]-f,0>l)g=d+1;else if(0<l)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;
THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.ArcCurve=function(a,b,c,d,e,f){this.aX=a;this.aY=b;this.aRadius=c;this.aStartAngle=d;this.aEndAngle=e;this.aClockwise=f};THREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.aRadius*Math.cos(b);b=this.aY+this.aRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=0.5*(c-a);d=0.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e;b=c=Number.NEGATIVE_INFINITY;d=e=Number.POSITIVE_INFINITY;var f,g,h,l;l=new THREE.Vector2;g=0;for(h=a.length;g<h;g++)f=a[g],f.x>b?b=f.x:f.x<d&&(d=f.x),f.y>c?c=f.y:f.y<c&&(e=f.y),l.addSelf(f.x,f.y);return{minX:d,minY:e,maxX:b,maxY:c,centroid:l.divideScalar(h)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};
THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,l;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,l=g/c.maxX,l=b.getUtoTmapping(l,g),g=b.getPoint(l),h=b.getNormalVector(l).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0==a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=new THREE.Object3D;THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};
THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1],h=new THREE.ArcCurve(h.x+a,h.y+b,c,d,e,f);this.curves.push(h);h=h.getPoint(f?1:0);g.push(h.x);g.push(h.y);this.actions.push({action:THREE.PathActions.ARC,args:g})};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=new THREE.ArcCurve(a,b,c,d,e,f);this.curves.push(h);h=h.getPoint(f?1:0);g.push(h.x);g.push(h.y);this.actions.push({action:THREE.PathActions.ARC,args:g})};THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,l,n,p,s,q,t,u,r;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];l=f[3];s=f[0];q=f[1];0<c.length?(g=c[c.length-1],t=g.x,
u=g.y):(g=this.actions[d-1].args,t=g[g.length-2],u=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b2(r,t,s,h),r=THREE.Shape.Utils.b2(r,u,q,l),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];l=f[5];s=f[0];q=f[1];n=f[2];p=f[3];0<c.length?(g=c[c.length-1],t=g.x,u=g.y):(g=this.actions[d-1].args,t=g[g.length-2],u=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b3(r,t,s,n,h),r=THREE.Shape.Utils.b3(r,u,q,p,l),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;r=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;r=r.concat(f[0]);r=new THREE.SplineCurve(r);for(f=1;f<=g;f++)c.push(r.getPointAt(f/g));break;case THREE.PathActions.ARC:for(h=f[0],l=f[1],n=f[2],s=f[3],q=!!f[5],p=f[4]-s,t=2*a,f=1;f<=t;f++)r=f/t,q||(r=1-r),r=s+r*p,g=h+n*Math.cos(r),r=l+n*Math.sin(r),c.push(new THREE.Vector2(g,r))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.transform=function(a,b){this.getBoundingBox();return this.getWrapPoints(this.getPoints(b),a)};THREE.Path.prototype.nltransform=function(a,b,c,d,e,f){var g=this.getPoints(),h,l,n,p,s;h=0;for(l=g.length;h<l;h++)n=g[h],p=n.x,s=n.y,n.x=a*p+b*s+c,n.y=d*s+e*p+f;return g};
THREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",b.maxX+100),a.setAttribute("height",b.maxY+100),document.body.appendChild(a));b=a.getContext("2d");b.fillStyle="white";b.fillRect(0,0,a.width,a.height);b.strokeStyle="black";b.beginPath();var c,d,e;a=0;for(c=this.actions.length;a<c;a++)d=this.actions[a],e=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,e);b.stroke();b.closePath();b.strokeStyle="red";d=
this.getPoints();a=0;for(c=d.length;a<c;a++)e=d[a],b.beginPath(),b.arc(e.x,e.y,1.5,0,2*Math.PI,!1),b.stroke(),b.closePath()};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a)for(g=new THREE.Shape,a=0,b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f);else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,l,n,p,s,q,t,u=[];for(l=0;l<b.length;l++){n=b[l];Array.prototype.push.apply(d,n);f=Number.POSITIVE_INFINITY;for(e=0;e<n.length;e++)for(q=n[e],t=[],s=0;s<c.length;s++)p=c[s],p=q.distanceToSquared(p),t.push(p),p<f&&(f=p,g=e,h=s);e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:n.length-1;var r=[n[g],c[h],c[e]];s=THREE.FontUtils.Triangulate.area(r);var v=[n[g],n[f],c[h]];q=THREE.FontUtils.Triangulate.area(v);t=h;p=g;h+=1;g+=-1;0>h&&
(h+=c.length);h%=c.length;0>g&&(g+=n.length);g%=n.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:n.length-1;r=[n[g],c[h],c[e]];r=THREE.FontUtils.Triangulate.area(r);v=[n[g],n[f],c[h]];v=THREE.FontUtils.Triangulate.area(v);s+q>r+v&&(h=t,g=p,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=n.length),g%=n.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:n.length-1);s=c.slice(0,h);q=c.slice(h);t=n.slice(g);p=n.slice(0,g);f=[n[g],n[f],c[h]];u.push([n[g],c[h],c[e]]);u.push(f);c=s.concat(t).concat(p).concat(q)}return{shape:c,
isolatedPts:u,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,l,n={};f=0;for(g=d.length;f<g;f++)l=d[f].x+":"+d[f].y,void 0!==n[l]&&console.log("Duplicate point",l),n[l]=f;f=0;for(g=c.length;f<g;f++)for(h=c[f],d=0;3>d;d++)l=h[d].x+":"+h[d].y,l=n[l],void 0!==l&&(h[d]=l);f=0;for(g=e.length;f<g;f++)for(h=e[f],d=0;3>d;d++)l=h[d].x+":"+h[d].y,l=n[l],void 0!==l&&(h[d]=l);return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};THREE.TextPath=function(a,b){THREE.Path.call(this);this.parameters=b||{};this.set(a)};THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters;this.text=a;var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f};
THREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var l=0;l<a.hierarchy[c].keys[d].morphTargets.length;l++){var n=a.hierarchy[c].keys[d].morphTargets[l];h[n]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var p={};for(n in h){for(l=0;l<a.hierarchy[c].keys[d].morphTargets.length;l++)if(a.hierarchy[c].keys[d].morphTargets[l]===n){p[n]=a.hierarchy[c].keys[d].morphTargetsInfluences[l];break}l===a.hierarchy[c].keys[d].morphTargets.length&&(p[n]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=p}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c,d){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.JITCompile=void 0!==d?d:!0;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)void 0!==this.hierarchy[a].animationCache&&(this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache)};
THREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,l,n,p=this.data.JIT.hierarchy,s,q;q=this.currentTime+=a*this.timeScale;s=this.currentTime%=this.data.length;n=parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);for(var t=0,u=this.hierarchy.length;t<u;t++)if(a=this.hierarchy[t],l=a.animationCache,this.JITCompile&&void 0!==p[t][n])a instanceof THREE.Bone?(a.skinMatrix=p[t][n],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!1):(a.matrix=
p[t][n],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{this.JITCompile&&(a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix);for(var r=0;3>r;r++){c=b[r];g=l.prevKey[c];h=l.nextKey[c];if(h.time<=q){if(s<q)if(this.loop)for(g=this.data.hierarchy[t].keys[0],h=this.getNextKeyWith(c,t,1);h.time<s;)g=h,h=this.getNextKeyWith(c,t,h.index+1);else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,t,h.index+1);while(h.time<s)}l.prevKey[c]=
g;l.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(s-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+t),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=
this.getPrevKeyWith("pos",t,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",t,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===
c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}if(this.JITCompile&&void 0===p[0][n])for(this.hierarchy[0].updateMatrixWorld(!0),t=0;t<this.hierarchy.length;t++)p[t][n]=this.hierarchy[t]instanceof THREE.Bone?this.hierarchy[t].skinMatrix.clone():this.hierarchy[t].matrix.clone()}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,l,n;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];l=a[c[2]];n=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],l[0],n[0],e,c,g);d[1]=this.interpolate(f[1],h[1],l[1],n[1],e,c,g);d[2]=this.interpolate(f[2],h[2],l[2],n[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,l;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((l=g<h)&&!this.loop){a=0;for(var n=this.hierarchy.length;a<n;a++){var p=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=p.length-1;e=this.hierarchy[a];if(p.length){for(p=
0;p<f.length;p++)g=f[p],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(n=this.hierarchy.length;a<n;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var p=b.keys,s=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(p.length){this.JITCompile&&s&&(d instanceof
THREE.Bone?d.skinMatrix=s.originalMatrix:d.matrix=s.originalMatrix);b=s.prevKey;c=s.nextKey;if(b&&c){if(c.time<=h){if(l&&this.loop)for(b=p[0],c=p[1];c.time<g;)b=c,c=p[b.index+1];else if(!l)for(var q=p.length-1;c.time<g&&c.index!==q;)b=c,c=p[b.index+1];s.prevKey=b;s.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e])for(this.hierarchy[0].updateMatrixWorld(!0),a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var l=new THREE.PerspectiveCamera(90,1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,q=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=q;c.activeCubeFace=5;a.render(b,l,c)}};THREE.CubeCamera.prototype=new THREE.Object3D;THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;
THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CombinedCamera;
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPersepectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){var c=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=
!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=
function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=
!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);
this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&
(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);
this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1)};
THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),v=g.length,z=0;f=v-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<v-1;f++)z=d*h.chunks[f]/h.total,b.keys[f]={time:z,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/
2,this.domElement.setAttribute("tabindex",-1));var g=2*Math.PI,h=Math.PI/180;this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],
b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,
this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,
2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),
h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),t=0;t<b.points.length;t++)c=new THREE.Mesh(g,h),c.position.copy(b.points[t]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1)}};
THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,l=0,n=0,p=0,s=0,q=0,t=window.innerWidth/2,u=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var b=a*this.lookSpeed;
this.rotateHorizontally(b*s);this.rotateVertically(b*q)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<l||this.autoForward&&!(0>l)?1:l));this.object.translateX(b*n);this.object.translateY(b*p);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);c.cross(d,e).normalize();
d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);this.object.matrix.multiplySelf(f);
this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*a;this.object.position.y+=
this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=
function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){s=(a.clientX-t)/window.innerWidth;q=(a.clientY-u)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:l=
1;break;case 2:l=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:l=0;break;case 2:l=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:l=1;break;case 37:case 65:n=-1;break;case 40:case 83:l=-1;break;case 39:case 68:n=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:p=1;break;case 70:p=-1}},!1);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:l=
0;break;case 37:case 65:n=0;break;case 40:case 83:l=0;break;case 39:case 68:n=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:p=0;break;case 70:p=0}},!1)};
THREE.TrackballControls=function(a,b){THREE.EventTarget.call(this);var c=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=
new THREE.Vector3;var d=new THREE.Vector3,e=!1,f=-1,g=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector2,p=new THREE.Vector2,s=new THREE.Vector2,q=new THREE.Vector2,t={type:"change"};this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-c.screen.offsetLeft)/c.radius),0.5*((b-c.screen.offsetTop)/c.radius))};this.getMouseProjectionOnBall=function(a,b){var d=new THREE.Vector3((a-
0.5*c.screen.width-c.screen.offsetLeft)/c.radius,(0.5*c.screen.height+c.screen.offsetTop-b)/c.radius,0),e=d.length();1<e?d.normalize():d.z=Math.sqrt(1-e*e);g.copy(c.object.position).subSelf(c.target);e=c.object.up.clone().setLength(d.y);e.addSelf(c.object.up.clone().crossSelf(g).setLength(d.x));e.addSelf(g.setLength(d.z));return e};this.rotateCamera=function(){var a=Math.acos(h.dot(l)/h.length()/l.length());if(a){var b=(new THREE.Vector3).cross(h,l).normalize(),d=new THREE.Quaternion,a=a*c.rotateSpeed;
d.setFromAxisAngle(b,-a);d.multiplyVector3(g);d.multiplyVector3(c.object.up);d.multiplyVector3(l);c.staticMoving?h=l:(d.setFromAxisAngle(b,a*(c.dynamicDampingFactor-1)),d.multiplyVector3(h))}};this.zoomCamera=function(){var a=1+(p.y-n.y)*c.zoomSpeed;1!==a&&0<a&&(g.multiplyScalar(a),c.staticMoving?n=p:n.y+=(p.y-n.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=q.clone().subSelf(s);if(a.lengthSq()){a.multiplyScalar(g.length()*c.panSpeed);var b=g.clone().crossSelf(c.object.up).setLength(a.x);
b.addSelf(c.object.up.clone().setLength(a.y));c.object.position.addSelf(b);c.target.addSelf(b);c.staticMoving?s=q:s.addSelf(a.sub(q,s).multiplyScalar(c.dynamicDampingFactor))}};this.checkDistances=function(){c.noZoom&&c.noPan||(c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),g.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,g.setLength(c.minDistance)))};this.update=function(){g.copy(c.object.position).subSelf(c.target);c.noRotate||
c.rotateCamera();c.noZoom||c.zoomCamera();c.noPan||c.panCamera();c.object.position.add(c.target,g);c.checkDistances();c.object.lookAt(c.target);0<d.distanceTo(c.object.position)&&(c.dispatchEvent(t),d.copy(c.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){c.enabled&&(e&&(h=l=c.getMouseProjectionOnBall(a.clientX,a.clientY),n=p=c.getMouseOnScreen(a.clientX,a.clientY),s=q=c.getMouseOnScreen(a.clientX,
a.clientY),e=!1),-1!==f&&(0!==f||c.noRotate?1!==f||c.noZoom?2===f&&!c.noPan&&(q=c.getMouseOnScreen(a.clientX,a.clientY)):p=c.getMouseOnScreen(a.clientX,a.clientY):l=c.getMouseProjectionOnBall(a.clientX,a.clientY)))},!1);this.domElement.addEventListener("mousedown",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),-1===f&&(f=a.button,0!==f||c.noRotate?1!==f||c.noZoom?this.noPan||(s=q=c.getMouseOnScreen(a.clientX,a.clientY)):n=p=c.getMouseOnScreen(a.clientX,a.clientY):h=l=c.getMouseProjectionOnBall(a.clientX,
a.clientY)))},!1);this.domElement.addEventListener("mouseup",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),f=-1)},!1);window.addEventListener("keydown",function(a){c.enabled&&-1===f&&(a.keyCode!==c.keys[0]||c.noRotate?a.keyCode!==c.keys[1]||c.noZoom?a.keyCode===c.keys[2]&&!c.noPan&&(f=2):f=1:f=0,-1!==f&&(e=!0))},!1);window.addEventListener("keyup",function(){c.enabled&&-1!==f&&(f=-1)},!1)};
THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function l(a,b,c,g,h,l,p,q){var r,s=d||1,t=e||1,u=h/2,v=l/2,x=n.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)r="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)r="y",t=f||1;else if("z"===a&&"y"===b||"y"===a&&"z"===b)r="x",s=f||1;var m=s+1,z=t+1,A=h/s,G=l/t,Y=new THREE.Vector3;Y[r]=0<p?1:-1;for(h=0;h<z;h++)for(l=0;l<m;l++){var L=new THREE.Vector3;L[a]=(l*A-u)*c;L[b]=(h*G-v)*g;L[r]=p;n.vertices.push(L)}for(h=0;h<t;h++)for(l=0;l<s;l++)a=new THREE.Face4(l+
m*h+x,l+m*(h+1)+x,l+1+m*(h+1)+x,l+1+m*h+x),a.normal.copy(Y),a.vertexNormals.push(Y.clone(),Y.clone(),Y.clone(),Y.clone()),a.materialIndex=q,n.faces.push(a),n.faceVertexUvs[0].push([new THREE.UV(l/s,h/t),new THREE.UV(l/s,(h+1)/t),new THREE.UV((l+1)/s,(h+1)/t),new THREE.UV((l+1)/s,h/t)])}THREE.Geometry.call(this);var n=this,p=a/2,s=b/2,q=c/2,t,u,r,v,z,x;if(void 0!==g){if(g instanceof Array)this.materials=g;else for(this.materials=[],t=0;6>t;t++)this.materials.push(g);t=0;v=1;u=2;z=3;r=4;x=5}else this.materials=
[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var A in h)void 0!==this.sides[A]&&(this.sides[A]=h[A]);this.sides.px&&l("z","y",-1,-1,c,b,p,t);this.sides.nx&&l("z","y",1,-1,c,b,-p,v);this.sides.py&&l("x","z",1,1,a,c,s,u);this.sides.ny&&l("x","z",1,-1,a,c,-s,z);this.sides.pz&&l("x","y",1,-1,a,b,q,r);this.sides.nz&&l("x","y",-1,-1,a,b,-q,x);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;e=e||1;var h,l,n=[],p=[];for(l=0;l<=e;l++){var s=[],q=[],t=l/e,u=t*(b-a)+a;for(h=0;h<=d;h++){var r=h/d,v=new THREE.Vector3;v.x=u*Math.sin(2*r*Math.PI);v.y=-t*c+g;v.z=u*Math.cos(2*r*Math.PI);this.vertices.push(v);s.push(this.vertices.length-1);q.push(new THREE.UV(r,t))}n.push(s);p.push(q)}c=(b-a)/c;for(h=0;h<d;h++)for(0!==a?(s=this.vertices[n[0][h]].clone(),
q=this.vertices[n[0][h+1]].clone()):(s=this.vertices[n[1][h]].clone(),q=this.vertices[n[1][h+1]].clone()),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*c).normalize(),q.setY(Math.sqrt(q.x*q.x+q.z*q.z)*c).normalize(),l=0;l<e;l++){var t=n[l][h],u=n[l+1][h],r=n[l+1][h+1],v=n[l][h+1],z=s.clone(),x=s.clone(),A=q.clone(),w=q.clone(),B=p[l][h].clone(),M=p[l+1][h].clone(),I=p[l+1][h+1].clone(),C=p[l][h+1].clone();this.faces.push(new THREE.Face4(t,u,r,v,[z,x,A,w]));this.faceVertexUvs[0].push([B,M,I,C])}if(!f&&0<a)for(this.vertices.push(new THREE.Vector3(0,
g,0)),h=0;h<d;h++)t=n[0][h],u=n[0][h+1],r=this.vertices.length-1,z=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),B=p[0][h].clone(),M=p[0][h+1].clone(),I=new THREE.UV(M.u,0),this.faces.push(new THREE.Face3(t,u,r,[z,x,A])),this.faceVertexUvs[0].push([B,M,I]);if(!f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-g,0)),h=0;h<d;h++)t=n[l][h+1],u=n[l][h],r=this.vertices.length-1,z=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),A=new THREE.Vector3(0,-1,0),B=p[l][h+
1].clone(),M=p[l][h].clone(),I=new THREE.UV(M.u,1),this.faces.push(new THREE.Face3(t,u,r,[z,x,A])),this.faceVertexUvs[0].push([B,M,I]);this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,l=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);l.copy(a).addSelf(g);if(h.equals(l))return g.clone();
h.copy(b).addSelf(f);l.copy(c).addSelf(g);f=d.dot(g);g=l.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function e(c,d){var e,f;for(L=c.length;0<=--L;){e=L;f=L-1;0>f&&(f=c.length-1);
for(var g=0,h=q+2*p,g=0;g<h;g++){var l=X*g,m=X*(g+1),n=d+e+l,l=d+f+l,r=d+f+m,m=d+e+m,s=c,t=g,u=h,n=n+K,l=l+K,r=r+K,m=m+K;E.faces.push(new THREE.Face4(n,l,r,m,null,null,x));n=S.generateSideWallUV(E,a,s,b,n,l,r,m,t,u);E.faceVertexUvs[0].push(n)}}}function f(a,b,c){E.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=K;d+=K;e+=K;E.faces.push(new THREE.Face3(c,d,e,null,null,z));c=f?S.generateBottomUV(E,a,b,c,d,e):S.generateTopUV(E,a,b,c,d,e);E.faceVertexUvs[0].push(c)}var h=void 0!==b.amount?
b.amount:100,l=void 0!==b.bevelThickness?b.bevelThickness:6,n=void 0!==b.bevelSize?b.bevelSize:l-2,p=void 0!==b.bevelSegments?b.bevelSegments:3,s=void 0!==b.bevelEnabled?b.bevelEnabled:!0,q=void 0!==b.steps?b.steps:1,t=b.bendPath,u=b.extrudePath,r,v=!1,z=b.material,x=b.extrudeMaterial,A,w,B,M;u&&(r=u.getSpacedPoints(q),v=!0,s=!1,A=new THREE.TubeGeometry.FrenetFrames(u,q,!1),w=new THREE.Vector3,B=new THREE.Vector3,M=new THREE.Vector3);s||(n=l=p=0);var I,C,y,E=this,K=this.vertices.length;t&&a.addWrapPath(t);
var u=a.extractPoints(),t=u.shape,J=u.holes;if(u=!THREE.Shape.Utils.isClockWise(t)){t=t.reverse();C=0;for(y=J.length;C<y;C++)I=J[C],THREE.Shape.Utils.isClockWise(I)&&(J[C]=I.reverse());u=!1}var U=THREE.Shape.Utils.triangulateShape(t,J),T=t;C=0;for(y=J.length;C<y;C++)I=J[C],t=t.concat(I);var H,P,N,m,V,X=t.length,G,Y=U.length,u=[],L=0;N=T.length;H=N-1;for(P=L+1;L<N;L++,H++,P++)H===N&&(H=0),P===N&&(P=0),u[L]=d(T[L],T[H],T[P]);var fa=[],ia,ka=u.concat();C=0;for(y=J.length;C<y;C++){I=J[C];ia=[];L=0;N=
I.length;H=N-1;for(P=L+1;L<N;L++,H++,P++)H===N&&(H=0),P===N&&(P=0),ia[L]=d(I[L],I[H],I[P]);fa.push(ia);ka=ka.concat(ia)}for(H=0;H<p;H++){N=H/p;m=l*(1-N);P=n*Math.sin(N*Math.PI/2);L=0;for(N=T.length;L<N;L++)V=c(T[L],u[L],P),f(V.x,V.y,-m);C=0;for(y=J.length;C<y;C++)for(I=J[C],ia=fa[C],L=0,N=I.length;L<N;L++)V=c(I[L],ia[L],P),f(V.x,V.y,-m)}P=n;for(L=0;L<X;L++)V=s?c(t[L],ka[L],P):t[L],v?(B.copy(A.normals[0]).multiplyScalar(V.x),w.copy(A.binormals[0]).multiplyScalar(V.y),M.copy(r[0]).addSelf(B).addSelf(w),
f(M.x,M.y,M.z)):f(V.x,V.y,0);for(N=1;N<=q;N++)for(L=0;L<X;L++)V=s?c(t[L],ka[L],P):t[L],v?(B.copy(A.normals[N]).multiplyScalar(V.x),w.copy(A.binormals[N]).multiplyScalar(V.y),M.copy(r[N]).addSelf(B).addSelf(w),f(M.x,M.y,M.z)):f(V.x,V.y,h/q*N);for(H=p-1;0<=H;H--){N=H/p;m=l*(1-N);P=n*Math.sin(N*Math.PI/2);L=0;for(N=T.length;L<N;L++)V=c(T[L],u[L],P),f(V.x,V.y,h+m);C=0;for(y=J.length;C<y;C++)for(I=J[C],ia=fa[C],L=0,N=I.length;L<N;L++)V=c(I[L],ia[L],P),v?f(V.x,V.y+r[q-1].y,r[q-1].x+m):f(V.x,V.y,h+m)}var S=
THREE.ExtrudeGeometry.WorldUVGenerator;(function(){if(s){var a;a=0*X;for(L=0;L<Y;L++)G=U[L],g(G[2]+a,G[1]+a,G[0]+a,!0);a=q+2*p;a*=X;for(L=0;L<Y;L++)G=U[L],g(G[0]+a,G[1]+a,G[2]+a,!1)}else{for(L=0;L<Y;L++)G=U[L],g(G[2],G[1],G[0],!0);for(L=0;L<Y;L++)G=U[L],g(G[0]+X*q,G[1]+X*q,G[2]+X*q,!1)}})();(function(){var a=0;e(T,a);a+=T.length;C=0;for(y=J.length;C<y;C++)I=J[C],e(I,a),a+=I.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,1-a.vertices[d].y),new THREE.UV(b,1-e),new THREE.UV(c,1-f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;var l=a.vertices[f].y;f=a.vertices[f].z;var n=a.vertices[g].x,
p=a.vertices[g].y;g=a.vertices[g].z;var s=a.vertices[h].x,q=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-l)?[new THREE.UV(b,e),new THREE.UV(d,f),new THREE.UV(n,g),new THREE.UV(s,a)]:[new THREE.UV(c,e),new THREE.UV(l,f),new THREE.UV(p,g),new THREE.UV(q,a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);var g=b+1;for(c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++)for(d=0,e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,l=a/c,n=b/d,p=new THREE.Vector3(0,1,0);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*l-e,0,a*n-f));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(p),e.vertexNormals.push(p.clone(),p.clone(),p.clone(),p.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/c,(a+1)/d),new THREE.UV((b+
1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var h,l,n=[],p=[];for(l=0;l<=c;l++){var s=[],q=[];for(h=0;h<=b;h++){var t=h/b,u=l/c,r=new THREE.Vector3;r.x=-a*Math.cos(d+t*e)*Math.sin(f+u*g);r.y=a*Math.cos(f+u*g);r.z=a*Math.sin(d+t*e)*Math.sin(f+u*g);this.vertices.push(r);s.push(this.vertices.length-1);q.push(new THREE.UV(t,
u))}n.push(s);p.push(q)}for(l=0;l<c;l++)for(h=0;h<b;h++){d=n[l][h+1];e=n[l][h];f=n[l+1][h];g=n[l+1][h+1];var s=this.vertices[d].clone().normalize(),q=this.vertices[e].clone().normalize(),t=this.vertices[f].clone().normalize(),u=this.vertices[g].clone().normalize(),r=p[l][h+1].clone(),v=p[l][h].clone(),z=p[l+1][h].clone(),x=p[l+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[s,t,u])),this.faceVertexUvs[0].push([r,z,x])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,
e,f,[s,q,t])),this.faceVertexUvs[0].push([r,v,z])):(this.faces.push(new THREE.Face4(d,e,f,g,[s,q,t,u])),this.faceVertexUvs[0].push([r,v,z,x]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;
THREE.TextGeometry=function(a,b){var c=(new THREE.TextPath(a,b)).toShapes();b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);if(b.bend){var d=c[c.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;
THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
(""+a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,l,n,p,s,q,t,u,r,v,z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(b=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),n=b.length,a=0;a<n;)switch(l=b[a++],l){case "m":l=b[a++]*c+d;p=b[a++]*c;f.push(new THREE.Vector2(l,p));e.moveTo(l,p);break;case "l":l=b[a++]*c+d;p=b[a++]*c;f.push(new THREE.Vector2(l,
p));e.lineTo(l,p);break;case "q":l=b[a++]*c+d;p=b[a++]*c;t=b[a++]*c+d;u=b[a++]*c;e.quadraticCurveTo(t,u,l,p);if(g=f[f.length-1])for(s=g.x,q=g.y,g=1,h=this.divisions;g<=h;g++){var x=g/h,A=THREE.Shape.Utils.b2(x,s,t,l),x=THREE.Shape.Utils.b2(x,q,u,p);f.push(new THREE.Vector2(A,x))}break;case "b":if(l=b[a++]*c+d,p=b[a++]*c,t=b[a++]*c+d,u=b[a++]*-c,r=b[a++]*c+d,v=b[a++]*-c,e.bezierCurveTo(l,p,t,u,r,v),g=f[f.length-1])for(s=g.x,q=g.y,g=1,h=this.divisions;g<=h;g++)x=g/h,A=THREE.Shape.Utils.b3(x,s,t,r,l),
x=THREE.Shape.Utils.b3(x,q,u,v,p),f.push(new THREE.Vector2(A,x))}return{offset:z.ha*c,points:f,path:e}}}};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],l,n,p;if(0<b(a))for(n=0;n<e;n++)g[n]=n;else for(n=0;n<e;n++)g[n]=e-1-n;var s=2*e;for(n=e-1;2<e;){if(0>=s--){console.log("Warning, unable to triangulate polygon!");break}l=n;e<=l&&(l=0);n=l+1;e<=n&&(n=0);p=n+1;e<=p&&(p=0);var q;a:{q=a;var t=l,u=n,r=p,v=e,z=g,x=void 0,A=void 0,w=void 0,B=void 0,M=void 0,
I=void 0,C=void 0,y=void 0,E=void 0,A=q[z[t]].x,w=q[z[t]].y,B=q[z[u]].x,M=q[z[u]].y,I=q[z[r]].x,C=q[z[r]].y;if(1E-10>(B-A)*(C-w)-(M-w)*(I-A))q=!1;else{for(x=0;x<v;x++)if(x!=t&&x!=u&&x!=r){var y=q[z[x]].x,E=q[z[x]].y,K=void 0,J=void 0,U=void 0,T=void 0,H=void 0,P=void 0,N=void 0,m=void 0,V=void 0,X=void 0,G=void 0,Y=void 0,K=I-B,J=C-M,U=A-I,T=w-C,H=B-A,P=M-w,N=y-A,m=E-w,V=y-B,X=E-M,G=y-I,Y=E-C,K=K*X-J*V,H=H*m-P*N,U=U*Y-T*G;if(0<=K&&0<=U&&0<=H){q=!1;break a}}q=!0}}if(q){f.push([a[g[l]],a[g[n]],a[g[p]]]);
h.push([g[l],g[n],g[p]]);l=n;for(p=n+1;p<e;l++,p++)g[l]=g[p];e--;s=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var f=d/this.segmentsT*this.arc,g=2*c/this.segmentsR*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(f);h.z=
this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){e=(this.segmentsT+1)*c+d-1;var f=(this.segmentsT+1)*(c-1)+d-1,g=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,l=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);l.normal.addSelf(b[e]);l.normal.addSelf(b[f]);l.normal.addSelf(b[g]);l.normal.addSelf(b[h]);l.normal.normalize();this.faces.push(l);
this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.segmentsR;++a)for(this.grid[a]=
Array(this.segmentsT),b=0;b<this.segmentsT;++b){var l=2*(a/this.segmentsR)*this.p*Math.PI;g=2*(b/this.segmentsT)*Math.PI;f=h(l,g,this.q,this.p,this.radius,this.heightScale);l=h(l+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(l,f);d.add(l,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();l=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=l*d.x+g*e.x;f.y+=l*d.y+g*e.y;f.z+=l*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}for(a=0;a<this.segmentsR;++a)for(b=
0;b<this.segmentsT;++b){e=(a+1)%this.segmentsR;f=(b+1)%this.segmentsT;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.UV(a/this.segmentsR,b/this.segmentsT);var l=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),n=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),p=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,l,n,p])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};
THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;f=this.segments+1;var l,n,p,s=new THREE.Vector3,q,t,u;b=new THREE.TubeGeometry.FrenetFrames(a,b,e);q=b.tangents;t=b.normals;u=b.binormals;this.tangents=q;this.normals=t;this.binormals=u;for(b=0;b<f;b++)for(this.grid[b]=[],d=b/(f-1),p=a.getPointAt(d),d=q[b],g=t[b],h=u[b],this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
p,c,255)),this.debug.add(new THREE.ArrowHelper(g,p,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,p,c,65280))),d=0;d<this.segmentsRadius;d++)l=2*(d/this.segmentsRadius)*Math.PI,n=-this.radius*Math.cos(l),l=this.radius*Math.sin(l),s.copy(p),s.x+=n*g.x+l*h.x,s.y+=n*g.y+l*h.y,s.z+=n*g.z+l*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++)f=e?(b+1)%this.segments:b+1,s=(d+1)%this.segmentsRadius,a=this.grid[b][d],
c=this.grid[f][d],f=this.grid[f][s],s=this.grid[b][s],q=new THREE.UV(b/this.segments,d/this.segmentsRadius),t=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius),u=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius),g=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(a,c,f,s)),this.faceVertexUvs[0].push([q,t,u,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=new THREE.Geometry;
THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,l=new THREE.Matrix4;b+=1;var n,p,s;this.tangents=e;this.normals=f;this.binormals=g;for(n=0;n<b;n++)p=n/(b-1),e[n]=a.getTangentAt(p),e[n].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;n=Math.abs(e[0].x);p=Math.abs(e[0].y);s=Math.abs(e[0].z);n<=a&&(a=n,d.set(1,0,0));p<=a&&(a=p,d.set(0,1,0));s<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(n=1;n<b;n++)f[n]=f[n-1].clone(),g[n]=g[n-1].clone(),h.cross(e[n-1],e[n]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[n-1].dot(e[n])),l.makeRotationAxis(h,d).multiplyVector3(f[n])),g[n].cross(e[n],f[n]);if(c)for(d=Math.acos(f[0].dot(f[b-1])),d/=b-1,0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d),n=1;n<b;n++)l.makeRotationAxis(e[n],d*n).multiplyVector3(f[n]),g[n].cross(e[n],f[n])};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=l.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),l.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
l.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){s[a.index]||(s[a.index]=[]);s[b.index]||(s[b.index]=[]);var c=s[a.index][b.index];void 0===c&&(s[a.index][b.index]=s[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
c=c||1;d=d||0;for(var l=this,n=0,p=a.length;n<p;n++)e(new THREE.Vector3(a[n][0],a[n][1],a[n][2]));var s=[];a=this.vertices;n=0;for(p=b.length;n<p;n++)f(a[b[n][0]],a[b[n][1]],a[b[n][2]],d);this.mergeVertices();n=0;for(p=this.vertices.length;n<p;n++)this.vertices[n].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=new THREE.Geometry;THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};
THREE.TetrahedronGeometry.prototype=new THREE.Geometry;THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,l,n,p,s=b+1;for(h=0;h<=c;h++)for(p=h/c,l=0;l<=b;l++)n=l/b,n=a(n,p),e.push(n);var q,t,u,r;for(h=0;h<c;h++)for(l=0;l<b;l++)a=h*s+l,e=h*s+l+1,p=(h+1)*s+l,n=(h+1)*s+l+1,q=new THREE.UV(h/b,l/c),t=new THREE.UV(h/b,(l+1)/c),u=new THREE.UV((h+1)/b,l/c),r=new THREE.UV((h+1)/b,(l+1)/c),d?(f.push(new THREE.Face3(a,e,p)),f.push(new THREE.Face3(e,n,p)),g.push([q,
t,u]),g.push([t,r,u])):(f.push(new THREE.Face4(a,e,n,p)),g.push([q,t,u,r]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=new THREE.Geometry;THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;
THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3);a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=new THREE.Object3D;THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=new THREE.Object3D;THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.getRotationFromMatrix(this.matrix,this.scale)};
THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.lineGeometry.vertices.push(new THREE.Vector3);d.lineGeometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var d=this;this.lineGeometry=new THREE.Geometry;this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.pointMap={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4",
"n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a);
this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces);this.add(this.lines)};THREE.CameraHelper.prototype=new THREE.Object3D;THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a)for(d=0,e=a.length;d<e;d++)b.lineGeometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,
1);a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.lineGeometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){q.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(a,c,d,e,g,h,l){var m=new THREE.Face4(a,c,d,e,null,g.color,g.material);if(q.useOldVertexColors){m.vertexColors=[];for(var n,r,t,u=0;4>u;u++){t=h[u];n=new THREE.Color;n.setRGB(0,0,0);for(var v=0;v<t.length;v++)r=g.vertexColors[t[v]-1],n.r+=r.r,n.g+=r.g,n.b+=r.b;n.r/=t.length;n.g/=t.length;n.b/=t.length;m.vertexColors[u]=
n}}p.push(m);q.supportUVs&&(g=[f(a,""),f(c,l),f(d,l),f(e,l)],g[0]?g[1]?g[2]?g[3]?s.push(g):b("d :( ",e+":"+l):b("c :( ",d+":"+l):b("b :( ",c+":"+l):b("a :( ",a+":"+l))}function e(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function f(a,d){var e=a+":"+d,f=x[e];return f?f:(a>=A&&a<A+u.length?b("face pt"):b("edge pt"),c("warning, UV not found for",e),null)}function g(a,b,d){var e=a+":"+b;e in x?c("dup vertexNo",a,"oldFaceNo",b,"value",d,"key",e,x[e]):x[e]=d}function h(a,b){void 0===U[a]&&(U[a]=[]);U[a].push(b)}
function l(a,b,c){void 0===T[a]&&(T[a]={});T[a][b]=c}var n=[],p=[],s=[],q=this,t=a.vertices,u=a.faces,n=t.concat(),r=[],v={},z={},x={},A=t.length,w,B,M,I,C,y=a.faceVertexUvs[0],E;b("originalFaces, uvs, originalVerticesLength",u.length,y.length,A);if(q.supportUVs)for(w=0,B=y.length;w<B;w++)for(M=0,I=y[w].length;M<I;M++)E=u[w]["abcd".charAt(M)],g(E,w,y[w][M]);0==y.length&&(q.supportUVs=!1);w=0;for(C in x)w++;w||(q.supportUVs=!1,b("no uvs"));b("-- Original Faces + Vertices UVs completed",x,"vs",y.length);
w=0;for(B=u.length;w<B;w++)C=u[w],r.push(C.centroid),n.push(C.centroid),q.supportUVs&&(y=new THREE.UV,C instanceof THREE.Face3?(y.u=f(C.a,w).u+f(C.b,w).u+f(C.c,w).u,y.v=f(C.a,w).v+f(C.b,w).v+f(C.c,w).v,y.u/=3,y.v/=3):C instanceof THREE.Face4&&(y.u=f(C.a,w).u+f(C.b,w).u+f(C.c,w).u+f(C.d,w).u,y.v=f(C.a,w).v+f(C.b,w).v+f(C.c,w).v+f(C.d,w).v,y.u/=4,y.v/=4),g(A+w,"",y));b("-- added UVs for new Faces",x);B=function(a){function b(a,c){void 0===h[a]&&(h[a]=[]);h[a].push(c)}var c,d,f,g,h={};c=0;for(d=a.faces.length;c<
d;c++)f=a.faces[c],f instanceof THREE.Face3?(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.a),b(g,c)):f instanceof THREE.Face4&&(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.d),b(g,c),g=e(f.d,f.a),b(g,c));return h}(a);E=0;var K,J,U={},T={};for(w in B){y=B[w];K=w.split("_");J=K[0];K=K[1];h(J,[J,K]);h(K,[J,K]);M=0;for(I=y.length;M<I;M++)C=y[M],l(J,C,w),l(K,C,w);2>y.length&&(z[w]=!0)}b("vertexEdgeMap",U,"vertexFaceMap",T);for(w in B)y=B[w],C=y[0],I=y[1],K=w.split("_"),J=K[0],K=K[1],y=new THREE.Vector3,
z[w]?(y.addSelf(t[J]),y.addSelf(t[K]),y.multiplyScalar(0.5)):(y.addSelf(r[C]),y.addSelf(r[I]),y.addSelf(t[J]),y.addSelf(t[K]),y.multiplyScalar(0.25)),v[w]=A+u.length+E,n.push(y),E++,q.supportUVs&&(y=new THREE.UV,y.u=f(J,C).u+f(K,C).u,y.v=f(J,C).v+f(K,C).v,y.u/=2,y.v/=2,g(v[w],C,y),z[w]||(y=new THREE.UV,y.u=f(J,I).u+f(K,I).u,y.v=f(J,I).v+f(K,I).v,y.u/=2,y.v/=2,g(v[w],I,y)));b("-- Step 2 done");var H,P;I=["123","12","2","23"];K=["123","23","3","31"];var N=["123","31","1","12"],m=["1234","12","2","23"],
V=["1234","23","3","34"],X=["1234","34","4","41"],G=["1234","41","1","12"];w=0;for(B=r.length;w<B;w++)C=u[w],y=A+w,C instanceof THREE.Face3?(E=e(C.a,C.b),J=e(C.b,C.c),H=e(C.c,C.a),d(y,v[E],C.b,v[J],C,I,w),d(y,v[J],C.c,v[H],C,K,w),d(y,v[H],C.a,v[E],C,N,w)):C instanceof THREE.Face4?(E=e(C.a,C.b),J=e(C.b,C.c),H=e(C.c,C.d),P=e(C.d,C.a),d(y,v[E],C.b,v[J],C,m,w),d(y,v[J],C.c,v[H],C,V,w),d(y,v[H],C.d,v[P],C,X,w),d(y,v[P],C.a,v[E],C,G,w)):b("face should be a face!",C);v=new THREE.Vector3;C=new THREE.Vector3;
w=0;for(B=t.length;w<B;w++)if(void 0!==U[w]){v.set(0,0,0);C.set(0,0,0);J=new THREE.Vector3(0,0,0);y=0;for(M in T[w])v.addSelf(r[M]),y++;I=0;E=U[w].length;for(M=0;M<E;M++)z[e(U[w][M][0],U[w][M][1])]&&I++;if(2!=I){v.divideScalar(y);for(M=0;M<E;M++)y=U[w][M],y=t[y[0]].clone().addSelf(t[y[1]]).divideScalar(2),C.addSelf(y);C.divideScalar(E);J.addSelf(t[w]);J.multiplyScalar(E-3);J.addSelf(v);J.addSelf(C.multiplyScalar(2));J.divideScalar(E);n[w]=J}}a.vertices=n;a.faces=p;a.faceVertexUvs[0]=s;delete a.__tmpVertices;
a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=new THREE.Object3D;THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};
THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=new THREE.Mesh;THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var l=h[1];d[l]||(d[l]={start:Infinity,end:-Infinity});h=d[l];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=l)}}for(l in d)h=d[l],this.createAnimation(l,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,l,n,p,s,q,t;this.init=function(u){b=u.context;c=u;d=new Float32Array(16);e=new Uint16Array(6);u=0;d[u++]=-1;d[u++]=-1;d[u++]=0;d[u++]=0;d[u++]=1;d[u++]=-1;d[u++]=1;d[u++]=
0;d[u++]=1;d[u++]=1;d[u++]=1;d[u++]=1;d[u++]=-1;d[u++]=1;d[u++]=0;d[u++]=1;u=0;e[u++]=0;e[u++]=1;e[u++]=2;e[u++]=0;e[u++]=2;e[u++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();l=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(n=!1,p=a(THREE.ShaderFlares.lensFlare)):(n=!0,p=a(THREE.ShaderFlares.lensFlareVertexTexture));s={};q={};s.vertex=b.getAttribLocation(p,"position");s.uv=b.getAttribLocation(p,"uv");q.renderType=b.getUniformLocation(p,"renderType");q.map=b.getUniformLocation(p,"map");q.occlusionMap=b.getUniformLocation(p,"occlusionMap");q.opacity=b.getUniformLocation(p,"opacity");q.color=b.getUniformLocation(p,
"color");q.scale=b.getUniformLocation(p,"scale");q.rotation=b.getUniformLocation(p,"rotation");q.screenPosition=b.getUniformLocation(p,"screenPosition");t=!1};this.render=function(a,d,e,z){a=a.__webglFlares;var x=a.length;if(x){var A=new THREE.Vector3,w=z/e,B=0.5*e,M=0.5*z,I=16/z,C=new THREE.Vector2(I*w,I),y=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),K=q,I=s;b.useProgram(p);t||(b.enableVertexAttribArray(s.vertex),b.enableVertexAttribArray(s.uv),t=!0);b.uniform1i(K.occlusionMap,0);b.uniform1i(K.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(I.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(I.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var J,U,T,H,P;for(J=0;J<x;J++)if(I=16/z,C.set(I*w,I),H=a[J],A.set(H.matrixWorld.elements[12],H.matrixWorld.elements[13],H.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(A),d.projectionMatrix.multiplyVector3(A),y.copy(A),E.x=y.x*B+B,E.y=y.y*M+M,n||0<E.x&&E.x<e&&0<E.y&&E.y<z)for(b.activeTexture(b.TEXTURE1),
b.bindTexture(b.TEXTURE_2D,h),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,E.x-8,E.y-8,16,16,0),b.uniform1i(K.renderType,0),b.uniform2f(K.scale,C.x,C.y),b.uniform3f(K.screenPosition,y.x,y.y,y.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,l),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,E.x-8,E.y-8,16,16,0),b.uniform1i(K.renderType,1),b.disable(b.DEPTH_TEST),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,
h),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),H.positionScreen.copy(y),H.customUpdateCallback?H.customUpdateCallback(H):H.updateLensFlares(),b.uniform1i(K.renderType,2),b.enable(b.BLEND),U=0,T=H.lensFlares.length;U<T;U++)P=H.lensFlares[U],0.001<P.opacity&&0.001<P.scale&&(y.x=P.x,y.y=P.y,y.z=P.z,I=P.size*P.scale/z,C.x=I*w,C.y=I,b.uniform3f(K.screenPosition,y.x,y.y,y.z),b.uniform2f(K.scale,C.x,C.y),b.uniform1f(K.rotation,P.rotation),b.uniform1f(K.opacity,P.opacity),b.uniform3f(K.color,P.color.r,
P.color.g,P.color.b),c.setBlending(P.blending,P.blendEquation,P.blendSrc,P.blendDst),c.setTexture(P.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4,g=new THREE.Vector3,h=new THREE.Vector3;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(l,n){var p,s,q,t,u,r,v,z,x,A=[];t=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);b.shadowMapCullFrontFaces?a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);p=0;for(s=l.__lights.length;p<s;p++)if(q=l.__lights[p],q.castShadow)if(q instanceof THREE.DirectionalLight&&q.shadowCascade)for(u=0;u<q.shadowCascadeCount;u++){var w;if(q.shadowCascadeArray[u])w=q.shadowCascadeArray[u];else{x=q;v=u;w=
new THREE.DirectionalLight;w.isVirtual=!0;w.onlyShadow=!0;w.castShadow=!0;w.shadowCameraNear=x.shadowCameraNear;w.shadowCameraFar=x.shadowCameraFar;w.shadowCameraLeft=x.shadowCameraLeft;w.shadowCameraRight=x.shadowCameraRight;w.shadowCameraBottom=x.shadowCameraBottom;w.shadowCameraTop=x.shadowCameraTop;w.shadowCameraVisible=x.shadowCameraVisible;w.shadowDarkness=x.shadowDarkness;w.shadowBias=x.shadowCascadeBias[v];w.shadowMapWidth=x.shadowCascadeWidth[v];w.shadowMapHeight=x.shadowCascadeHeight[v];
w.pointsWorld=[];w.pointsFrustum=[];z=w.pointsWorld;r=w.pointsFrustum;for(var B=0;8>B;B++)z[B]=new THREE.Vector3,r[B]=new THREE.Vector3;z=x.shadowCascadeNearZ[v];x=x.shadowCascadeFarZ[v];r[0].set(-1,-1,z);r[1].set(1,-1,z);r[2].set(-1,1,z);r[3].set(1,1,z);r[4].set(-1,-1,x);r[5].set(1,-1,x);r[6].set(-1,1,x);r[7].set(1,1,x);w.originalCamera=n;r=new THREE.Gyroscope;r.position=q.shadowCascadeOffset;r.add(w);r.add(w.target);n.add(r);q.shadowCascadeArray[u]=w;console.log("Created virtualLight",w)}v=q;z=
u;x=v.shadowCascadeArray[z];x.position.copy(v.position);x.target.position.copy(v.target.position);x.lookAt(x.target);x.shadowCameraVisible=v.shadowCameraVisible;x.shadowDarkness=v.shadowDarkness;x.shadowBias=v.shadowCascadeBias[z];r=v.shadowCascadeNearZ[z];v=v.shadowCascadeFarZ[z];x=x.pointsFrustum;x[0].z=r;x[1].z=r;x[2].z=r;x[3].z=r;x[4].z=v;x[5].z=v;x[6].z=v;x[7].z=v;A[t]=w;t++}else A[t]=q,t++;p=0;for(s=A.length;p<s;p++){q=A[p];q.shadowMap||(q.shadowMap=new THREE.WebGLRenderTarget(q.shadowMapWidth,
q.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),q.shadowMapSize=new THREE.Vector2(q.shadowMapWidth,q.shadowMapHeight),q.shadowMatrix=new THREE.Matrix4);if(!q.shadowCamera){if(q instanceof THREE.SpotLight)q.shadowCamera=new THREE.PerspectiveCamera(q.shadowCameraFov,q.shadowMapWidth/q.shadowMapHeight,q.shadowCameraNear,q.shadowCameraFar);else if(q instanceof THREE.DirectionalLight)q.shadowCamera=new THREE.OrthographicCamera(q.shadowCameraLeft,q.shadowCameraRight,
q.shadowCameraTop,q.shadowCameraBottom,q.shadowCameraNear,q.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}l.add(q.shadowCamera);b.autoUpdateScene&&l.updateMatrixWorld()}q.shadowCameraVisible&&!q.cameraHelper&&(q.cameraHelper=new THREE.CameraHelper(q.shadowCamera),q.shadowCamera.add(q.cameraHelper));if(q.isVirtual&&w.originalCamera==n){u=n;t=q.shadowCamera;r=q.pointsFrustum;x=q.pointsWorld;g.set(Infinity,Infinity,Infinity);h.set(-Infinity,-Infinity,-Infinity);for(v=
0;8>v;v++)z=x[v],z.copy(r[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(z,u),t.matrixWorldInverse.multiplyVector3(z),z.x<g.x&&(g.x=z.x),z.x>h.x&&(h.x=z.x),z.y<g.y&&(g.y=z.y),z.y>h.y&&(h.y=z.y),z.z<g.z&&(g.z=z.z),z.z>h.z&&(h.z=z.z);t.left=g.x;t.right=h.x;t.top=h.y;t.bottom=g.y;t.updateProjectionMatrix()}t=q.shadowMap;r=q.shadowMatrix;u=q.shadowCamera;u.position.copy(q.matrixWorld.getPosition());u.lookAt(q.target.matrixWorld.getPosition());u.updateMatrixWorld();u.matrixWorldInverse.getInverse(u.matrixWorld);
q.cameraHelper&&(q.cameraHelper.lines.visible=q.shadowCameraVisible);q.shadowCameraVisible&&q.cameraHelper.update();r.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);r.multiplySelf(u.projectionMatrix);r.multiplySelf(u.matrixWorldInverse);u._viewMatrixArray||(u._viewMatrixArray=new Float32Array(16));u._projectionMatrixArray||(u._projectionMatrixArray=new Float32Array(16));u.matrixWorldInverse.flattenToArray(u._viewMatrixArray);u.projectionMatrix.flattenToArray(u._projectionMatrixArray);f.multiply(u.projectionMatrix,
u.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(t);b.clear();x=l.__webglObjects;q=0;for(t=x.length;q<t;q++)v=x[q],r=v.object,v.render=!1,!r.visible||(!r.castShadow||r instanceof THREE.Mesh&&r.frustumCulled&&!e.contains(r))||(r._modelViewMatrix.multiply(u.matrixWorldInverse,r.matrixWorld),v.render=!0);q=0;for(t=x.length;q<t;q++)v=x[q],v.render&&(r=v.object,v=v.buffer,z=r.customDepthMaterial?r.customDepthMaterial:r.geometry.morphTargets.length?d:c,v instanceof THREE.BufferGeometry?b.renderBufferDirect(u,
l.__lights,null,z,v,r):b.renderBuffer(u,l.__lights,null,z,v,r));x=l.__webglObjectsImmediate;q=0;for(t=x.length;q<t;q++)v=x[q],r=v.object,r.visible&&r.castShadow&&(r._modelViewMatrix.multiply(u.matrixWorldInverse,r.matrixWorld),b.renderImmediateObject(u,l.__lights,null,c,r))}p=b.getClearColor();s=b.getClearAlpha();a.clearColor(p.r,p.g,p.b,s);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,l,n,p;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=0;d[a++]=-1;d[a++]=1;d[a++]=0;a=d[a++]=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var q=b.createProgram(),t=b.createShader(b.FRAGMENT_SHADER),u=b.createShader(b.VERTEX_SHADER);b.shaderSource(t,a.fragmentShader);b.shaderSource(u,a.vertexShader);b.compileShader(t);b.compileShader(u);b.attachShader(q,t);b.attachShader(q,u);b.linkProgram(q);h=q;l={};n={};l.position=b.getAttribLocation(h,"position");l.uv=b.getAttribLocation(h,"uv");n.uvOffset=b.getUniformLocation(h,"uvOffset");n.uvScale=b.getUniformLocation(h,
"uvScale");n.rotation=b.getUniformLocation(h,"rotation");n.scale=b.getUniformLocation(h,"scale");n.alignment=b.getUniformLocation(h,"alignment");n.color=b.getUniformLocation(h,"color");n.map=b.getUniformLocation(h,"map");n.opacity=b.getUniformLocation(h,"opacity");n.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");n.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");n.screenPosition=b.getUniformLocation(h,"screenPosition");n.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
n.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");p=!1};this.render=function(d,e,t,u){d=d.__webglSprites;var r=d.length;if(r){var v=l,z=n,x=u/t;t*=0.5;var A=0.5*u,w=!0;b.useProgram(h);p||(b.enableVertexAttribArray(v.position),b.enableVertexAttribArray(v.uv),p=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(v.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(v.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);
b.uniformMatrix4fv(z.projectionMatrix,!1,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(z.map,0);for(var B,M=[],v=0;v<r;v++)B=d[v],B.visible&&0!==B.opacity&&(B.useScreenCoordinates?B.z=-B.position.z:(B._modelViewMatrix.multiply(e.matrixWorldInverse,B.matrixWorld),B.z=-B._modelViewMatrix.elements[14]));d.sort(a);for(v=0;v<r;v++)B=d[v],B.visible&&(0!==B.opacity&&B.map&&B.map.image&&B.map.image.width)&&(B.useScreenCoordinates?(b.uniform1i(z.useScreenCoordinates,1),b.uniform3f(z.screenPosition,
(B.position.x-t)/t,(A-B.position.y)/A,Math.max(0,Math.min(1,B.position.z)))):(b.uniform1i(z.useScreenCoordinates,0),b.uniform1i(z.affectedByDistance,B.affectedByDistance?1:0),b.uniformMatrix4fv(z.modelViewMatrix,!1,B._modelViewMatrix.elements)),e=B.map.image.width/(B.scaleByViewport?u:1),M[0]=e*x*B.scale.x,M[1]=e*B.scale.y,b.uniform2f(z.uvScale,B.uvScale.x,B.uvScale.y),b.uniform2f(z.uvOffset,B.uvOffset.x,B.uvOffset.y),b.uniform2f(z.alignment,B.alignment.x,B.alignment.y),b.uniform1f(z.opacity,B.opacity),
b.uniform3f(z.color,B.color.r,B.color.g,B.color.b),b.uniform1f(z.rotation,B.rotation),b.uniform2fv(z.scale,M),B.mergeWith3D&&!w?(b.enable(b.DEPTH_TEST),w=!0):!B.mergeWith3D&&w&&(b.disable(b.DEPTH_TEST),w=!1),c.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst),c.setTexture(B.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
b){this.enabled&&this.update(a,b)};this.update=function(g,h){var l,n,p,s,q,t;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16));h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16));h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);f.multiply(h.projectionMatrix,
h.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();t=g.__webglObjects;l=0;for(n=t.length;l<n;l++)p=t[l],q=p.object,p.render=!1,!q.visible||q instanceof THREE.Mesh&&q.frustumCulled&&!e.contains(q)||(q._modelViewMatrix.multiply(h.matrixWorldInverse,q.matrixWorld),p.render=!0);l=0;for(n=t.length;l<n;l++)p=t[l],p.render&&(q=p.object,p=p.buffer,b.setObjectFaces(q),s=q.customDepthMaterial?q.customDepthMaterial:q.geometry.morphTargets.length?d:c,p instanceof THREE.BufferGeometry?
b.renderBufferDirect(h,g.__lights,null,s,p,q):b.renderBuffer(h,g.__lights,null,s,p,q));t=g.__webglObjectsImmediate;l=0;for(n=t.length;l<n;l++)p=t[l],q=p.object,q.visible&&q.castShadow&&(q._modelViewMatrix.multiply(h.matrixWorldInverse,q.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,q));l=b.getClearColor();n=b.getClearAlpha();a.clearColor(l.r,l.g,l.b,n);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
window.onload=function(){function a(){u=window.innerWidth;r=window.innerHeight;z=new THREE.Clock;v=new THREE.WebGLRenderer({antialias:!1});v.setSize(u,r);v.setClearColorHex(0,1);document.body.appendChild(v.domElement);x=new THREE.Scene;x.fog=new THREE.FogExp2(0,0.0225);x.fog.far=1E4;y=new THREE.Object3D;var a=[["front_left",[-10,0,-10]],["front",[0,0,-10]],["front_right",[10,0,-10]],["front_top_left",[-10,10,-10]],["front_top_right",[-10,10,-10]],["front_down_left",[-10,-10,-10]],["front_down_right",
[-10,-10,-10]],["back",[0,0,10]],["back_left",[-10,0,10]],["back_right",[10,0,10]],["back_top_left",[-10,10,10]],["back_top_right",[10,10,10]],["back_down_left",[-10,-10,10]],["back_down_right",[10,-10,10]],["left",[-10,0,0]],["right",[10,0,0]],["up_left",[-10,10,0]],["up",[0,10,0]],["up_right",[-10,10,0]],["down_left",[-10,-10,0]],["down",[0,-10,0]],["down_right",[10,-10,0]]];y.dummies={};for(var h=0;h<a.length;h++){var l=a[h],m=new THREE.Object3D,n=l[1];m.position.set(n[0],n[1],n[2]);y.add(m);y.dummies[l[0]]=
m}A=new THREE.PerspectiveCamera(60,u/r,1,1E4);A.position=new THREE.Vector3(0,0,0);A.lookAt(w);y.add(A);y.position=new THREE.Vector3(0,100,0);x.add(y);y.lookAt(E);Ja=document.getElementById("cockpit");Ka=new CompassDisplay(150,150);Ja.appendChild(Ka.domElement);Va=new PitchAndRollDisplay(150,150);Ja.appendChild(Va.domElement);Z=new THREE.PointLight(16777215,1,70);y.add(Z);h={buggyDriver:t,worldLength:M};da=buildGurrus(h);x.add(da);da.updateMatrixWorld();x.add(buildGround(h));ca=buildRotabugs(h);x.add(ca);
ca.updateMatrixWorld();ea=buildPlancton(h);x.add(ea);for(h=0;h<ca.children.length;h++)a=ca.children[h],a.updateMatrixWorld(),p(a.feet),n=a.feet.geometry.boundingBox,l=Math.abs(n.min.x-n.max.x),m=Math.abs(n.min.y-n.max.y),n=Math.abs(n.min.z-n.max.z),l=new THREE.CubeGeometry(1.05*l,1.05*m,1.05*n),l=new THREE.Mesh(l,new THREE.MeshBasicMaterial({color:16776960,wireframe:!0})),l.position.set(0,0,0),a.add(l),a.collisionMesh=l,l.geometry.computeBoundingBox(),l.visible=!1,Ha.push(l);for(h=0;h<da.children.length;h++)Ha.push(da.children[h]),
da.children[h].geometry.computeBoundingBox();document.addEventListener("keydown",b,!1);document.addEventListener("keyup",c,!1);document.addEventListener("mousemove",d,!1);document.addEventListener("mousedown",e,!1);document.addEventListener("mouseup",f,!1);document.addEventListener("contextmenu",function(a){a.preventDefault()},!1);g()}function b(a){switch(a.keyCode){case 38:case 87:H=!0;break;case 40:case 83:P=!0;break;case 37:case 65:G=!0;break;case 39:case 68:Y=!0;break;case 84:V=!0;break;case 71:X=
!0;break;case 70:N=!0;break;case 72:m=!0}}function c(a){switch(a.keyCode){case 38:case 87:H=!1;break;case 40:case 83:P=!1;break;case 37:case 65:G=!1;break;case 39:case 68:Y=!1;break;case 84:V=!1;break;case 71:X=!1;break;case 70:N=!1;break;case 72:m=!1}}function d(a){ka=a.pageX-fa;S=a.pageY-ia;L=!0}function e(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:H=!0;break;case 2:P=!0}}function f(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:H=!1;break;case 2:P=!1}}
function g(){ta=new AudioContext;for(var a=0;a<Ta.length;a++)na.push({url:Ta[a],loaded:!1,loading:!1});h(na[0])}function h(a){var b=new XMLHttpRequest;b.open("GET",a.url,!0);b.responseType="arraybuffer";b.onload=function(){ta.decodeAudioData(b.response,function(b){b&&l(a.url,b)})};b.send()}function l(a,b){var c,d;for(c=0;c<na.length;c++)if(d=na[c],d.url==a&&!1===d.loaded){d.loaded=!0;d.loading=!1;d.buffer=b;break}var e=!0;for(c=0;c<na.length;c++)if(d=na[c],!d.loaded&&!d.loading){h(d);e=!1;break}kb.innerHTML+=
".";e&&(Na.style.opacity=0,setTimeout(function(){Na.style.visibility="hidden";cockpit_wrapper.style.opacity=1;n();q();(new TWEEN.Tween(y.position)).to({x:0,y:10,z:0},25E3).onComplete(function(){B=!1}).easing(TWEEN.Easing.Quadratic.Out).start()},1E3))}function n(){function a(b,c,f){var g=ta.createPanner(),h=ta.createBufferSource(),l=ta.createGain();g.setPosition(c.x,c.y,c.z);g.panningModel="equalpower";h.loop=!0;h.buffer=b.buffer;h.connect(g);g.connect(l);g.coneOuterGain=1;g.coneOuterAngle=180;g.coneInnerAngle=
0;b.buffer.sampleRate=44100;l.gain.value=f;l.connect(e);h.start(d)}var b,c,d=ta.currentTime+0.02,e;e=ta.createGain();e.gain.value=0.9;ta.createDynamicsCompressor?(b=ta.createDynamicsCompressor(),b.ratio=2):(b=ta.createGain(),b.gain.value=1.4);e.connect(b);b.connect(ta.destination);a(na[2],new THREE.Vector3(0,15,0),0.8);a(na[0],new THREE.Vector3(-500,0,500),0.9);a(na[0],new THREE.Vector3(500,0,-500),0.9);a(na[1],new THREE.Vector3(500,0,-500),0.9);a(na[1],new THREE.Vector3(-500,0,500),0.9);var f=4/
da.children.length;for(b=0;b<da.children.length;b++)c=da.children[b].matrixWorld.getPosition().clone(),c.y+=2,a(na[4],c,f);f=2/ca.children.length;for(b=0;b<ca.children.length;b++)c=ca.children[b].matrixWorld.getPosition().clone(),a(na[3],c,f)}function p(a){function b(a,c){var d=new THREE.Vector3(0,0,0);d.x=Math.min(a.x,c.x);d.y=Math.min(a.y,c.y);d.z=Math.min(a.z,c.z);return d}function c(a,b){var d=new THREE.Vector3(0,0,0);d.x=Math.max(a.x,b.x);d.y=Math.max(a.y,b.y);d.z=Math.max(a.z,b.z);return d}
var d={min:new THREE.Vector3,max:new THREE.Vector3},e=a.geometry;a=a.children;e.computeBoundingBox();null!==e.boundingBox&&(d=e.boundingBox);for(var f=0;f<a.length;f++){var g=a[f],h=g.geometry;0<g.children.length?p(g):h.computeBoundingBox();d.min=b(d.min,h.boundingBox.min);d.max=c(d.max,h.boundingBox.max)}e.boundingBox=d}function s(a){var b=Math.pow(a,2),c=500*b,d=100*b,e=b=0,f=0,g=y.position;B||(["x","y","z"].forEach(function(a){var b=K[a];0<Math.abs(b)&&(b-=0<b?d:-d,0.1>=Math.abs(b)&&(b=0),K[a]=
b)}),H?K.z-=c:P&&(K.z+=c),m?K.x+=c:N&&(K.x-=c),V?K.y+=c:X&&(K.y-=c),c=y.dummies,b=K.x*a,e=K.y*a,f=K.z*a,0>=K.z?CollisionUtils.collidesMultiple(g,c.front,[c.front_left,c.front_right,c.front_top_left,c.front_top_right,c.front_down_left,c.front_down_right],f,Ha)&&(f=0,K.z=0):0<K.z&&CollisionUtils.collidesMultiple(g,c.back,[c.back_left,c.back_right,c.back_top_left,c.back_top_right,c.back_down_left,c.back_down_right],f,Ha)&&(f=0,K.z=0),0<=K.x?CollisionUtils.collidesMultiple(g,c.right,[c.front_right,c.back_right,
c.up_right,c.down_right,c.back_top_right,c.front_top_right,c.back_down_right,c.front_down_right],b,Ha)&&(b=0,K.x=0):0>K.x&&CollisionUtils.collidesMultiple(g,c.left,[c.front_left,c.back_left,c.front_top_left,c.front_down_left,c.back_top_left,c.back_down_left],b,Ha)&&(b=0,K.x=0),0<=K.y?CollisionUtils.collidesMultiple(g,c.up,[c.up_left,c.up_right,c.front_top_right,c.front_top_left,c.back_top_right,c.back_top_left],e,Ha)&&(e=0,K.y=0):0>K.y&&CollisionUtils.collidesMultiple(g,c.down,[c.down_left,c.down_right,
c.front_down_left,c.front_down_right,c.back_down_left,c.back_down_right],e,Ha)&&(e=0,K.y=0),c=50*a,G?(T-=c,J-=c):Y&&(T+=c,J-=c),c=0.05*a,L&&(T+=ka*c,J+=ka*c,U+=S*c));U=Math.max(-85,Math.min(85,U));c=(90-U)*Math.PI/180;g=T*Math.PI/180;y.translateX(b);y.translateY(e);y.translateZ(f);y.position.z+I>=M?y.position.z=-M+I:y.position.z-I<=-M&&(y.position.z=M-I);y.position.x+I>=M?y.position.x=-M+I:y.position.x-I<=-M&&(y.position.x=M-I);E.x=y.position.x+100*Math.sin(c)*Math.cos(g);E.y=y.position.y+100*Math.cos(c);
E.z=y.position.z+100*Math.sin(c)*Math.sin(g);y.lookAt(E);B||(y.position.y+=0.02*Math.sin(0.001*Date.now()+0.01*Math.random()),y.position.y-=0.25*a,y.position.y<C&&(y.position.y=C,K.y=0))}function q(){requestAnimationFrame(q);TWEEN.update();s(z.getDelta());Ka.direction=J;Va.pitch=-U;Ka.update();Va.update();ta.listener.setPosition(y.position.x,y.position.y,y.position.z);ta.listener.setVelocity(K.x,K.y,K.z);var a=y.up;ta.listener.setOrientation(E.x,E.y,E.z,a.x,a.y,a.z);ta.listener.speedOfSound=1560-
y.position.y;for(var b=1E-4*Date.now(),c=5E-4*Date.now(),a=0,d=ca.children.length;a<d;a++){for(var e=ca.children[a],f=e.originalVertices,g=e.legs,h=e.feet,l=h.geometry.vertices,m=0;m<f.length;m++){var n=f[m],p=l[m],r=b+m+a;p.x=n.x+0.01*Math.sin(r);p.z=n.z+0.01*Math.cos(r);p.y=n.y+Math.sin(2*r)}h.geometry.verticesNeedUpdate=!0;g.geometry.verticesNeedUpdate=!0;e.position.y=e.originalPosition.y+0.5*Math.sin(a+c)}b=ea.children;a=0;for(c=b.length;a<c;a++)d=b[a],d.rotation.x+=0.01,d.rotation.y+=0.01,d.rotation.z+=
0.01,d.position.x+=UTILS.rangeRand(-0.001,0.001),d.position.y+=0.01*Math.random(),300<d.position.y&&(d.position.y=-0.25*Math.random());v.render(x,A)}var t=!1,u,r,v,z,x,A,w=new THREE.Vector3(0,0,-10),B=!0,M=500,I=25,C=4,y,E=new THREE.Vector3(0,0,0),K=new THREE.Vector3(0,0,0);new THREE.Vector3(0,0,0);var J=0,U=0,T=0,H=!1,P=!1,N=!1,m=!1,V=!1,X=!1,G=!1,Y=!1,L=!1,fa=window.innerWidth/2,ia=window.innerHeight/2,ka=fa,S=ia,Z,ca,ea,da,Ha=[],Ja,Ka,Va,ta,Ta=["data/malstrom1-arpeggio.ogg","data/malstrom2-vocoder.ogg",
"data/nn-xt1-bass.ogg","data/nn-xt2-guitar.ogg","data/subtractor1-beep.ogg"],na=[],kb,Na;(function(){var b=document.getElementById("container"),c=document.getElementById("intro"),d=document.getElementById("start");AudioDetector.detects(["webAudioSupport","oggSupport"])&&!Detector.webgl?Detector.addGetWebGLMessage({parent:b}):(b.style.visibility="hidden",d.addEventListener("click",function Ca(b){d.removeEventListener("click",Ca);c.className="loading";d.innerHTML="Please wait while LOADING";kb=d;Na=
document.getElementById("intro_wrapper");setTimeout(a,100)}))})()};
function CompassDisplay(a,b){var c=document.createElement("canvas"),d=c.getContext("2d"),e=a/2,f=b/2,g=Math.round(b/15);c.width=a;c.height=b;this.direction=0;this.domElement=c;d.font=g+"pt monospace";this.update=function(){d.clearRect(0,0,a,b);d.strokeStyle="#fff";var c=Math.min(e,f),l=0.1*c,c=c-l,n=c-l,p=StringFormat.pad(Math.floor(0<=this.direction?this.direction%360:360+this.direction%360),4,"0");d.fillStyle="#fff";d.fillText(p,e-d.measureText(p).width/2,f+g/2);d.save();d.translate(a/2,b/2);d.rotate(-this.direction*
Math.PI/180);for(var p=0,s=2*Math.PI/32,q=0;32>p;p++,q+=s){var t=Math.sin(q),u=Math.cos(q);d.lineWidth=0==p%4?3:0.5;d.beginPath();d.moveTo(n*t,n*u);d.lineTo(c*t,c*u);d.closePath();d.stroke()}d.fillText("N",-d.measureText("N").width/2,-b/4);d.restore();d.lineWidth=3;d.beginPath();d.moveTo(e,f-g/2-l);d.lineTo(e,l);d.closePath();d.stroke()}}
function PitchAndRollDisplay(a,b){var c=document.createElement("canvas"),d=c.getContext("2d"),e=a/2,f=b/2,g=a/4,h=a/20,l=Math.min(a,b)/10,n=b/20;c.width=a;c.height=b;this.roll=this.pitch=0;this.maximumPitch=90;d.font=n+"pt monospace";d.fillStyle="white";this.update=function(){d.clearRect(0,0,a,b);d.beginPath();d.moveTo(e,f);d.arc(e,f,e-l,0,2*Math.PI,!0);d.clip();d.save();d.translate(e,f+b*this.pitch/this.maximumPitch);d.save();d.rotate(this.roll);d.translate(-e,0);d.fillStyle="rgba(255, 255, 255, 0.2)";
d.beginPath();d.fillRect(0,0,a,b+f);d.fill();d.fillStyle="rgba(255, 255, 255, 0.4)";d.beginPath();d.fillRect(0,-b-f,a,b+f);d.fill();d.restore();d.strokeStyle="#fff";d.lineWidth=1;d.beginPath();d.moveTo(-g,0);d.lineTo(g,0);d.stroke();var c=2*b/30;d.lineWidth=1;for(var s=0;30>=s;s++){var q=-b+s*c,t=h;if(0!=q){if(0==s%5){var t=2*t,u;u=Math.floor(Math.abs(q)/b*this.maximumPitch);d.fillText(u,t+n,q+0.5*n)}d.beginPath();d.moveTo(-t,q);d.lineTo(t,q);d.stroke()}}d.restore();d.lineWidth=3;d.strokeStyle="white";
d.beginPath();d.moveTo(2*l,f);d.lineTo(e-l,f);d.lineTo(e-l,f+l);d.stroke();d.beginPath();d.moveTo(a-2*l,f);d.lineTo(e+l,f);d.lineTo(e+l,f+l);d.stroke()};this.domElement=c}
function buildGurrus(a){for(var b=new THREE.Object3D,c=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading}),d=0;10>d;d++){for(var e=[],f=[],g=new THREE.Geometry,h=2*Math.PI*d/10,l=150*Math.sin(h),n=150*Math.cos(h),h=45*(1+0.25*Math.sin(2*h)),p=0;20>p;p++){for(k=0;3>k;k++)e.push(new THREE.Vector3(h*(Math.random()-Math.random()),h*(Math.random()-Math.random()),h*(Math.random()-Math.random())));var s=e.length-1;f.push(new THREE.Face3(s-2,s-1,s))}g.vertices=e;g.faces=f;g.computeFaceNormals();
e=new THREE.Mesh(g,c);a.buggyDriver||(e.doubleSided=!0);e.position.set(l,0,n);l=new THREE.MeshLambertMaterial({color:16711680,shading:THREE.FlatShading});n=new THREE.Geometry;f=[];g=[];f.push(new THREE.Vector3(-10,0,0));f.push(new THREE.Vector3(10,0,0));f.push(new THREE.Vector3(0,10,0));g.push(new THREE.Face3(0,1,2));n.vertices=f;n.faces=g;n.computeFaceNormals();l=new THREE.Mesh(n,l);a.buggyDriver||(l.doubleSided=!0);l.position.set(0,0,0);l.rotation.set(Math.random(),Math.random(),Math.random());
e.add(l);b.add(e)}return b}
function buildGround(a){for(var b=a.worldLength||500,c=2*b,d=2*b,b=-0.5*c,e=-0.5*d,c=c/300,f=d/300,g,h,l,n,p,s,q,t,d=[],u=[],r=l=h=g=0;300>r;r++){p=l;l=e+r*f;for(var v=0;300>v;v++)py0=h,h=Math.random(0,4),n=g,g=b+v*c,0<v&&0<r&&(d.push(new THREE.Vector3(n,1.5*Math.random(),p)),d.push(new THREE.Vector3(n,1.5*Math.random(),l)),d.push(new THREE.Vector3(g,1.5*Math.random(),p)),t=d.length-1,q=t-1,s=q-1,s=new THREE.Face3(s,q,t),u.push(s),d.push(new THREE.Vector3(n,1.5*Math.random(),l)),d.push(new THREE.Vector3(g,
1.5*Math.random(),l)),d.push(new THREE.Vector3(g,1.5*Math.random(),p)),t=d.length-1,q=t-1,s=q-1,s=new THREE.Face3(s,q,t),u.push(s))}b=new THREE.Geometry;b.vertices=d;b.faces=u;b.computeFaceNormals();e=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading});b=new THREE.Mesh(b,e);a.buggyDriver||(b.doubleSided=!0);return b}
function buildRotabugs(){for(var a=new THREE.Object3D,b=new THREE.LineBasicMaterial({color:65280,linewidth:1}),c=new THREE.ParticleBasicMaterial({color:65280,size:0.25}),d=0;10>d;d++){for(var e=new THREE.Object3D,f=[],g=new THREE.Geometry,h=[],l=new THREE.Geometry,n=[],p=5*Math.random()+1,s=new THREE.SphereGeometry(p,10,10),p=new THREE.Vector3(0,0,0),s=s.vertices,q=0;q<s.length;q++){var t=s[q];f.push(p);f.push(t);h.push(t);n.push(t.clone())}g.vertices=f;g.computeVertexNormals();g.computeBoundingSphere();
f=new THREE.Line(g,b);e.add(f);l.vertices=h;h=new THREE.ParticleSystem(l,c);e.add(h);e.originalVertices=n;e.legs=f;e.feet=h;e.position.x=70*(Math.random()-Math.random());e.position.y=5;e.position.z=70*(Math.random()-Math.random());e.originalPosition=new THREE.Vector3(e.position.x,e.position.y,e.position.z);a.add(e)}return a}
function buildPlancton(a){for(var b=new THREE.Object3D,c=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading}),d=0;2E3>d;d++){var e=[],f=[],g=new THREE.Geometry,h=0.1+0.4*Math.random();e.push(new THREE.Vector3(0,0,0));e.push(new THREE.Vector3(h,0,0));e.push(new THREE.Vector3(0,h,0));f.push(new THREE.Face3(0,1,2));g.vertices=e;g.faces=f;g.computeFaceNormals();e=new THREE.Mesh(g,c);e.position.x=UTILS.rangeRand(-100,100);e.position.y=UTILS.rangeRand(-100,100);e.position.z=UTILS.rangeRand(-100,
100);e.rotation.x=UTILS.rangeRand(-100,100);e.rotation.y=UTILS.rangeRand(-100,100);e.rotation.z=UTILS.rangeRand(-100,100);a.buggyDriver||(e.doubleSided=!0);b.add(e)}return b}
var CollisionUtils={collides:function(a,b,c,d,e,f){b.matrixWorld.getPosition().clone();c=c.matrixWorld.getPosition().clone();d=d.matrixWorld.getPosition().clone();b=this.getDirectionVector(a,b);a=new THREE.Ray(c,b);c=new THREE.Ray(d,b);b=[];a=a.intersectObjects(f);f=c.intersectObjects(f);0==a.length&&0<f.length?b=f:0==f.length&&0<a.length?b=a:0<a.length&&0<f.length&&(b=a[0].distance>f[0].distance?f:a);return 0<b.length&&b[0].distance<=Math.abs(e)?!0:!1},collidesMultiple:function(a,b,c,d,e){b.matrixWorld.getPosition().clone();
a=this.getDirectionVector(a,b);for(b=0;b<c.length;b++){var f=c[b].matrixWorld.getPosition().clone(),f=(new THREE.Ray(f,a)).intersectObjects(e);if(void 0!==f&&0<f.length&&f[0].distance<=Math.abs(d))return!0}return!1},getDirectionVector:function(a,b){return b.matrixWorld.getPosition().clone().subSelf(a).normalize()}},StringFormat={pad:function(a,b,c){var d=0<=a?1:-1;a=Math.abs(a).toString();for(0>d&&b--;a.length<b;)a=c+a;0>d&&(a="-"+a);return a},toFixed:function(a,b){return Math.floor(100*a)/100}};
UTILS={getAxis:function(a){a=a||1E3;a=[{points:[[0,0,0],[a,0,0]],color:16711680},{points:[[0,0,0],[-a,0,0]],color:8388608},{points:[[0,0,0],[0,a,0]],color:65280},{points:[[0,0,0],[0,-a,0]],color:32768},{points:[[0,0,0],[0,0,a]],color:255},{points:[[0,0,0],[0,0,-a]],color:128}];for(var b=new THREE.Object3D,c=0;c<a.length;c++){for(var d=a[c],e=new THREE.Geometry,f=0;f<d.points.length;f++){var g=d.points[f];e.vertices.push(new THREE.Vector3(g[0],g[1],g[2]))}d=new THREE.LineBasicMaterial({color:d.color,
linewidth:2});e=new THREE.Line(e,d);e.position.x=0;e.position.y=0;e.position.z=0;b.add(e)}return b},rangeRand:function(a,b){a=a||-1;var c=(b||1)-a;return a+Math.random()*c}};
