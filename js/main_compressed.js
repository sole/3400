'use strict';var Stadista=function(){var a=Object.defineProperty;class b{static init(c,d){if(!this.alreadyPaqed){this.alreadyPaqed=!0;c=this.getPaq(c);c.push(["trackPageView"]);c.push(["enableLinkTracking"]);c.push(["setTrackerUrl","//stats.apps.5013.es/matomo.php"]);c.push(["setSiteId",String(d)]);d=document;c=d.createElement("script");var e=d.getElementsByTagName("script")[0];c.async=!0;c.src="//stats.apps.5013.es/matomo.js";e.parentNode?e.parentNode.insertBefore(c,e):d.appendChild(c)}}static initWithGuard(c,
d,e){this.init(c,d);try{e()}catch(f){c=f.stack,d="Stack missing",c&&(d=c.toString()),this.trackEvent("crash",window.location.href,d)}}static getPaq(c){return c._paq=c._paq||[]}static trackEvent(c,d,e,f){this.getPaq(window).push(["trackEvent",c,d,e,f])}}return((c,d,e)=>{d="symbol"!=typeof d?d+"":d;d in c?a(c,d,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[d]=e;return e})(b,"alreadyPaqed",!1),b}();
(function(a,b,c){function d(e){e&&!e.setTargetAtTime&&(e.setTargetAtTime=e.setTargetValueAtTime)}window.hasOwnProperty("webkitAudioContext")&&!window.hasOwnProperty("AudioContext")&&(window.AudioContext=webkitAudioContext,AudioContext.prototype.internal_createGain=AudioContext.prototype.createGain,AudioContext.prototype.createGain=function(){var e=this.internal_createGain();d(e.gain);return e},AudioContext.prototype.internal_createDelay=AudioContext.prototype.createDelay,AudioContext.prototype.createDelay=
function(){var e=this.internal_createDelay();d(e.delayTime);return e},AudioContext.prototype.internal_createBufferSource=AudioContext.prototype.createBufferSource,AudioContext.prototype.createBufferSource=function(){var e=this.internal_createBufferSource();e.start||(e.start=function(f,g,l){g||l?this.noteGrainOn(f,g,l):this.noteOn(f)});e.stop||(e.stop=e.noteoff);d(e.playbackRate);return e},AudioContext.prototype.internal_createDynamicsCompressor=AudioContext.prototype.createDynamicsCompressor,AudioContext.prototype.createDynamicsCompressor=
function(){var e=this.internal_createDynamicsCompressor();d(e.threshold);d(e.knee);d(e.ratio);d(e.reduction);d(e.attack);d(e.release);return e},AudioContext.prototype.internal_createBiquadFilter=AudioContext.prototype.createBiquadFilter,AudioContext.prototype.createBiquadFilter=function(){var e=this.internal_createBiquadFilter();d(e.frequency);d(e.detune);d(e.Q);d(e.gain);return e},AudioContext.prototype.hasOwnProperty("createOscillator")&&(AudioContext.prototype.internal_createOscillator=AudioContext.prototype.createOscillator,
AudioContext.prototype.createOscillator=function(){var e=this.internal_createOscillator();e.start||(e.start=e.noteOn);e.stop||(e.stop=e.noteOff);d(e.frequency);d(e.detune);return e}),AudioContext.prototype.hasOwnProperty("createGain")||(AudioContext.prototype.createGain=AudioContext.prototype.createGainNode),AudioContext.prototype.hasOwnProperty("createDelay")||(AudioContext.prototype.createDelay=AudioContext.prototype.createDelayNode),AudioContext.prototype.hasOwnProperty("createScriptProcessor")||
(AudioContext.prototype.createScriptProcessor=AudioContext.prototype.createJavaScriptNode))})(window);
Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";a.style.background=
"#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){a=a||{};var b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";var c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};
var TWEEN=TWEEN||function(){var a=[];return{REVISION:"7dev",getAll:function(){return a},removeAll:function(){a=[]},add:function(b){a.push(b)},remove:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},update:function(b){var c=a.length;if(0<c){var d=0;for(b=void 0!==b?b:Date.now();d<c;)a[d].update(b)?d++:(a.splice(d,1),c--);return!0}return!1}}}();
TWEEN.Tween=function(a){var b={},c={},d=1E3,e=0,f=null,g=TWEEN.Easing.Linear.None,l=TWEEN.Interpolation.Linear,h=[],n=null,q=!1,r=null,v=null;this.to=function(p,t){null!==t&&(d=t);c=p;return this};this.start=function(p){TWEEN.add(this);q=!1;f=void 0!==p?p:Date.now();f+=e;for(var t in c)if(null!==a[t]){if(c[t]instanceof Array){if(0===c[t].length)continue;c[t]=[a[t]].concat(c[t])}b[t]=a[t]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(p){e=p;return this};this.easing=
function(p){g=p;return this};this.interpolation=function(p){l=p;return this};this.chain=function(){h=arguments;return this};this.onStart=function(p){n=p;return this};this.onUpdate=function(p){r=p;return this};this.onComplete=function(p){v=p;return this};this.update=function(p){if(p<f)return!0;!1===q&&(null!==n&&n.call(a),q=!0);var t=(p-f)/d;t=1<t?1:t;var u=g(t),x;for(x in b){var z=b[x],C=c[x];a[x]=C instanceof Array?l(C,u):z+(C-z)*u}null!==r&&r.call(a,u);if(1==t){null!==v&&v.call(a);t=0;for(u=h.length;t<
u;t++)h[t].start(p);return!1}return!0}};
TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?.5*a*a:-.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?.5*a*a*a:.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?.5*a*a*a*a:-.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*a*a},Out:function(a){return--a*
a*a*a*a+1},InOut:function(a){return 1>(a*=2)?.5*a*a*a*a*a:.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI/2)},Out:function(a){return Math.sin(a*Math.PI/2)},InOut:function(a){return.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?.5*Math.pow(1024,a-1):.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-Math.sqrt(1-
a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var b,c=.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI);return-(c*Math.pow(2,10*--a)*Math.sin(2*(a-b)*Math.PI/.4))},Out:function(a){var b,c=.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI);return c*Math.pow(2,-10*a)*Math.sin(2*(a-b)*Math.PI/.4)+1},InOut:function(a){var b,
c=.1;if(0===a)return 0;if(1===a)return 1;!c||1>c?(c=1,b=.1):b=.4*Math.asin(1/c)/(2*Math.PI);return 1>(a*=2)?-.5*c*Math.pow(2,10*--a)*Math.sin(2*(a-b)*Math.PI/.4):.5*c*Math.pow(2,-10*--a)*Math.sin(2*(a-b)*Math.PI/.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?.5*a*a*(3.5949095*a-2.5949095):.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<
1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},InOut:function(a){return.5>a?.5*TWEEN.Easing.Bounce.In(2*a):.5*TWEEN.Easing.Bounce.Out(2*a-1)+.5}}};
TWEEN.Interpolation={Linear:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>b?f(a[0],a[1],d):1<b?f(a[c],a[c-1],c-d):f(a[e],a[e+1>c?c:e+1],d-e)},Bezier:function(a,b){var c=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein,g;for(g=0;g<=d;g++)c+=e(1-b,d-g)*e(b,g)*a[g]*f(d,g);return c},CatmullRom:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[c]?(0>b&&(e=Math.floor(d=c*(1+b))),f(a[(e-
1+c)%c],a[e],a[(e+1)%c],a[(e+2)%c],d-e)):0>b?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<b?a[c]-(f(a[c],a[c],a[c-1],a[c-1],d-c)-a[c]):f(a[e?e-1:0],a[e],a[c<e+1?c:e+1],a[c<e+2?c:e+2],d-e)},Utils:{Linear:function(a,b,c){return(b-a)*c+a},Bernstein:function(a,b){var c=TWEEN.Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){var a=[1];return function(b){var c=1,d;if(a[b])return a[b];for(d=b;1<d;d--)c*=d;return a[b]=c}}(),CatmullRom:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*
e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}}};"use strict";var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array);
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(d){var e=Date.now(),f=Math.max(0,16-(e-a)),g=window.setTimeout(function(){d(e+f)},f);a=e+f;return g});window.cancelAnimationFrame||(window.cancelAnimationFrame=
function(d){clearTimeout(d)})})();THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now();a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){if(0===c)this.r=this.g=this.b=0;else{var d=Math.floor(6*a);var e=6*a-d;a=c*(1-b);var f=c*(1-b*e);b=c*(1-b*(1-e));switch(d){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}}return this},
setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return"rgb("+Math.floor(255*this.r)+","+Math.floor(255*this.g)+","+Math.floor(255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,
this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];
this.y=a.elements[13];this.z=a.elements[14];return this},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1;b=b?b.z:1;var e=a.elements[0]/c,f=a.elements[4]/d;c=a.elements[1]/c;d=a.elements[5]/d;var g=a.elements[9]/b,l=a.elements[10]/b;this.y=Math.asin(a.elements[8]/b);b=Math.cos(this.y);1E-5<Math.abs(b)?(this.x=Math.atan2(-g/b,l/b),this.z=Math.atan2(-f/b,e/b)):(this.x=0,this.z=Math.atan2(c,d));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),
c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1];var e=c[2],f=c[3],g=c[4],l=c[5],h=c[6],n=c[7],q=c[8],r=c[9],v=c[10],p=c[11],t=c[12],u=c[13],x=c[14];c=c[15];b[0].set(f-a,n-g,p-q,c-t);b[1].set(f+a,n+g,p+q,c+t);b[2].set(f+d,n+l,p+r,c+u);b[3].set(f-d,n-l,p-r,c-u);b[4].set(f-e,n-h,p-v,c-x);b[5].set(f+e,n+h,p+v,c+x);for(a=0;6>a;a++)d=b[a],d.divideScalar(Math.sqrt(d.x*d.x+d.y*d.y+d.z*d.z))};
THREE.Frustum.prototype.contains=function(a){var b=this.planes,c=a.matrixWorld,d=c.elements;c=-a.geometry.boundingSphere.radius*c.getMaxScaleOnAxis();for(var e=0;6>e;e++)if(a=b[e].x*d[12]+b[e].y*d[13]+b[e].z*d[14]+b[e].w,a<=c)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
THREE.Ray=function(a,b){function c(T,Z,Y){t.sub(Y,T);z=t.dot(Z);C=u.add(T,x.copy(Z).multiplyScalar(z));return Y.distanceTo(C)}function d(T,Z,Y,I){t.sub(I,Z);u.sub(Y,Z);x.sub(T,Z);Q=t.dot(t);F=t.dot(u);W=t.dot(x);H=u.dot(u);B=u.dot(x);X=1/(Q*H-F*F);M=(H*W-F*B)*X;N=(Q*B-F*W)*X;return 0<=M&&0<=N&&1>M+N}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;var e=1E-4;this.setPrecision=function(T){e=T};var f=new THREE.Vector3,g=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,n=
new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,v=new THREE.Vector3,p=new THREE.Vector3;this.intersectObject=function(T){var Z=[];if(T instanceof THREE.Particle){var Y=c(this.origin,this.direction,T.matrixWorld.getPosition());if(Y>T.scale.x)return[];var I={distance:Y,point:T.position,face:null,object:T};Z.push(I)}else if(T instanceof THREE.Mesh){Y=c(this.origin,this.direction,T.matrixWorld.getPosition());var pa=THREE.Frustum.__v1.set(T.matrixWorld.getColumnX().length(),T.matrixWorld.getColumnY().length(),
T.matrixWorld.getColumnZ().length());if(Y>T.geometry.boundingSphere.radius*Math.max(pa.x,Math.max(pa.y,pa.z)))return Z;var V=T.geometry,K=V.vertices;T.matrixRotationWorld.extractRotation(T.matrixWorld);Y=0;for(pa=V.faces.length;Y<pa;Y++){I=V.faces[Y];n.copy(this.origin);q.copy(this.direction);var ca=T.matrixWorld;r=ca.multiplyVector3(r.copy(I.centroid)).subSelf(n);v=T.matrixRotationWorld.multiplyVector3(v.copy(I.normal));var E=q.dot(v);if(!(Math.abs(E)<e)){var ja=v.dot(r)/E;0>ja||!(T.doubleSided||
(T.flipSided?0<E:0>E))||((p.add(n,q.multiplyScalar(ja)),I instanceof THREE.Face3)?(f=ca.multiplyVector3(f.copy(K[I.a])),g=ca.multiplyVector3(g.copy(K[I.b])),l=ca.multiplyVector3(l.copy(K[I.c])),d(p,f,g,l)&&(I={distance:n.distanceTo(p),point:p.clone(),face:I,object:T},Z.push(I))):I instanceof THREE.Face4&&(f=ca.multiplyVector3(f.copy(K[I.a])),g=ca.multiplyVector3(g.copy(K[I.b])),l=ca.multiplyVector3(l.copy(K[I.c])),h=ca.multiplyVector3(h.copy(K[I.d])),d(p,f,g,h)||d(p,g,l,h))&&(I={distance:n.distanceTo(p),
point:p.clone(),face:I,object:T},Z.push(I)))}}}return Z};this.intersectObjects=function(T){for(var Z=[],Y=0,I=T.length;Y<I;Y++)Array.prototype.push.apply(Z,this.intersectObject(T[Y]));Z.sort(function(pa,V){return pa.distance-V.distance});return Z};var t=new THREE.Vector3,u=new THREE.Vector3,x=new THREE.Vector3,z,C,Q,F,W,H,B,X,M,N};
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b,c,d,e,f,g,l=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(h,n,q,r){l=!1;b=h;c=n;d=q;e=r;a()};this.addPoint=function(h,n){l?(l=!1,b=h,c=n,d=h,e=n):(b=b<h?b:h,c=c<n?c:n,d=d>h?d:h,e=e>n?e:n);a()};this.add3Points=
function(h,n,q,r,v,p){l?(l=!1,b=h<q?h<v?h:v:q<v?q:v,c=n<r?n<p?n:p:r<p?r:p,d=h>q?h>v?h:v:q>v?q:v,e=n>r?n>p?n:p:r>p?r:p):(b=h<q?h<v?h<b?h:b:v<b?v:b:q<v?q<b?q:b:v<b?v:b,c=n<r?n<p?n<c?n:c:p<c?p:c:r<p?r<c?r:c:p<c?p:c,d=h>q?h>v?h>d?h:d:v>d?v:d:q>v?q>d?q:d:v>d?v:d,e=n>r?n>p?n>e?n:e:p>e?p:e:r>p?r>e?r:e:p>e?p:e);a()};this.addRectangle=function(h){l?(l=!1,b=h.getLeft(),c=h.getTop(),d=h.getRight(),e=h.getBottom()):(b=b<h.getLeft()?b:h.getLeft(),c=c<h.getTop()?c:h.getTop(),d=d>h.getRight()?d:h.getRight(),e=e>
h.getBottom()?e:h.getBottom());a()};this.inflate=function(h){b-=h;c-=h;d+=h;e+=h;a()};this.minSelf=function(h){b=b>h.getLeft()?b:h.getLeft();c=c>h.getTop()?c:h.getTop();d=d<h.getRight()?d:h.getRight();e=e<h.getBottom()?e:h.getBottom();a()};this.intersects=function(h){return d<h.getLeft()||b>h.getRight()||e<h.getTop()||c>h.getBottom()?!1:!0};this.empty=function(){l=!0;e=d=c=b=0;a()};this.isEmpty=function(){return l}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],l=b[9]*b[4]-b[5]*b[8],h=-b[9]*b[0]+b[1]*b[8],n=b[5]*b[0]-b[1]*b[4];b=b[0]*a+b[1]*e+b[2]*l;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");b=1/b;var q=this.elements;q[0]=b*a;q[1]=b*c;q[2]=b*d;q[3]=b*e;q[4]=b*f;q[5]=b*g;q[6]=b*l;q[7]=b*h;q[8]=b*n;return this},
transpose:function(){var a=this.elements;var b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,l,h,n,q,r,v,p,t,u){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,l||0,h||0,n||0,void 0!==q?q:1,r||0,v||0,p||0,t||0,void 0!==u?u:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,l,h,n,q,r,v,p,t,u){var x=this.elements;x[0]=a;x[4]=b;x[8]=c;x[12]=d;x[1]=e;x[5]=f;x[9]=g;x[13]=l;x[2]=h;x[6]=n;x[10]=q;x[14]=r;x[3]=v;x[7]=p;x[11]=t;x[15]=u;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){a=a.elements;b=b.elements;var c=this.elements,d=a[0],e=a[4],f=a[8],g=a[12],l=a[1],h=a[5],n=a[9],q=a[13],r=a[2],v=a[6],p=a[10],t=a[14],u=a[3],x=a[7],z=a[11];a=a[15];var C=b[0],Q=b[4],
F=b[8],W=b[12],H=b[1],B=b[5],X=b[9],M=b[13],N=b[2],T=b[6],Z=b[10],Y=b[14],I=b[3],pa=b[7],V=b[11];b=b[15];c[0]=d*C+e*H+f*N+g*I;c[4]=d*Q+e*B+f*T+g*pa;c[8]=d*F+e*X+f*Z+g*V;c[12]=d*W+e*M+f*Y+g*b;c[1]=l*C+h*H+n*N+q*I;c[5]=l*Q+h*B+n*T+q*pa;c[9]=l*F+h*X+n*Z+q*V;c[13]=l*W+h*M+n*Y+q*b;c[2]=r*C+v*H+p*N+t*I;c[6]=r*Q+v*B+p*T+t*pa;c[10]=r*F+v*X+p*Z+t*V;c[14]=r*W+v*M+p*Y+t*b;c[3]=u*C+x*H+z*N+a*I;c[7]=u*Q+x*B+z*T+a*pa;c[11]=u*F+x*X+z*Z+a*V;c[15]=u*W+x*M+z*Y+a*b;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*
b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],l=a[9],h=a[13],n=a[2],q=a[6],r=a[10],v=a[14],p=a[3],t=a[7],u=a[11];a=a[15];return e*l*q*p-d*h*q*p-e*g*r*p+c*h*r*p+d*g*v*p-c*l*
v*p-e*l*n*t+d*h*n*t+e*f*r*t-b*h*r*t-d*f*v*t+b*l*v*t+e*g*n*u-c*h*n*u-e*f*q*u+b*h*q*u+c*f*v*u-b*g*v*u-d*g*n*a+c*l*n*a+d*f*q*a-b*l*q*a-c*f*r*a+b*g*r*a},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=
b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;
b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],l=c[1],h=c[5],n=c[9],q=c[13],r=c[2],v=c[6],p=c[10],t=c[14],u=c[3],x=c[7],z=c[11];c=c[15];b[0]=n*t*x-q*p*x+q*v*z-h*t*
z-n*v*c+h*p*c;b[4]=g*p*x-f*t*x-g*v*z+e*t*z+f*v*c-e*p*c;b[8]=f*q*x-g*n*x+g*h*z-e*q*z-f*h*c+e*n*c;b[12]=g*n*v-f*q*v-g*h*p+e*q*p+f*h*t-e*n*t;b[1]=q*p*u-n*t*u-q*r*z+l*t*z+n*r*c-l*p*c;b[5]=f*t*u-g*p*u+g*r*z-d*t*z-f*r*c+d*p*c;b[9]=g*n*u-f*q*u-g*l*z+d*q*z+f*l*c-d*n*c;b[13]=f*q*r-g*n*r+g*l*p-d*q*p-f*l*t+d*n*t;b[2]=h*t*u-q*v*u+q*r*x-l*t*x-h*r*c+l*v*c;b[6]=g*v*u-e*t*u-g*r*x+d*t*x+e*r*c-d*v*c;b[10]=e*q*u-g*h*u+g*l*x-d*q*x-e*l*c+d*h*c;b[14]=g*h*r-e*q*r-g*l*v+d*q*v+e*l*t-d*h*t;b[3]=n*v*u-h*p*u-n*r*x+l*p*x+h*r*
z-l*v*z;b[7]=e*p*u-f*v*u+f*r*x-d*p*x-e*r*z+d*v*z;b[11]=f*h*u-e*n*u-f*l*x+d*n*x+e*l*z-d*h*z;b[15]=e*n*r-f*h*r+f*l*v-d*n*v-e*l*p+d*h*p;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y;a=a.z;var f=Math.cos(d);d=Math.sin(d);var g=Math.cos(e);e=Math.sin(e);var l=Math.cos(a);a=Math.sin(a);switch(b){case "YXZ":b=g*l;var h=g*a,n=e*l,q=e*a;c[0]=b+q*d;c[4]=n*d-h;c[8]=f*e;c[1]=f*a;c[5]=f*l;c[9]=-d;c[2]=h*d-n;c[6]=q+b*d;c[10]=f*g;break;case "ZXY":b=
g*l;h=g*a;n=e*l;q=e*a;c[0]=b-q*d;c[4]=-f*a;c[8]=n+h*d;c[1]=h+n*d;c[5]=f*l;c[9]=q-b*d;c[2]=-f*e;c[6]=d;c[10]=f*g;break;case "ZYX":b=f*l;h=f*a;n=d*l;q=d*a;c[0]=g*l;c[4]=n*e-h;c[8]=b*e+q;c[1]=g*a;c[5]=q*e+b;c[9]=h*e-n;c[2]=-e;c[6]=d*g;c[10]=f*g;break;case "YZX":b=f*g;h=f*e;n=d*g;q=d*e;c[0]=g*l;c[4]=q-b*a;c[8]=n*a+h;c[1]=a;c[5]=f*l;c[9]=-d*l;c[2]=-e*l;c[6]=h*a+n;c[10]=b-q*a;break;case "XZY":b=f*g;h=f*e;n=d*g;q=d*e;c[0]=g*l;c[4]=-a;c[8]=e*l;c[1]=b*a+q;c[5]=f*l;c[9]=h*a-n;c[2]=n*a-h;c[6]=d*l;c[10]=q*a+
b;break;default:b=f*l,h=f*a,n=d*l,q=d*a,c[0]=g*l,c[4]=-g*a,c[8]=e,c[1]=h+n*e,c[5]=b-q*e,c[9]=-d*g,c[2]=q-b*e,c[6]=n+h*e,c[10]=f*g}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,l=d+d,h=e+e;a=c*g;var n=c*l;c*=h;var q=d*l;d*=h;e*=h;g*=f;l*=f;f*=h;b[0]=1-(q+e);b[4]=n-f;b[8]=c+l;b[1]=n+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-l;b[6]=d+g;b[10]=1-(a+q);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();
e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];
a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=
1/c.set(a[4],a[5],a[6]).length();c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],l=b[9],h=b[10],n=b[11],q=Math.cos(a);
a=Math.sin(a);b[4]=q*c+a*g;b[5]=q*d+a*l;b[6]=q*e+a*h;b[7]=q*f+a*n;b[8]=q*g-a*c;b[9]=q*l-a*d;b[10]=q*h-a*e;b[11]=q*n-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],l=b[9],h=b[10],n=b[11],q=Math.cos(a);a=Math.sin(a);b[0]=q*c-a*g;b[1]=q*d-a*l;b[2]=q*e-a*h;b[3]=q*f-a*n;b[8]=q*g+a*c;b[9]=q*l+a*d;b[10]=q*h+a*e;b[11]=q*n+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],l=b[5],h=b[6],n=b[7],q=Math.cos(a);a=Math.sin(a);
b[0]=q*c+a*g;b[1]=q*d+a*l;b[2]=q*e+a*h;b[3]=q*f+a*n;b[4]=q*g-a*c;b[5]=q*l-a*d;b[6]=q*h-a*e;b[7]=q*n-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y;a=a.z;var f=Math.sqrt(d*d+e*e+a*a);d/=f;e/=f;a/=f;f=d*d;var g=e*e,l=a*a,h=Math.cos(b);b=Math.sin(b);var n=1-h,q=d*e*n,r=d*a*n;n*=e*a;d*=b;var v=e*b;b*=a;a=f+(1-f)*h;
f=q+b;e=r-v;q-=b;g+=(1-g)*h;b=n+d;r+=v;n-=d;l+=(1-l)*h;h=c[0];d=c[1];v=c[2];var p=c[3],t=c[4],u=c[5],x=c[6],z=c[7],C=c[8],Q=c[9],F=c[10],W=c[11];c[0]=a*h+f*t+e*C;c[1]=a*d+f*u+e*Q;c[2]=a*v+f*x+e*F;c[3]=a*p+f*z+e*W;c[4]=q*h+g*t+b*C;c[5]=q*d+g*u+b*Q;c[6]=q*v+g*x+b*F;c[7]=q*p+g*z+b*W;c[8]=r*h+n*t+l*C;c[9]=r*d+n*u+l*Q;c[10]=r*v+n*x+l*F;c[11]=r*p+n*z+l*W;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;
b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,
0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b);b=Math.sin(b);var d=1-c,e=a.x,f=a.y;a=a.z;var g=d*e,l=d*f;this.set(g*e+c,g*f-b*a,g*a+b*f,0,g*f+b*a,l*f+c,l*a-b*e,0,g*a-b*f,l*a+b*e,d*a*a+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=
0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,l=b-a,h=c-d,n=f-e;g[0]=2/l;g[4]=0;g[8]=0;g[12]=-((b+a)/l);g[1]=0;g[5]=2/h;g[9]=0;g[13]=-((c+d)/h);g[2]=0;g[6]=0;g[10]=-2/n;g[14]=-((f+e)/n);g[3]=0;g[7]=0;g[11]=
0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);this.rotation.getRotationFromMatrix(this.matrix,this.scale);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,
this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=
this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c;var d=0;for(c=this.children.length;d<c;d++){var e=this.children[d];if(e.name===a||b&&(e=e.getChildByName(a,b),void 0!==e))return e}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,
this.eulerOrder);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var Y=g[f]=g[f]||new THREE.RenderableObject;f++;return Y}function b(){var Y=n[h]=n[h]||new THREE.RenderableVertex;h++;return Y}function c(Y,I){return I.z-Y.z}function d(Y,I){var pa=0,V=1,K=Y.z+Y.w,ca=I.z+I.w,E=-Y.z+Y.w,ja=-I.z+I.w;if(0<=K&&0<=ca&&0<=E&&0<=ja)return!0;if(0>K&&0>ca||0>E&&0>ja)return!1;0>K?pa=Math.max(pa,K/(K-ca)):0>ca&&(V=Math.min(V,K/(K-ca)));0>E?pa=Math.max(pa,E/(E-ja)):0>ja&&(V=Math.min(V,E/(E-ja)));if(V<pa)return!1;Y.lerpSelf(I,pa);I.lerpSelf(Y,
1-V);return!0}var e,f,g=[],l,h,n=[],q,r,v=[],p,t=[],u,x,z=[],C,Q,F=[],W={objects:[],sprites:[],lights:[],elements:[]},H=new THREE.Vector3,B=new THREE.Vector4,X=new THREE.Matrix4,M=new THREE.Matrix4,N=new THREE.Frustum,T=new THREE.Vector4,Z=new THREE.Vector4;this.projectVector=function(Y,I){I.matrixWorldInverse.getInverse(I.matrixWorld);X.multiply(I.projectionMatrix,I.matrixWorldInverse);X.multiplyVector3(Y);return Y};this.unprojectVector=function(Y,I){I.projectionMatrixInverse.getInverse(I.projectionMatrix);
X.multiply(I.matrixWorld,I.projectionMatrixInverse);X.multiplyVector3(Y);return Y};this.pickingRay=function(Y,I){Y.z=-1;var pa=new THREE.Vector3(Y.x,Y.y,1);this.unprojectVector(Y,I);this.unprojectVector(pa,I);pa.subSelf(Y).normalize();return new THREE.Ray(Y,pa)};this.projectGraph=function(Y,I){f=0;W.objects.length=0;W.sprites.length=0;W.lights.length=0;var pa=function(V){if(!1!==V.visible){(V instanceof THREE.Mesh||V instanceof THREE.Line)&&(!1===V.frustumCulled||N.contains(V))?(H.copy(V.matrixWorld.getPosition()),
X.multiplyVector3(H),e=a(),e.object=V,e.z=H.z,W.objects.push(e)):V instanceof THREE.Sprite||V instanceof THREE.Particle?(H.copy(V.matrixWorld.getPosition()),X.multiplyVector3(H),e=a(),e.object=V,e.z=H.z,W.sprites.push(e)):V instanceof THREE.Light&&W.lights.push(V);for(var K=0,ca=V.children.length;K<ca;K++)pa(V.children[K])}};pa(Y);I&&W.objects.sort(c);return W};this.projectScene=function(Y,I,pa){var V=I.near,K=I.far,ca=!1,E,ja;Q=x=p=r=0;W.elements.length=0;void 0===I.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
Y.add(I));Y.updateMatrixWorld();I.matrixWorldInverse.getInverse(I.matrixWorld);X.multiply(I.projectionMatrix,I.matrixWorldInverse);N.setFromMatrix(X);W=this.projectGraph(Y,!1);Y=0;for(E=W.objects.length;Y<E;Y++){var R=W.objects[Y].object;var J=R.matrixWorld;h=0;if(R instanceof THREE.Mesh){var da=R.geometry;var va=R.geometry.materials;var ya=da.vertices;var Aa=da.faces;var ua=da.faceVertexUvs;da=R.matrixRotationWorld.extractRotation(J);var ea=0;for(ja=ya.length;ea<ja;ea++)l=b(),l.positionWorld.copy(ya[ea]),
J.multiplyVector3(l.positionWorld),l.positionScreen.copy(l.positionWorld),X.multiplyVector4(l.positionScreen),l.positionScreen.x/=l.positionScreen.w,l.positionScreen.y/=l.positionScreen.w,l.visible=l.positionScreen.z>V&&l.positionScreen.z<K;ya=0;for(ea=Aa.length;ya<ea;ya++){ja=Aa[ya];if(ja instanceof THREE.Face3){var ia=n[ja.a];var ka=n[ja.b];var wa=n[ja.c];if(ia.visible&&ka.visible&&wa.visible)if(ca=0>(wa.positionScreen.x-ia.positionScreen.x)*(ka.positionScreen.y-ia.positionScreen.y)-(wa.positionScreen.y-
ia.positionScreen.y)*(ka.positionScreen.x-ia.positionScreen.x),R.doubleSided||ca!=R.flipSided){var La=v[r]=v[r]||new THREE.RenderableFace3;r++;q=La;q.v1.copy(ia);q.v2.copy(ka);q.v3.copy(wa)}else continue;else continue}else if(ja instanceof THREE.Face4)if(ia=n[ja.a],ka=n[ja.b],wa=n[ja.c],La=n[ja.d],ia.visible&&ka.visible&&wa.visible&&La.visible)if(ca=0>(La.positionScreen.x-ia.positionScreen.x)*(ka.positionScreen.y-ia.positionScreen.y)-(La.positionScreen.y-ia.positionScreen.y)*(ka.positionScreen.x-
ia.positionScreen.x)||0>(ka.positionScreen.x-wa.positionScreen.x)*(La.positionScreen.y-wa.positionScreen.y)-(ka.positionScreen.y-wa.positionScreen.y)*(La.positionScreen.x-wa.positionScreen.x),R.doubleSided||ca!=R.flipSided){var Sa=t[p]=t[p]||new THREE.RenderableFace4;p++;q=Sa;q.v1.copy(ia);q.v2.copy(ka);q.v3.copy(wa);q.v4.copy(La)}else continue;else continue;q.normalWorld.copy(ja.normal);!ca&&(R.flipSided||R.doubleSided)&&q.normalWorld.negate();da.multiplyVector3(q.normalWorld);q.centroidWorld.copy(ja.centroid);
J.multiplyVector3(q.centroidWorld);q.centroidScreen.copy(q.centroidWorld);X.multiplyVector3(q.centroidScreen);wa=ja.vertexNormals;ia=0;for(ka=wa.length;ia<ka;ia++)La=q.vertexNormalsWorld[ia],La.copy(wa[ia]),!ca&&(R.flipSided||R.doubleSided)&&La.negate(),da.multiplyVector3(La);ia=0;for(ka=ua.length;ia<ka;ia++)if(Sa=ua[ia][ya])for(wa=0,La=Sa.length;wa<La;wa++)q.uvs[ia][wa]=Sa[wa];q.material=R.material;q.faceMaterial=null!==ja.materialIndex?va[ja.materialIndex]:null;q.z=q.centroidScreen.z;W.elements.push(q)}}else if(R instanceof
THREE.Line)for(M.multiply(X,J),ya=R.geometry.vertices,ia=b(),ia.positionScreen.copy(ya[0]),M.multiplyVector4(ia.positionScreen),J=R.type===THREE.LinePieces?2:1,ea=1,ja=ya.length;ea<ja;ea++)ia=b(),ia.positionScreen.copy(ya[ea]),M.multiplyVector4(ia.positionScreen),0<(ea+1)%J||(ka=n[h-2],T.copy(ia.positionScreen),Z.copy(ka.positionScreen),d(T,Z)&&(T.multiplyScalar(1/T.w),Z.multiplyScalar(1/Z.w),va=z[x]=z[x]||new THREE.RenderableLine,x++,u=va,u.v1.positionScreen.copy(T),u.v2.positionScreen.copy(Z),u.z=
Math.max(T.z,Z.z),u.material=R.material,W.elements.push(u)))}Y=0;for(E=W.sprites.length;Y<E;Y++)R=W.sprites[Y].object,J=R.matrixWorld,R instanceof THREE.Particle&&(B.set(J.elements[12],J.elements[13],J.elements[14],1),X.multiplyVector4(B),B.z/=B.w,0<B.z&&1>B.z&&(V=F[Q]=F[Q]||new THREE.RenderableParticle,Q++,C=V,C.x=B.x/B.w,C.y=B.y/B.w,C.z=B.z,C.rotation=R.rotation.z,C.scale.x=R.scale.x*Math.abs(C.x-(B.x+I.projectionMatrix.elements[0])/(B.w+I.projectionMatrix.elements[12])),C.scale.y=R.scale.y*Math.abs(C.y-
(B.y+I.projectionMatrix.elements[5])/(B.w+I.projectionMatrix.elements[13])),C.material=R.material,W.elements.push(C)));pa&&W.elements.sort(c);return W}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,e=a.z*b;a=Math.cos(d);d=Math.sin(d);b=Math.cos(-e);e=Math.sin(-e);var f=Math.cos(c);c=Math.sin(c);var g=a*b,l=d*e;this.w=g*f-l*c;this.x=g*c+l*f;this.y=d*b*f+a*e*c;this.z=a*e*f-d*b*c;return this},setFromAxisAngle:function(a,b){b/=2;var c=Math.sin(b);
this.x=a.x*c;this.y=a.y*c;this.z=a.z*c;this.w=Math.cos(b);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.elements[0]+a.elements[5]+a.elements[10]))/2;this.x=Math.sqrt(Math.max(0,b+a.elements[0]-a.elements[5]-a.elements[10]))/2;this.y=Math.sqrt(Math.max(0,b-a.elements[0]+a.elements[5]-a.elements[10]))/2;this.z=Math.sqrt(Math.max(0,b-a.elements[0]-a.elements[5]+a.elements[10]))/2;this.x=0>a.elements[6]-a.elements[9]?-Math.abs(this.x):
Math.abs(this.x);this.y=0>a.elements[8]-a.elements[2]?-Math.abs(this.y):Math.abs(this.y);this.z=0>a.elements[1]-a.elements[4]?-Math.abs(this.z):Math.abs(this.z);this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,l=a.z;a=a.w;this.x=b*a+e*f+c*l-d*g;this.y=c*a+e*g+d*f-b*l;this.z=d*a+e*l+b*g-c*f;this.w=
e*a-b*f-c*g-d*l;return this},multiplyVector3:function(a,b){b||=a;var c=a.x,d=a.y;a=a.z;var e=this.x,f=this.y,g=this.z,l=this.w,h=l*c+f*a-g*d,n=l*d+g*c-e*a,q=l*a+e*d-f*c;c=-e*c-f*d-g*a;b.x=h*l+c*-e+n*-g-q*-f;b.y=n*l+c*-f+q*-e-h*-g;b.z=q*l+c*-g+h*-f-n*-e;return b},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(e);e=Math.sqrt(1-e*e);if(.001>Math.abs(e))return c.w=.5*(a.w+b.w),c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y),c.z=.5*(a.z+b.z),c;b=Math.sin((1-d)*f)/e;d=Math.sin(d*f)/e;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b;var c=0;for(b=this.vertexNormals.length;c<b;c++)a.vertexNormals[c]=this.vertexNormals[c].clone();c=0;for(b=this.vertexColors.length;c<b;c++)a.vertexColors[c]=this.vertexColors[c].clone();c=0;for(b=this.vertexTangents.length;c<b;c++)a.vertexTangents[c]=this.vertexTangents[c].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b;var c=0;for(b=this.vertexNormals.length;c<b;c++)a.vertexNormals[c]=this.vertexNormals[c].clone();c=0;for(b=this.vertexColors.length;c<b;c++)a.vertexColors[c]=this.vertexColors[c].clone();c=0;for(b=this.vertexTangents.length;c<b;c++)a.vertexTangents[c]=this.vertexTangents[c].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a;var b=0;for(a=this.faces.length;b<a;b++){var c=this.faces[b];c.centroid.set(0,
0,0);c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))}},computeFaceNormals:function(){var a,b=new THREE.Vector3,c=new THREE.Vector3;var d=0;for(a=this.faces.length;d<a;d++){var e=
this.faces[d];var f=this.vertices[e.a];var g=this.vertices[e.b];var l=this.vertices[e.c];b.sub(l,g);c.sub(f,g);b.crossSelf(c);b.isZero()||b.normalize();e.normal.copy(b)}},computeVertexNormals:function(){var a;if(void 0===this.__tmpVertices){var b=this.__tmpVertices=Array(this.vertices.length);var c=0;for(a=this.vertices.length;c<a;c++)b[c]=new THREE.Vector3;c=0;for(a=this.faces.length;c<a;c++){var d=this.faces[c];d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
d instanceof THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}}else for(b=this.__tmpVertices,c=0,a=this.vertices.length;c<a;c++)b[c].set(0,0,0);c=0;for(a=this.faces.length;c<a;c++)d=this.faces[c],d instanceof THREE.Face3?(b[d.a].addSelf(d.normal),b[d.b].addSelf(d.normal),b[d.c].addSelf(d.normal)):d instanceof THREE.Face4&&(b[d.a].addSelf(d.normal),b[d.b].addSelf(d.normal),b[d.c].addSelf(d.normal),b[d.d].addSelf(d.normal));c=0;for(a=this.vertices.length;c<
a;c++)b[c].normalize();c=0;for(a=this.faces.length;c<a;c++)d=this.faces[c],d instanceof THREE.Face3?(d.vertexNormals[0].copy(b[d.a]),d.vertexNormals[1].copy(b[d.b]),d.vertexNormals[2].copy(b[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(b[d.a]),d.vertexNormals[1].copy(b[d.b]),d.vertexNormals[2].copy(b[d.c]),d.vertexNormals[3].copy(b[d.d]))},computeMorphNormals:function(){var a,b;var c=0;for(b=this.faces.length;c<b;c++){var d=this.faces[c];d.__originalFaceNormal?d.__originalFaceNormal.copy(d.normal):
d.__originalFaceNormal=d.normal.clone();d.__originalVertexNormals||(d.__originalVertexNormals=[]);var e=0;for(a=d.vertexNormals.length;e<a;e++)d.__originalVertexNormals[e]?d.__originalVertexNormals[e].copy(d.vertexNormals[e]):d.__originalVertexNormals[e]=d.vertexNormals[e].clone()}var f=new THREE.Geometry;f.faces=this.faces;e=0;for(a=this.morphTargets.length;e<a;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var g=this.morphNormals[e].faceNormals,
l=this.morphNormals[e].vertexNormals;c=0;for(b=this.faces.length;c<b;c++){d=this.faces[c];var h=new THREE.Vector3;var n=d instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3};g.push(h);l.push(n)}}g=this.morphNormals[e];f.vertices=this.morphTargets[e].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],h=g.faceNormals[c],n=g.vertexNormals[c],
h.copy(d.normal),d instanceof THREE.Face3?(n.a.copy(d.vertexNormals[0]),n.b.copy(d.vertexNormals[1]),n.c.copy(d.vertexNormals[2])):(n.a.copy(d.vertexNormals[0]),n.b.copy(d.vertexNormals[1]),n.c.copy(d.vertexNormals[2]),n.d.copy(d.vertexNormals[3]))}c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],d.normal=d.__originalFaceNormal,d.vertexNormals=d.__originalVertexNormals},computeTangents:function(){function a(K,ca,E,ja,R,J,da){d=K.vertices[ca];e=K.vertices[E];f=K.vertices[ja];g=Y[R];l=Y[J];h=Y[da];
n=e.x-d.x;q=f.x-d.x;r=e.y-d.y;v=f.y-d.y;p=e.z-d.z;t=f.z-d.z;u=l.u-g.u;x=h.u-g.u;z=l.v-g.v;C=h.v-g.v;Q=1/(u*C-x*z);H.set((C*n-z*q)*Q,(C*r-z*v)*Q,(C*p-z*t)*Q);B.set((u*q-x*n)*Q,(u*v-x*r)*Q,(u*t-x*p)*Q);F[ca].addSelf(H);F[E].addSelf(H);F[ja].addSelf(H);W[ca].addSelf(B);W[E].addSelf(B);W[ja].addSelf(B)}var b,c,d,e,f,g,l,h,n,q,r,v,p,t,u,x,z,C,Q,F=[],W=[],H=new THREE.Vector3,B=new THREE.Vector3,X=new THREE.Vector3,M=new THREE.Vector3,N=new THREE.Vector3;var T=0;for(b=this.vertices.length;T<b;T++)F[T]=new THREE.Vector3,
W[T]=new THREE.Vector3;T=0;for(b=this.faces.length;T<b;T++){var Z=this.faces[T];var Y=this.faceVertexUvs[0][T];Z instanceof THREE.Face3?a(this,Z.a,Z.b,Z.c,0,1,2):Z instanceof THREE.Face4&&(a(this,Z.a,Z.b,Z.d,0,1,3),a(this,Z.b,Z.c,Z.d,1,2,3))}var I=["a","b","c","d"];T=0;for(b=this.faces.length;T<b;T++)for(Z=this.faces[T],c=0;c<Z.vertexNormals.length;c++){N.copy(Z.vertexNormals[c]);var pa=Z[I[c]];var V=F[pa];X.copy(V);X.subSelf(N.multiplyScalar(N.dot(V))).normalize();M.cross(Z.vertexNormals[c],V);pa=
M.dot(W[pa]);pa=0>pa?-1:1;Z.vertexTangents[c]=new THREE.Vector4(X.x,X.y,X.z,pa)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<
b.z?b.z=a.z:a.z>c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var a,b=0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c].length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a={},b=[],c=[],d=Math.pow(10,4),e,f;var g=0;for(e=this.vertices.length;g<e;g++){var l=this.vertices[g];l=[Math.round(l.x*d),Math.round(l.y*d),Math.round(l.z*d)].join("_");
void 0===a[l]?(a[l]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[l]]}g=0;for(e=this.faces.length;g<e;g++)if(d=this.faces[g],d instanceof THREE.Face3)d.a=c[d.a],d.b=c[d.b],d.c=c[d.c];else if(d instanceof THREE.Face4)for(d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d.d=c[d.d],l=[d.a,d.b,d.c,d.d],a=3;0<a;a--)if(l.indexOf(d["abcd"[a]])!=a){l.splice(a,1);this.faces[g]=new THREE.Face3(l[0],l[1],l[2]);d=0;for(l=this.faceVertexUvs.length;d<l;d++)(f=this.faceVertexUvs[d][g])&&f.splice(a,1);break}c=this.vertices.length-
b.length;this.vertices=b;return c}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(p,t,u,x,z,C,Q){p=.5*(u-p);x=.5*(x-t);return(2*(t-u)+p+x)*Q+(-3*(t-u)-2*p-x)*C+p*z+t}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,l,h,n,q,r,v;this.initFromArray=function(p){this.points=[];for(var t=0;t<p.length;t++)this.points[t]={x:p[t][0],y:p[t][1],z:p[t][2]}};this.getPoint=function(p){e=(this.points.length-1)*p;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
2;n=this.points[c[0]];q=this.points[c[1]];r=this.points[c[2]];v=this.points[c[3]];l=g*g;h=g*l;d.x=b(n.x,q.x,r.x,v.x,g,l,h);d.y=b(n.y,q.y,r.y,v.y,g,l,h);d.z=b(n.z,q.z,r.z,v.z,g,l,h);return d};this.getControlPointsArray=function(){var p,t=this.points.length,u=[];for(p=0;p<t;p++){var x=this.points[p];u[p]=[x.x,x.y,x.z]}return u};this.getLength=function(p){var t=0,u=new THREE.Vector3,x=new THREE.Vector3,z=[],C=0;z[0]=0;p||=100;var Q=this.points.length*p;u.copy(this.points[0]);for(p=1;p<Q;p++){var F=p/
Q;var W=this.getPoint(F);x.copy(W);C+=x.distanceTo(u);u.copy(W);F*=this.points.length-1;F=Math.floor(F);F!=t&&(z[F]=C,t=F)}z[z.length]=C;return{chunks:z,total:C}};this.reparametrizeByArcLength=function(p){var t,u=[],x=new THREE.Vector3,z=this.getLength();u.push(x.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){var C=z.chunks[t]-z.chunks[t-1];var Q=Math.ceil(p*C/z.total);var F=(t-1)/(this.points.length-1);var W=t/(this.points.length-1);for(C=1;C<Q-1;C++){var H=F+1/Q*C*(W-F);H=this.getPoint(H);
u.push(x.copy(H).clone())}u.push(x.copy(this.points[t]).clone())}this.points=u}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=180/Math.PI*Math.atan((void 0!==b?b:24)/(2*a))*2;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c;a=Math.abs(a*b-d);c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c=a.materials.length;for(b=0;b<c;b++){var d=a.materials[b];if(d instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function c(r){r=
Math.log(r)/Math.LN2;return Math.floor(r)==r}function d(r){r=Math.log(r)/Math.LN2;return Math.pow(2,Math.round(r))}function e(r,v){var p=new Image;p.onload=function(){if(c(this.width)&&c(this.height))r.image=this;else{var t=d(this.width),u=d(this.height);r.image.width=t;r.image.height=u;r.image.getContext("2d").drawImage(this,0,0,t,u)}r.needsUpdate=!0};p.crossOrigin=l.crossOrigin;p.src=v}function f(r,v,p,t,u,x){var z=document.createElement("canvas");r[v]=new THREE.Texture(z);r[v].sourceFile=p;t&&
(r[v].repeat.set(t[0],t[1]),1!=t[0]&&(r[v].wrapS=THREE.RepeatWrapping),1!=t[1]&&(r[v].wrapT=THREE.RepeatWrapping));u&&r[v].offset.set(u[0],u[1]);x&&(t={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==t[x[0]]&&(r[v].wrapS=t[x[0]]),void 0!==t[x[1]]&&(r[v].wrapT=t[x[1]]));e(r[v],b+"/"+p)}function g(r){return(255*r[0]<<16)+(255*r[1]<<8)+255*r[2]}var l=this,h="MeshLambertMaterial",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};if(a.shading){var q=
a.shading.toLowerCase();"phong"===q?h="MeshPhongMaterial":"basic"===q&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(n.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)n.transparent=a.transparent;void 0!==a.depthTest&&(n.depthTest=a.depthTest);void 0!==a.depthWrite&&(n.depthWrite=a.depthWrite);void 0!==a.vertexColors&&("face"==a.vertexColors?n.vertexColors=THREE.FaceColors:a.vertexColors&&(n.vertexColors=THREE.VertexColors));a.colorDiffuse?n.color=g(a.colorDiffuse):
a.DbgColor&&(n.color=a.DbgColor);a.colorSpecular&&(n.specular=g(a.colorSpecular));a.colorAmbient&&(n.ambient=g(a.colorAmbient));a.transparency&&(n.opacity=a.transparency);a.specularCoef&&(n.shininess=a.specularCoef);a.mapDiffuse&&b&&f(n,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&b&&f(n,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&b&&f(n,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);a.mapSpecular&&
b&&f(n,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,q=THREE.UniformsUtils.clone(h.uniforms),q.tNormal.texture=n.normalMap,a.mapNormalFactor&&(q.uNormalScale.value=a.mapNormalFactor),n.map&&(q.tDiffuse.texture=n.map,q.enableDiffuse.value=!0),n.specularMap&&(q.tSpecular.texture=n.specularMap,q.enableSpecular.value=!0),n.lightMap&&(q.tAO.texture=n.lightMap,q.enableAO.value=!0),q.uDiffuseColor.value.setHex(n.color),
q.uSpecularColor.value.setHex(n.specular),q.uAmbientColor.value.setHex(n.ambient),q.uShininess.value=n.shininess,void 0!==n.opacity&&(q.uOpacity.value=n.opacity),n=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:q,lights:!0,fog:!0})):n=new THREE[h](n);void 0!==a.DbgName&&(n.name=a.DbgName);return n}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var l=JSON.parse(g.responseText);a.loadAjaxBuffers(l,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.overrideMimeType&&g.overrideMimeType("text/plain; charset=x-user-defined");g.setRequestHeader("Content-Type","text/plain");g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,l=0;f.onreadystatechange=function(){4==f.readyState?200==f.status||0==f.status?THREE.BinaryLoader.prototype.createBinModel(f.response,b,d,a.materials):console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]"):3==f.readyState?e&&(0==l&&(l=f.getResponseHeader("Content-Length")),e({total:l,loaded:f.responseText.length})):2==f.readyState&&(l=f.getResponseHeader("Content-Length"))};
f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(f){function g(R){return R%4?4-R%4:0}function l(R,J){return(new Uint8Array(R,J,1))[0]}function h(R,J){return(new Uint32Array(R,J,1))[0]}function n(R,J){var da=new Uint32Array(a,J,3*R);for(J=0;J<R;J++){var va=da[3*J];var ya=da[3*J+1];var Aa=da[3*J+2];var ua=C[2*va];va=C[2*va+1];var ea=C[2*ya];var ia=C[2*ya+1];ya=C[2*Aa];var ka=C[2*Aa+1];Aa=u.faceVertexUvs[0];var wa=[];wa.push(new THREE.UV(ua,va));wa.push(new THREE.UV(ea,ia));
wa.push(new THREE.UV(ya,ka));Aa.push(wa)}}function q(R,J){var da=new Uint32Array(a,J,4*R);for(J=0;J<R;J++){var va=da[4*J];var ya=da[4*J+1];var Aa=da[4*J+2];var ua=da[4*J+3];var ea=C[2*va];va=C[2*va+1];var ia=C[2*ya];var ka=C[2*ya+1];var wa=C[2*Aa];var La=C[2*Aa+1];Aa=C[2*ua];ya=C[2*ua+1];ua=u.faceVertexUvs[0];var Sa=[];Sa.push(new THREE.UV(ea,va));Sa.push(new THREE.UV(ia,ka));Sa.push(new THREE.UV(wa,La));Sa.push(new THREE.UV(Aa,ya));ua.push(Sa)}}function r(R,J,da){J=new Uint32Array(a,J,3*R);var va=
new Uint16Array(a,da,R);for(da=0;da<R;da++){var ya=J[3*da];var Aa=J[3*da+1];var ua=J[3*da+2];var ea=va[da];u.faces.push(new THREE.Face3(ya,Aa,ua,null,null,ea))}}function v(R,J,da){J=new Uint32Array(a,J,4*R);var va=new Uint16Array(a,da,R);for(da=0;da<R;da++){var ya=J[4*da];var Aa=J[4*da+1];var ua=J[4*da+2];var ea=J[4*da+3];var ia=va[da];u.faces.push(new THREE.Face4(ya,Aa,ua,ea,null,null,ia))}}function p(R,J,da,va){J=new Uint32Array(a,J,3*R);da=new Uint32Array(a,da,3*R);var ya=new Uint16Array(a,va,
R);for(va=0;va<R;va++){var Aa=J[3*va];var ua=J[3*va+1];var ea=J[3*va+2];var ia=da[3*va];var ka=da[3*va+1];var wa=da[3*va+2];var La=ya[va];var Sa=z[3*ka],Oa=z[3*ka+1];ka=z[3*ka+2];var hb=z[3*wa],kb=z[3*wa+1];wa=z[3*wa+2];u.faces.push(new THREE.Face3(Aa,ua,ea,[new THREE.Vector3(z[3*ia],z[3*ia+1],z[3*ia+2]),new THREE.Vector3(Sa,Oa,ka),new THREE.Vector3(hb,kb,wa)],null,La))}}function t(R,J,da,va){J=new Uint32Array(a,J,4*R);da=new Uint32Array(a,da,4*R);var ya=new Uint16Array(a,va,R);for(va=0;va<R;va++){var Aa=
J[4*va];var ua=J[4*va+1];var ea=J[4*va+2];var ia=J[4*va+3];var ka=da[4*va];var wa=da[4*va+1];var La=da[4*va+2];var Sa=da[4*va+3];var Oa=ya[va];var hb=z[3*wa],kb=z[3*wa+1];wa=z[3*wa+2];var Lb=z[3*La],Bb=z[3*La+1];La=z[3*La+2];var Xb=z[3*Sa],Yb=z[3*Sa+1];Sa=z[3*Sa+2];u.faces.push(new THREE.Face4(Aa,ua,ea,ia,[new THREE.Vector3(z[3*ka],z[3*ka+1],z[3*ka+2]),new THREE.Vector3(hb,kb,wa),new THREE.Vector3(Lb,Bb,La),new THREE.Vector3(Xb,Yb,Sa)],null,Oa))}}var u=this,x=0,z=[],C=[];THREE.Geometry.call(this);
THREE.Loader.prototype.initMaterials(u,d,f);(function(R,J,da){R=new Uint8Array(R,J,da);for(var va="",ya=0;ya<da;ya++)va+=String.fromCharCode(R[J+ya]);return va})(a,x,12);var Q=l(a,x+12);l(a,x+13);l(a,x+14);l(a,x+15);var F=l(a,x+16);var W=l(a,x+17);var H=l(a,x+18);var B=l(a,x+19);var X=h(a,x+20);var M=h(a,x+20+4);var N=h(a,x+20+8);f=h(a,x+20+12);var T=h(a,x+20+16);var Z=h(a,x+20+20);var Y=h(a,x+20+24);var I=h(a,x+20+28);var pa=h(a,x+20+32);var V=h(a,x+20+36);var K=h(a,x+20+40);x+=Q;Q=3*F+B;var ca=
4*F+B;var E=f*Q;var ja=T*(Q+3*W);F=Z*(Q+3*H);B=Y*(Q+3*W+3*H);Q=I*ca;W=pa*(ca+4*W);H=V*(ca+4*H);x+=function(R){R=new Float32Array(a,R,3*X);var J;for(J=0;J<X;J++){var da=R[3*J];var va=R[3*J+1];var ya=R[3*J+2];u.vertices.push(new THREE.Vector3(da,va,ya))}return 3*X*Float32Array.BYTES_PER_ELEMENT}(x);x+=function(R){if(M){R=new Int8Array(a,R,3*M);var J;for(J=0;J<M;J++){var da=R[3*J];var va=R[3*J+1];var ya=R[3*J+2];z.push(da/127,va/127,ya/127)}}return 3*M*Int8Array.BYTES_PER_ELEMENT}(x);x+=g(3*M);x+=function(R){if(N){R=
new Float32Array(a,R,2*N);var J;for(J=0;J<N;J++){var da=R[2*J];var va=R[2*J+1];C.push(da,va)}}return 2*N*Float32Array.BYTES_PER_ELEMENT}(x);E=x+E+g(2*f);ja=E+ja+g(2*T);F=ja+F+g(2*Z);B=F+B+g(2*Y);Q=B+Q+g(2*I);W=Q+W+g(2*pa);H=W+H+g(2*V);(function(R){if(Z){var J=R+Z*Uint32Array.BYTES_PER_ELEMENT*3;r(Z,R,J+Z*Uint32Array.BYTES_PER_ELEMENT*3);n(Z,J)}})(ja);(function(R){if(Y){var J=R+Y*Uint32Array.BYTES_PER_ELEMENT*3,da=J+Y*Uint32Array.BYTES_PER_ELEMENT*3;p(Y,R,J,da+Y*Uint32Array.BYTES_PER_ELEMENT*3);n(Y,
da)}})(F);(function(R){if(V){var J=R+V*Uint32Array.BYTES_PER_ELEMENT*4;v(V,R,J+V*Uint32Array.BYTES_PER_ELEMENT*4);q(V,J)}})(W);(function(R){if(K){var J=R+K*Uint32Array.BYTES_PER_ELEMENT*4,da=J+K*Uint32Array.BYTES_PER_ELEMENT*4;t(K,R,J,da+K*Uint32Array.BYTES_PER_ELEMENT*4);q(K,da)}})(H);f&&r(f,x,x+f*Uint32Array.BYTES_PER_ELEMENT*3);(function(R){if(T){var J=R+T*Uint32Array.BYTES_PER_ELEMENT*3;p(T,R,J,J+T*Uint32Array.BYTES_PER_ELEMENT*3)}})(E);I&&v(I,B,B+I*Uint32Array.BYTES_PER_ELEMENT*4);(function(R){if(pa){var J=
R+pa*Uint32Array.BYTES_PER_ELEMENT*4;t(pa,R,J,J+pa*Uint32Array.BYTES_PER_ELEMENT*4)}})(Q);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(c))};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var l=JSON.parse(f.responseText);a.createModel(l,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined");f.setRequestHeader("Content-Type","text/plain");f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(f){var g,l,h=a.faces;var n=a.vertices;var q=a.normals,r=a.colors,v=0;for(g=0;g<a.uvs.length;g++)a.uvs[g].length&&v++;for(g=0;g<v;g++)d.faceUvs[g]=[],d.faceVertexUvs[g]=[];var p=0;for(l=n.length;p<l;){var t=new THREE.Vector3;t.x=n[p++]*f;t.y=n[p++]*f;t.z=n[p++]*f;d.vertices.push(t)}p=0;for(l=h.length;p<l;){f=h[p++];n=f&1;var u=f&2;g=f&4;var x=
f&8;var z=f&16;t=f&32;var C=f&64;f&=128;if(n){var Q=new THREE.Face4;Q.a=h[p++];Q.b=h[p++];Q.c=h[p++];Q.d=h[p++];n=4}else Q=new THREE.Face3,Q.a=h[p++],Q.b=h[p++],Q.c=h[p++],n=3;u&&(u=h[p++],Q.materialIndex=u);u=d.faces.length;if(g)for(g=0;g<v;g++){var F=a.uvs[g];var W=h[p++];var H=F[2*W];W=F[2*W+1];d.faceUvs[g][u]=new THREE.UV(H,W)}if(x)for(g=0;g<v;g++){F=a.uvs[g];var B=[];for(x=0;x<n;x++)W=h[p++],H=F[2*W],W=F[2*W+1],B[x]=new THREE.UV(H,W);d.faceVertexUvs[g][u]=B}z&&(z=3*h[p++],x=new THREE.Vector3,
x.x=q[z++],x.y=q[z++],x.z=q[z],Q.normal=x);if(t)for(g=0;g<n;g++)z=3*h[p++],x=new THREE.Vector3,x.x=q[z++],x.y=q[z++],x.z=q[z],Q.vertexNormals.push(x);C&&(t=h[p++],t=new THREE.Color(r[t]),Q.color=t);if(f)for(g=0;g<n;g++)t=h[p++],t=new THREE.Color(r[t]),Q.vertexColors.push(t);d.faces.push(Q)}})(e);(function(){var f;if(a.skinWeights){var g=0;for(f=a.skinWeights.length;g<f;g+=2){var l=a.skinWeights[g];var h=a.skinWeights[g+1];d.skinWeights.push(new THREE.Vector4(l,h,0,0))}}if(a.skinIndices)for(g=0,f=
a.skinIndices.length;g<f;g+=2)l=a.skinIndices[g],h=a.skinIndices[g+1],d.skinIndices.push(new THREE.Vector4(l,h,0,0));d.bones=a.bones;d.animation=a.animation})();(function(f){if(void 0!==a.morphTargets){var g,l;var h=0;for(g=a.morphTargets.length;h<g;h++){d.morphTargets[h]={};d.morphTargets[h].name=a.morphTargets[h].name;d.morphTargets[h].vertices=[];var n=d.morphTargets[h].vertices;var q=a.morphTargets[h].vertices;var r=0;for(l=q.length;r<l;r+=3){var v=new THREE.Vector3;v.x=q[r]*f;v.y=q[r+1]*f;v.z=
q[r+2]*f;n.push(v)}}}if(void 0!==a.morphColors)for(h=0,g=a.morphColors.length;h<g;h++)for(d.morphColors[h]={},d.morphColors[h].name=a.morphColors[h].name,d.morphColors[h].colors=[],l=d.morphColors[h].colors,n=a.morphColors[h].colors,f=0,r=n.length;f<r;f+=3)q=new THREE.Color(16755200),q.setRGB(n[f],n[f+1],n[f+2]),l.push(q)})(e);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4==d.readyState)if(200==d.status||0==d.status){var e=JSON.parse(d.responseText);c.createScene(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined");d.setRequestHeader("Content-Type","text/plain");d.send(null)};
THREE.SceneLoader.prototype.createScene=function(a,b,c){function d(J,da){return"relativeToHTML"==da?J:n+"/"+J}function e(){for(r in F.objects)if(!B.objects[r])if(v=F.objects[r],void 0!==v.geometry){if(V=B.geometries[v.geometry]){R=B.materials[v.materials[0]];R instanceof THREE.ShaderMaterial&&V.computeTangents();N=v.position;p=v.rotation;t=v.quaternion;u=v.scale;E=v.matrix;t=0;0==v.materials.length&&(R=new THREE.MeshFaceMaterial);1<v.materials.length&&(R=new THREE.MeshFaceMaterial);var J=new THREE.Mesh(V,
R);J.name=r;E?(J.matrixAutoUpdate=!1,J.matrix.set(E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15])):(J.position.set(N[0],N[1],N[2]),t?(J.quaternion.set(t[0],t[1],t[2],t[3]),J.useQuaternion=!0):J.rotation.set(p[0],p[1],p[2]),J.scale.set(u[0],u[1],u[2]));J.visible=v.visible;J.doubleSided=v.doubleSided;J.castShadow=v.castShadow;J.receiveShadow=v.receiveShadow;B.scene.add(J);B.objects[r]=J}}else N=v.position,p=v.rotation,t=v.quaternion,u=v.scale,t=0,J=new THREE.Object3D,
J.name=r,J.position.set(N[0],N[1],N[2]),t?(J.quaternion.set(t[0],t[1],t[2],t[3]),J.useQuaternion=!0):J.rotation.set(p[0],p[1],p[2]),J.scale.set(u[0],u[1],u[2]),J.visible=void 0!==v.visible?v.visible:!1,B.scene.add(J),B.objects[r]=J,B.empties[r]=J}function f(J){return function(da){B.geometries[J]=da;e();--Q;h.onLoadComplete();l()}}function g(J){return function(da){B.geometries[J]=da}}function l(){h.callbackProgress({totalModels:pa,totalTextures:ca,loadedModels:pa-Q,loadedTextures:ca-H},B);h.onLoadProgress();
0==Q&&0==H&&b(B)}var h=this,n=THREE.Loader.prototype.extractUrlBase(c),q,r,v,p,t,u,x,z,C,Q;var F=a;c=new THREE.BinaryLoader;var W=new THREE.JSONLoader;var H=Q=0;var B={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(F.transform){a=F.transform.position;var X=F.transform.rotation;var M=F.transform.scale;a&&B.scene.position.set(a[0],a[1],a[2]);X&&B.scene.rotation.set(X[0],X[1],X[2]);M&&B.scene.scale.set(M[0],M[1],M[2]);if(a||X||M)B.scene.updateMatrix(),
B.scene.updateMatrixWorld()}a=function(){--H;l();h.onLoadComplete()};for(T in F.cameras){M=F.cameras[T];"perspective"==M.type?z=new THREE.PerspectiveCamera(M.fov,M.aspect,M.near,M.far):"ortho"==M.type&&(z=new THREE.OrthographicCamera(M.left,M.right,M.top,M.bottom,M.near,M.far));var N=M.position;X=M.target;M=M.up;z.position.set(N[0],N[1],N[2]);z.target=new THREE.Vector3(X[0],X[1],X[2]);M&&z.up.set(M[0],M[1],M[2]);B.cameras[T]=z}for(Y in F.lights){X=F.lights[Y];var T=void 0!==X.color?X.color:16777215;
z=void 0!==X.intensity?X.intensity:1;if("directional"==X.type){N=X.direction;var Z=new THREE.DirectionalLight(T,z);Z.position.set(N[0],N[1],N[2]);Z.position.normalize()}else"point"==X.type?(N=X.position,Z=X.distance,Z=new THREE.PointLight(T,z,Z),Z.position.set(N[0],N[1],N[2])):"ambient"==X.type&&(Z=new THREE.AmbientLight(T));B.scene.add(Z);B.lights[Y]=Z}for(I in F.fogs){var Y=F.fogs[I];"linear"==Y.type?C=new THREE.Fog(0,Y.near,Y.far):"exp2"==Y.type&&(C=new THREE.FogExp2(0,Y.density));M=Y.color;C.color.setRGB(M[0],
M[1],M[2]);B.fogs[I]=C}B.cameras&&F.defaults.camera&&(B.currentCamera=B.cameras[F.defaults.camera]);B.fogs&&F.defaults.fog&&(B.scene.fog=B.fogs[F.defaults.fog]);M=F.defaults.bgcolor;B.bgColor=new THREE.Color;B.bgColor.setRGB(M[0],M[1],M[2]);B.bgColorAlpha=F.defaults.bgalpha;for(K in F.geometries){var I=F.geometries[K];if("bin_mesh"==I.type||"ascii_mesh"==I.type)Q+=1,h.onLoadStart()}var pa=Q;for(K in F.geometries)if(I=F.geometries[K],"cube"==I.type){var V=new THREE.CubeGeometry(I.width,I.height,I.depth,
I.segmentsWidth,I.segmentsHeight,I.segmentsDepth,null,I.flipped,I.sides);B.geometries[K]=V}else"plane"==I.type?(V=new THREE.PlaneGeometry(I.width,I.height,I.segmentsWidth,I.segmentsHeight),B.geometries[K]=V):"sphere"==I.type?(V=new THREE.SphereGeometry(I.radius,I.segmentsWidth,I.segmentsHeight),B.geometries[K]=V):"cylinder"==I.type?(V=new THREE.CylinderGeometry(I.topRad,I.botRad,I.height,I.radSegs,I.heightSegs),B.geometries[K]=V):"torus"==I.type?(V=new THREE.TorusGeometry(I.radius,I.tube,I.segmentsR,
I.segmentsT),B.geometries[K]=V):"icosahedron"==I.type?(V=new THREE.IcosahedronGeometry(I.radius,I.subdivisions),B.geometries[K]=V):"bin_mesh"==I.type?c.load(d(I.url,F.urlBaseType),f(K)):"ascii_mesh"==I.type?W.load(d(I.url,F.urlBaseType),f(K)):"embedded_mesh"==I.type&&(I=F.embeds[I.id],I.metadata=F.metadata,I&&W.createModel(I,g(K),""));for(ja in F.textures){var K=F.textures[ja];if(K.url instanceof Array)for(H+=K.url.length,I=0;I<K.url.length;I++)h.onLoadStart();else H+=1,h.onLoadStart()}var ca=H;for(ja in F.textures){K=
F.textures[ja];void 0!=K.mapping&&void 0!=THREE[K.mapping]&&(K.mapping=new THREE[K.mapping]);if(K.url instanceof Array){I=[];for(C=0;C<K.url.length;C++)I[C]=d(K.url[C],F.urlBaseType);I=THREE.ImageUtils.loadTextureCube(I,K.mapping,a)}else I=THREE.ImageUtils.loadTexture(d(K.url,F.urlBaseType),K.mapping,a),void 0!=THREE[K.minFilter]&&(I.minFilter=THREE[K.minFilter]),void 0!=THREE[K.magFilter]&&(I.magFilter=THREE[K.magFilter]),K.repeat&&(I.repeat.set(K.repeat[0],K.repeat[1]),1!=K.repeat[0]&&(I.wrapS=
THREE.RepeatWrapping),1!=K.repeat[1]&&(I.wrapT=THREE.RepeatWrapping)),K.offset&&I.offset.set(K.offset[0],K.offset[1]),K.wrap&&(C={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==C[K.wrap[0]]&&(I.wrapS=C[K.wrap[0]]),void 0!==C[K.wrap[1]]&&(I.wrapT=C[K.wrap[1]]));B.textures[ja]=I}for(q in F.materials){var E=F.materials[q];for(x in E.parameters)"envMap"==x||"map"==x||"lightMap"==x?E.parameters[x]=B.textures[E.parameters[x]]:"shading"==x?E.parameters[x]="flat"==E.parameters[x]?
THREE.FlatShading:THREE.SmoothShading:"blending"==x?E.parameters[x]=THREE[E.parameters[x]]?THREE[E.parameters[x]]:THREE.NormalBlending:"combine"==x?E.parameters[x]="MixOperation"==E.parameters[x]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"==x&&("face"==E.parameters[x]?E.parameters[x]=THREE.FaceColors:E.parameters[x]&&(E.parameters[x]=THREE.VertexColors));void 0!==E.parameters.opacity&&1>E.parameters.opacity&&(E.parameters.transparent=!0);if(E.parameters.normalMap){var ja=THREE.ShaderUtils.lib.normal;
a=THREE.UniformsUtils.clone(ja.uniforms);K=E.parameters.color;I=E.parameters.specular;C=E.parameters.ambient;c=E.parameters.shininess;a.tNormal.texture=B.textures[E.parameters.normalMap];E.parameters.normalMapFactor&&(a.uNormalScale.value=E.parameters.normalMapFactor);E.parameters.map&&(a.tDiffuse.texture=E.parameters.map,a.enableDiffuse.value=!0);E.parameters.lightMap&&(a.tAO.texture=E.parameters.lightMap,a.enableAO.value=!0);E.parameters.specularMap&&(a.tSpecular.texture=B.textures[E.parameters.specularMap],
a.enableSpecular.value=!0);a.uDiffuseColor.value.setHex(K);a.uSpecularColor.value.setHex(I);a.uAmbientColor.value.setHex(C);a.uShininess.value=c;E.parameters.opacity&&(a.uOpacity.value=E.parameters.opacity);var R=new THREE.ShaderMaterial({fragmentShader:ja.fragmentShader,vertexShader:ja.vertexShader,uniforms:a,lights:!0,fog:!0})}else R=new THREE[E.type](E.parameters);B.materials[q]=R}e();h.callbackSync(B);l()};
THREE.Material=function(a){a=a||{};this.id=THREE.MaterialCount++;this.name="";this.opacity=void 0!==a.opacity?a.opacity:1;this.transparent=void 0!==a.transparent?a.transparent:!1;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.depthTest=void 0!==a.depthTest?a.depthTest:
!0;this.depthWrite=void 0!==a.depthWrite?a.depthWrite:!0;this.polygonOffset=void 0!==a.polygonOffset?a.polygonOffset:!1;this.polygonOffsetFactor=void 0!==a.polygonOffsetFactor?a.polygonOffsetFactor:0;this.polygonOffsetUnits=void 0!==a.polygonOffsetUnits?a.polygonOffsetUnits:0;this.alphaTest=void 0!==a.alphaTest?a.alphaTest:0;this.overdraw=void 0!==a.overdraw?a.overdraw:!1;this.needsUpdate=this.visible=!0};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;
THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.AdditiveAlphaBlending=5;THREE.CustomBlending=6;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;
THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=void 0!==a.linewidth?a.linewidth:1;this.linecap=void 0!==a.linecap?a.linecap:"round";this.linejoin=void 0!==a.linejoin?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98;this.fog=void 0!==a.fog?a.fog:
!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?
a.morphTargets:!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0);this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=
void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:
"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215);this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0);this.specular=void 0!==a.specular?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=void 0!==a.shininess?a.shininess:30;this.metal=void 0!==a.metal?a.metal:!1;this.perPixel=
void 0!==a.perPixel?a.perPixel:!1;this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=void 0!==a.map?a.map:null;this.lightMap=void 0!==a.lightMap?a.lightMap:null;this.envMap=void 0!==a.envMap?a.envMap:null;this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation;this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1;this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98;this.fog=void 0!==a.fog?a.fog:!0;this.shading=void 0!==
a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round";this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round";this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:
!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;
THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:null;this.size=void 0!==a.size?a.size:1;this.sizeAttenuation=void 0!==a.sizeAttenuation?a.sizeAttenuation:!0;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1;this.fog=void 0!==a.fog?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.program=void 0!==a.program?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=void 0!==a.fragmentShader?a.fragmentShader:"void main() {}";this.vertexShader=void 0!==a.vertexShader?a.vertexShader:"void main() {}";this.uniforms=void 0!==a.uniforms?a.uniforms:{};this.attributes=a.attributes;this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading;this.wireframe=void 0!==a.wireframe?a.wireframe:!1;this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1;this.fog=void 0!==
a.fog?a.fog:!1;this.lights=void 0!==a.lights?a.lights:!1;this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors;this.skinning=void 0!==a.skinning?a.skinning:!1;this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1;this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,d,e,f,g,l){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==l?l:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=
!0;this.needsUpdate=this.premultiplyAlpha=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;
THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,e,f,g,l,h,n){THREE.Texture.call(this,null,f,g,l,h,n,d,e);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length))for(this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0;a<this.geometry.morphTargets.length;a++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c=this.children.length;for(a=0;a<c;a++)this.children[a].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++){var c=this.geometry.bones[a];var d=c.pos;var e=c.rotq;var f=c.scl;b=this.addBone();b.name=c.name;b.position.set(d[0],d[1],d[2]);b.quaternion.set(e[0],e[1],e[2],e[3]);b.useQuaternion=!0;void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1)}for(a=0;a<this.bones.length;a++)c=this.geometry.bones[a],
b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}b=this.bones.length;c=this.bones;var d=this.boneMatrices;for(a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,
16*a)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*c)}if(void 0===this.geometry.skinVerticesA)for(this.geometry.skinVerticesA=[],this.geometry.skinVerticesB=[],a=0;a<this.geometry.skinIndices.length;a++){c=this.geometry.vertices[a];var e=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y;d=new THREE.Vector3(c.x,
c.y,c.z);this.geometry.skinVerticesA.push(b[e].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(d));1!==this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y&&(c=.5*(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y)),this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}};
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;
THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var l=c[g];e<l.start&&(l.start=e);e>l.end&&(l.end=e);b||=g}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=new THREE.Object3D;
THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};
THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g=new THREE.Projector;var l=function(h){for(var n=document.documentElement,q=0;q<h.length;q++)if("string"===typeof n.style[h[q]])return h[q];return null}(["transform","MozTransform","WebkitTransform","msTransform","OTransform"]);this.domElement=document.createElement("div");this.setSize=function(h,n){c=h;d=n;e=c/2;f=d/2};this.render=function(h,n){var q;a=g.projectScene(h,n);b=a.elements;h=0;for(q=b.length;h<
q;h++){var r=b[h];if(r instanceof THREE.RenderableParticle&&r.material instanceof THREE.ParticleDOMMaterial){var v=r.material.domElement;var p=r.x*e+e-(v.offsetWidth>>1);var t=r.y*f+f-(v.offsetHeight>>1);v.style.left=p+"px";v.style.top=t+"px";v.style.zIndex=Math.abs(Math.floor((1-r.z)*n.far/n.near));l&&(v.style[l]="scale("+r.scale.x*e+","+r.scale.y*f+")")}}}};
THREE.CanvasRenderer=function(a){function b(P){C!=P&&(u.globalAlpha=C=P)}function c(P){if(Q!=P){switch(P){case THREE.NormalBlending:u.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:u.globalCompositeOperation="lighter"}Q=P}}function d(P){F!=P&&(u.strokeStyle=F=P)}function e(P){W!=P&&(u.fillStyle=W=P)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var f=this,g,l,h,n=new THREE.Projector,q=void 0!==a.canvas?a.canvas:document.createElement("canvas"),r,v,p,t,u=q.getContext("2d"),
x=new THREE.Color(0),z=0,C=1,Q=0,F=null,W=null,H=null,B=null,X=null,M,N,T,Z,Y=new THREE.RenderableVertex,I=new THREE.RenderableVertex,pa,V,K,ca,E,ja,R,J,da,va,ya,Aa,ua=new THREE.Color,ea=new THREE.Color,ia=new THREE.Color,ka=new THREE.Color,wa=new THREE.Color,La=[],Sa=[],Oa,hb,kb,Lb,Bb,Xb,Yb,za,Ga,fa,Ha=new THREE.Rectangle,Ra=new THREE.Rectangle,Qa=new THREE.Rectangle,cb=!1,Xa=new THREE.Color,rb=new THREE.Color,m=new THREE.Color,Va=new THREE.Vector3;a=16;var Zb=document.createElement("canvas");Zb.width=
Zb.height=2;var w=Zb.getContext("2d");w.fillStyle="rgba(0,0,0,1)";w.fillRect(0,0,2,2);var D=w.getImageData(0,0,2,2);var A=D.data;var y=document.createElement("canvas");y.width=y.height=a;var G=y.getContext("2d");G.translate(-a/2,-a/2);G.scale(a,a);a--;this.domElement=q;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(P,oa){r=P;v=oa;p=Math.floor(r/2);t=Math.floor(v/2);q.width=r;q.height=v;Ha.set(-p,-t,p,t);Ra.set(-p,-t,p,t);C=1;Q=0;
X=B=H=W=F=null};this.setClearColor=function(P,oa){x.copy(P);z=void 0!==oa?oa:1;Ra.set(-p,-t,p,t)};this.setClearColorHex=function(P,oa){x.setHex(P);z=void 0!==oa?oa:1;Ra.set(-p,-t,p,t)};this.clear=function(){u.setTransform(1,0,0,-1,p,t);Ra.isEmpty()||(Ra.minSelf(Ha),Ra.inflate(2),1>z&&u.clearRect(Math.floor(Ra.getX()),Math.floor(Ra.getY()),Math.floor(Ra.getWidth()),Math.floor(Ra.getHeight())),0<z&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*x.r)+","+Math.floor(255*x.g)+","+Math.floor(255*
x.b)+","+z+")"),u.fillRect(Math.floor(Ra.getX()),Math.floor(Ra.getY()),Math.floor(Ra.getWidth()),Math.floor(Ra.getHeight()))),Ra.empty())};this.render=function(P,oa){function S(O){var la;Xa.setRGB(0,0,0);rb.setRGB(0,0,0);m.setRGB(0,0,0);var ta=0;for(la=O.length;ta<la;ta++){var xa=O[ta];var Ea=xa.color;xa instanceof THREE.AmbientLight?(Xa.r+=Ea.r,Xa.g+=Ea.g,Xa.b+=Ea.b):xa instanceof THREE.DirectionalLight?(rb.r+=Ea.r,rb.g+=Ea.g,rb.b+=Ea.b):xa instanceof THREE.PointLight&&(m.r+=Ea.r,m.g+=Ea.g,m.b+=
Ea.b)}}function ha(O,la,ta,xa){var Ea;var lb=0;for(Ea=O.length;lb<Ea;lb++){var Ba=O[lb];var ba=Ba.color;if(Ba instanceof THREE.DirectionalLight){var db=Ba.matrixWorld.getPosition();var Ya=ta.dot(db);0>=Ya||(Ya*=Ba.intensity,xa.r+=ba.r*Ya,xa.g+=ba.g*Ya,xa.b+=ba.b*Ya)}else Ba instanceof THREE.PointLight&&(db=Ba.matrixWorld.getPosition(),Ya=ta.dot(Va.sub(db,la).normalize()),0>=Ya||(Ya*=0==Ba.distance?1:1-Math.min(la.distanceTo(db)/Ba.distance,1),0!=Ya&&(Ya*=Ba.intensity,xa.r+=ba.r*Ya,xa.g+=ba.g*Ya,xa.b+=
ba.b*Ya)))}}function na(O,la,ta){b(ta.opacity);c(ta.blending);if(ta instanceof THREE.ParticleBasicMaterial){if(ta.map){var xa=ta.map.image;var Ea=xa.width>>1;var lb=xa.height>>1;ta=la.scale.x*p;var Ba=la.scale.y*t;var ba=ta*Ea;var db=Ba*lb;Qa.set(O.x-ba,O.y-db,O.x+ba,O.y+db);Ha.intersects(Qa)&&(u.save(),u.translate(O.x,O.y),u.rotate(-la.rotation),u.scale(ta,-Ba),u.translate(-Ea,-lb),u.drawImage(xa,0,0),u.restore())}}else ta instanceof THREE.ParticleCanvasMaterial&&(ba=la.scale.x*p,db=la.scale.y*t,
Qa.set(O.x-ba,O.y-db,O.x+ba,O.y+db),Ha.intersects(Qa)&&(d(ta.color.getContextStyle()),e(ta.color.getContextStyle()),u.save(),u.translate(O.x,O.y),u.rotate(-la.rotation),u.scale(ba,db),ta.program(u),u.restore()))}function sa(O,la,ta,xa){b(xa.opacity);c(xa.blending);u.beginPath();u.moveTo(O.positionScreen.x,O.positionScreen.y);u.lineTo(la.positionScreen.x,la.positionScreen.y);u.closePath();xa instanceof THREE.LineBasicMaterial&&(O=xa.linewidth,H!=O&&(u.lineWidth=H=O),O=xa.linecap,B!=O&&(u.lineCap=B=
O),O=xa.linejoin,X!=O&&(u.lineJoin=X=O),d(xa.color.getContextStyle()),u.stroke(),Qa.inflate(2*xa.linewidth))}function Da(O,la,ta,xa,Ea,lb,Ba,ba){f.info.render.vertices+=3;f.info.render.faces++;b(ba.opacity);c(ba.blending);pa=O.positionScreen.x;V=O.positionScreen.y;K=la.positionScreen.x;ca=la.positionScreen.y;E=ta.positionScreen.x;ja=ta.positionScreen.y;Ma(pa,V,K,ca,E,ja);ba instanceof THREE.MeshBasicMaterial?ba.map?ba.map.mapping instanceof THREE.UVMapping&&(Lb=Ba.uvs[0],ib(pa,V,K,ca,E,ja,Lb[xa].u,
Lb[xa].v,Lb[Ea].u,Lb[Ea].v,Lb[lb].u,Lb[lb].v,ba.map)):ba.envMap?ba.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(O=oa.matrixWorldInverse,Va.copy(Ba.vertexNormalsWorld[xa]),Bb=.5*(Va.x*O.elements[0]+Va.y*O.elements[4]+Va.z*O.elements[8])+.5,Xb=.5*-(Va.x*O.elements[1]+Va.y*O.elements[5]+Va.z*O.elements[9])+.5,Va.copy(Ba.vertexNormalsWorld[Ea]),Yb=.5*(Va.x*O.elements[0]+Va.y*O.elements[4]+Va.z*O.elements[8])+.5,za=.5*-(Va.x*O.elements[1]+Va.y*O.elements[5]+Va.z*O.elements[9])+.5,Va.copy(Ba.vertexNormalsWorld[lb]),
Ga=.5*(Va.x*O.elements[0]+Va.y*O.elements[4]+Va.z*O.elements[8])+.5,fa=.5*-(Va.x*O.elements[1]+Va.y*O.elements[5]+Va.z*O.elements[9])+.5,ib(pa,V,K,ca,E,ja,Bb,Xb,Yb,za,Ga,fa,ba.envMap)):ba.wireframe?ra(ba.color,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ba.color):ba instanceof THREE.MeshLambertMaterial?cb?ba.wireframe||ba.shading!=THREE.SmoothShading||3!=Ba.vertexNormalsWorld.length?(ua.r=Xa.r,ua.g=Xa.g,ua.b=Xa.b,ha(h,Ba.centroidWorld,Ba.normalWorld,ua),ua.r=Math.max(0,Math.min(ba.color.r*
ua.r,1)),ua.g=Math.max(0,Math.min(ba.color.g*ua.g,1)),ua.b=Math.max(0,Math.min(ba.color.b*ua.b,1)),ba.wireframe?ra(ua,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ua)):(ea.r=ia.r=ka.r=Xa.r,ea.g=ia.g=ka.g=Xa.g,ea.b=ia.b=ka.b=Xa.b,ha(h,Ba.v1.positionWorld,Ba.vertexNormalsWorld[0],ea),ha(h,Ba.v2.positionWorld,Ba.vertexNormalsWorld[1],ia),ha(h,Ba.v3.positionWorld,Ba.vertexNormalsWorld[2],ka),ea.r=Math.max(0,Math.min(ba.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(ba.color.g*ea.g,1)),
ea.b=Math.max(0,Math.min(ba.color.b*ea.b,1)),ia.r=Math.max(0,Math.min(ba.color.r*ia.r,1)),ia.g=Math.max(0,Math.min(ba.color.g*ia.g,1)),ia.b=Math.max(0,Math.min(ba.color.b*ia.b,1)),ka.r=Math.max(0,Math.min(ba.color.r*ka.r,1)),ka.g=Math.max(0,Math.min(ba.color.g*ka.g,1)),ka.b=Math.max(0,Math.min(ba.color.b*ka.b,1)),wa.r=.5*(ia.r+ka.r),wa.g=.5*(ia.g+ka.g),wa.b=.5*(ia.b+ka.b),kb=Sb(ea,ia,ka,wa),bb(pa,V,K,ca,E,ja,0,0,1,0,0,1,kb)):ba.wireframe?ra(ba.color,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):
Pa(ba.color):ba instanceof THREE.MeshDepthMaterial?(Oa=oa.near,hb=oa.far,ea.r=ea.g=ea.b=1-$b(O.positionScreen.z,Oa,hb),ia.r=ia.g=ia.b=1-$b(la.positionScreen.z,Oa,hb),ka.r=ka.g=ka.b=1-$b(ta.positionScreen.z,Oa,hb),wa.r=.5*(ia.r+ka.r),wa.g=.5*(ia.g+ka.g),wa.b=.5*(ia.b+ka.b),kb=Sb(ea,ia,ka,wa),bb(pa,V,K,ca,E,ja,0,0,1,0,0,1,kb)):ba instanceof THREE.MeshNormalMaterial&&(ua.r=Za(Ba.normalWorld.x),ua.g=Za(Ba.normalWorld.y),ua.b=Za(Ba.normalWorld.z),ba.wireframe?ra(ua,ba.wireframeLinewidth,ba.wireframeLinecap,
ba.wireframeLinejoin):Pa(ua))}function Ca(O,la,ta,xa,Ea,lb,Ba,ba,db){f.info.render.vertices+=4;f.info.render.faces++;b(ba.opacity);c(ba.blending);ba.map||ba.envMap?(Da(O,la,xa,0,1,3,Ba,ba,db),Da(Ea,ta,lb,1,2,3,Ba,ba,db)):(pa=O.positionScreen.x,V=O.positionScreen.y,K=la.positionScreen.x,ca=la.positionScreen.y,E=ta.positionScreen.x,ja=ta.positionScreen.y,R=xa.positionScreen.x,J=xa.positionScreen.y,da=Ea.positionScreen.x,va=Ea.positionScreen.y,ya=lb.positionScreen.x,Aa=lb.positionScreen.y,ba instanceof
THREE.MeshBasicMaterial?(Na(pa,V,K,ca,E,ja,R,J),ba.wireframe?ra(ba.color,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ba.color)):ba instanceof THREE.MeshLambertMaterial?cb?ba.wireframe||ba.shading!=THREE.SmoothShading||4!=Ba.vertexNormalsWorld.length?(ua.r=Xa.r,ua.g=Xa.g,ua.b=Xa.b,ha(h,Ba.centroidWorld,Ba.normalWorld,ua),ua.r=Math.max(0,Math.min(ba.color.r*ua.r,1)),ua.g=Math.max(0,Math.min(ba.color.g*ua.g,1)),ua.b=Math.max(0,Math.min(ba.color.b*ua.b,1)),Na(pa,V,K,ca,E,ja,R,J),
ba.wireframe?ra(ua,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ua)):(ea.r=ia.r=ka.r=wa.r=Xa.r,ea.g=ia.g=ka.g=wa.g=Xa.g,ea.b=ia.b=ka.b=wa.b=Xa.b,ha(h,Ba.v1.positionWorld,Ba.vertexNormalsWorld[0],ea),ha(h,Ba.v2.positionWorld,Ba.vertexNormalsWorld[1],ia),ha(h,Ba.v4.positionWorld,Ba.vertexNormalsWorld[3],ka),ha(h,Ba.v3.positionWorld,Ba.vertexNormalsWorld[2],wa),ea.r=Math.max(0,Math.min(ba.color.r*ea.r,1)),ea.g=Math.max(0,Math.min(ba.color.g*ea.g,1)),ea.b=Math.max(0,Math.min(ba.color.b*
ea.b,1)),ia.r=Math.max(0,Math.min(ba.color.r*ia.r,1)),ia.g=Math.max(0,Math.min(ba.color.g*ia.g,1)),ia.b=Math.max(0,Math.min(ba.color.b*ia.b,1)),ka.r=Math.max(0,Math.min(ba.color.r*ka.r,1)),ka.g=Math.max(0,Math.min(ba.color.g*ka.g,1)),ka.b=Math.max(0,Math.min(ba.color.b*ka.b,1)),wa.r=Math.max(0,Math.min(ba.color.r*wa.r,1)),wa.g=Math.max(0,Math.min(ba.color.g*wa.g,1)),wa.b=Math.max(0,Math.min(ba.color.b*wa.b,1)),kb=Sb(ea,ia,ka,wa),Ma(pa,V,K,ca,R,J),bb(pa,V,K,ca,R,J,0,0,1,0,0,1,kb),Ma(da,va,E,ja,ya,
Aa),bb(da,va,E,ja,ya,Aa,1,0,1,1,0,1,kb)):(Na(pa,V,K,ca,E,ja,R,J),ba.wireframe?ra(ba.color,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ba.color)):ba instanceof THREE.MeshNormalMaterial?(ua.r=Za(Ba.normalWorld.x),ua.g=Za(Ba.normalWorld.y),ua.b=Za(Ba.normalWorld.z),Na(pa,V,K,ca,E,ja,R,J),ba.wireframe?ra(ua,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):Pa(ua)):ba instanceof THREE.MeshDepthMaterial&&(Oa=oa.near,hb=oa.far,ea.r=ea.g=ea.b=1-$b(O.positionScreen.z,Oa,
hb),ia.r=ia.g=ia.b=1-$b(la.positionScreen.z,Oa,hb),ka.r=ka.g=ka.b=1-$b(xa.positionScreen.z,Oa,hb),wa.r=wa.g=wa.b=1-$b(ta.positionScreen.z,Oa,hb),kb=Sb(ea,ia,ka,wa),Ma(pa,V,K,ca,R,J),bb(pa,V,K,ca,R,J,0,0,1,0,0,1,kb),Ma(da,va,E,ja,ya,Aa),bb(da,va,E,ja,ya,Aa,1,0,1,1,0,1,kb)))}function Ma(O,la,ta,xa,Ea,lb){u.beginPath();u.moveTo(O,la);u.lineTo(ta,xa);u.lineTo(Ea,lb);u.lineTo(O,la);u.closePath()}function Na(O,la,ta,xa,Ea,lb,Ba,ba){u.beginPath();u.moveTo(O,la);u.lineTo(ta,xa);u.lineTo(Ea,lb);u.lineTo(Ba,
ba);u.lineTo(O,la);u.closePath()}function ra(O,la,ta,xa){H!=la&&(u.lineWidth=H=la);B!=ta&&(u.lineCap=B=ta);X!=xa&&(u.lineJoin=X=xa);d(O.getContextStyle());u.stroke();Qa.inflate(2*la)}function Pa(O){e(O.getContextStyle());u.fill()}function ib(O,la,ta,xa,Ea,lb,Ba,ba,db,Ya,nb,Mb,$a){if(0!=$a.image.width){if(1==$a.needsUpdate||void 0==La[$a.id]){var yb=$a.wrapS==THREE.RepeatWrapping,Jb=$a.wrapT==THREE.RepeatWrapping;La[$a.id]=u.createPattern($a.image,yb&&Jb?"repeat":yb&&!Jb?"repeat-x":!yb&&Jb?"repeat-y":
"no-repeat");$a.needsUpdate=!1}e(La[$a.id]);yb=$a.offset.x/$a.repeat.x;Jb=$a.offset.y/$a.repeat.y;var Oc=$a.image.width*$a.repeat.x,Wc=$a.image.height*$a.repeat.y;Ba=(Ba+yb)*Oc;ba=(ba+Jb)*Wc;ta-=O;xa-=la;Ea-=O;lb-=la;db=(db+yb)*Oc-Ba;Ya=(Ya+Jb)*Wc-ba;nb=(nb+yb)*Oc-Ba;Mb=(Mb+Jb)*Wc-ba;yb=db*Mb-nb*Ya;0==yb?(void 0===Sa[$a.id]&&(la=document.createElement("canvas"),la.width=$a.image.width,la.height=$a.image.height,la=la.getContext("2d"),la.drawImage($a.image,0,0),Sa[$a.id]=la.getImageData(0,0,$a.image.width,
$a.image.height).data),la=Sa[$a.id],Ba=4*(Math.floor(Ba)+Math.floor(ba)*$a.image.width),ua.setRGB(la[Ba]/255,la[Ba+1]/255,la[Ba+2]/255),Pa(ua)):(yb=1/yb,$a=(Mb*ta-Ya*Ea)*yb,Ya=(Mb*xa-Ya*lb)*yb,ta=(db*Ea-nb*ta)*yb,xa=(db*lb-nb*xa)*yb,O=O-$a*Ba-ta*ba,Ba=la-Ya*Ba-xa*ba,u.save(),u.transform($a,Ya,ta,xa,O,Ba),u.fill(),u.restore())}}function bb(O,la,ta,xa,Ea,lb,Ba,ba,db,Ya,nb,Mb,$a){var yb=$a.width-1;var Jb=$a.height-1;Ba*=yb;ba*=Jb;ta-=O;xa-=la;Ea-=O;lb-=la;db=db*yb-Ba;Ya=Ya*Jb-ba;nb=nb*yb-Ba;Mb=Mb*Jb-
ba;Jb=1/(db*Mb-nb*Ya);yb=(Mb*ta-Ya*Ea)*Jb;Ya=(Mb*xa-Ya*lb)*Jb;ta=(db*Ea-nb*ta)*Jb;xa=(db*lb-nb*xa)*Jb;O=O-yb*Ba-ta*ba;la=la-Ya*Ba-xa*ba;u.save();u.transform(yb,Ya,ta,xa,O,la);u.clip();u.drawImage($a,0,0);u.restore()}function Sb(O,la,ta,xa){var Ea=~~(255*O.r),lb=~~(255*O.g);O=~~(255*O.b);var Ba=~~(255*la.r),ba=~~(255*la.g);la=~~(255*la.b);var db=~~(255*ta.r),Ya=~~(255*ta.g);ta=~~(255*ta.b);var nb=~~(255*xa.r),Mb=~~(255*xa.g);xa=~~(255*xa.b);A[0]=0>Ea?0:255<Ea?255:Ea;A[1]=0>lb?0:255<lb?255:lb;A[2]=
0>O?0:255<O?255:O;A[4]=0>Ba?0:255<Ba?255:Ba;A[5]=0>ba?0:255<ba?255:ba;A[6]=0>la?0:255<la?255:la;A[8]=0>db?0:255<db?255:db;A[9]=0>Ya?0:255<Ya?255:Ya;A[10]=0>ta?0:255<ta?255:ta;A[12]=0>nb?0:255<nb?255:nb;A[13]=0>Mb?0:255<Mb?255:Mb;A[14]=0>xa?0:255<xa?255:xa;w.putImageData(D,0,0);G.drawImage(Zb,0,0);return y}function $b(O,la,ta){O=(O-la)/(ta-la);return O*O*(3-2*O)}function Za(O){O=.5*(O+1);return 0>O?0:1<O?1:O}function Tb(O,la){var ta=la.x-O.x,xa=la.y-O.y,Ea=ta*ta+xa*xa;0!=Ea&&(Ea=1/Math.sqrt(Ea),ta*=
Ea,xa*=Ea,la.x+=ta,la.y+=xa,O.x-=ta,O.y-=xa)}var hc;this.autoClear?this.clear():u.setTransform(1,0,0,-1,p,t);f.info.render.vertices=0;f.info.render.faces=0;g=n.projectScene(P,oa,this.sortElements);l=g.elements;h=g.lights;(cb=0<h.length)&&S(h);var cc=0;for(hc=l.length;cc<hc;cc++){var ob=l[cc];var jb=ob.material;jb=jb instanceof THREE.MeshFaceMaterial?ob.faceMaterial:jb;void 0!==jb&&!1!==jb.visible&&(Qa.empty(),ob instanceof THREE.RenderableParticle?(M=ob,M.x*=p,M.y*=t,na(M,ob,jb,P)):ob instanceof THREE.RenderableLine?
(M=ob.v1,N=ob.v2,M.positionScreen.x*=p,M.positionScreen.y*=t,N.positionScreen.x*=p,N.positionScreen.y*=t,Qa.addPoint(M.positionScreen.x,M.positionScreen.y),Qa.addPoint(N.positionScreen.x,N.positionScreen.y),Ha.intersects(Qa)&&sa(M,N,ob,jb,P)):ob instanceof THREE.RenderableFace3?(M=ob.v1,N=ob.v2,T=ob.v3,M.positionScreen.x*=p,M.positionScreen.y*=t,N.positionScreen.x*=p,N.positionScreen.y*=t,T.positionScreen.x*=p,T.positionScreen.y*=t,jb.overdraw&&(Tb(M.positionScreen,N.positionScreen),Tb(N.positionScreen,
T.positionScreen),Tb(T.positionScreen,M.positionScreen)),Qa.add3Points(M.positionScreen.x,M.positionScreen.y,N.positionScreen.x,N.positionScreen.y,T.positionScreen.x,T.positionScreen.y),Ha.intersects(Qa)&&Da(M,N,T,0,1,2,ob,jb,P)):ob instanceof THREE.RenderableFace4&&(M=ob.v1,N=ob.v2,T=ob.v3,Z=ob.v4,M.positionScreen.x*=p,M.positionScreen.y*=t,N.positionScreen.x*=p,N.positionScreen.y*=t,T.positionScreen.x*=p,T.positionScreen.y*=t,Z.positionScreen.x*=p,Z.positionScreen.y*=t,Y.positionScreen.copy(N.positionScreen),
I.positionScreen.copy(Z.positionScreen),jb.overdraw&&(Tb(M.positionScreen,N.positionScreen),Tb(N.positionScreen,Z.positionScreen),Tb(Z.positionScreen,M.positionScreen),Tb(T.positionScreen,Y.positionScreen),Tb(T.positionScreen,I.positionScreen)),Qa.addPoint(M.positionScreen.x,M.positionScreen.y),Qa.addPoint(N.positionScreen.x,N.positionScreen.y),Qa.addPoint(T.positionScreen.x,T.positionScreen.y),Qa.addPoint(Z.positionScreen.x,Z.positionScreen.y),Ha.intersects(Qa)&&Ca(M,N,T,Z,Y,I,ob,jb,P)),Ra.addRectangle(Qa))}u.setTransform(1,
0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(V,K,ca,E){var ja;var R=0;for(ja=V.length;R<ja;R++){var J=V[R];var da=J.color;if(J instanceof THREE.DirectionalLight){var va=J.matrixWorld.getPosition();var ya=ca.dot(va);0>=ya||(ya*=J.intensity,E.r+=da.r*ya,E.g+=da.g*ya,E.b+=da.b*ya)}else J instanceof THREE.PointLight&&(va=J.matrixWorld.getPosition(),ya=ca.dot(M.sub(va,K).normalize()),0>=ya||(ya*=0==J.distance?1:1-Math.min(K.distanceTo(va)/J.distance,1),0!=ya&&(ya*=J.intensity,E.r+=da.r*ya,E.g+=da.g*ya,E.b+=
da.b*ya)))}}function b(V){null==N[V]&&(N[V]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==pa&&N[V].setAttribute("shape-rendering","crispEdges"));return N[V]}function c(V){V=.5*(V+1);return 0>V?0:1<V?1:V}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,l=new THREE.Projector,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),n,q,r,v,p,t,u,x,z=new THREE.Rectangle,C=new THREE.Rectangle,Q=!1,F=new THREE.Color,W=new THREE.Color,H=new THREE.Color,B=new THREE.Color,
X,M=new THREE.Vector3,N=[],T=[],Z,Y,I,pa=1;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(V){switch(V){case "high":pa=1;break;case "low":pa=0}};this.setSize=function(V,K){n=V;q=K;r=n/2;v=q/2;h.setAttribute("viewBox",-r+" "+-v+" "+n+" "+q);h.setAttribute("width",n);h.setAttribute("height",q);z.set(-r,-v,r,v)};this.clear=function(){for(;0<h.childNodes.length;)h.removeChild(h.childNodes[0])};this.render=function(V,
K){this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=l.projectScene(V,K,this.sortElements);f=e.elements;g=e.lights;I=Y=0;if(Q=0<g.length)for(W.setRGB(0,0,0),H.setRGB(0,0,0),B.setRGB(0,0,0),V=0,K=g.length;V<K;V++){var ca=g[V];var E=ca.color;ca instanceof THREE.AmbientLight?(W.r+=E.r,W.g+=E.g,W.b+=E.b):ca instanceof THREE.DirectionalLight?(H.r+=E.r,H.g+=E.g,H.b+=E.b):ca instanceof THREE.PointLight&&(B.r+=E.r,B.g+=E.g,B.b+=E.b)}V=0;for(K=f.length;V<K;V++)if(E=f[V],ca=E.material,
ca=ca instanceof THREE.MeshFaceMaterial?E.faceMaterial:ca,void 0!==ca&&!1!==ca.visible)if(C.empty(),E instanceof THREE.RenderableParticle)p=E,p.x*=r,p.y*=-v;else if(E instanceof THREE.RenderableLine){if(p=E.v1,t=E.v2,p.positionScreen.x*=r,p.positionScreen.y*=-v,t.positionScreen.x*=r,t.positionScreen.y*=-v,C.addPoint(p.positionScreen.x,p.positionScreen.y),C.addPoint(t.positionScreen.x,t.positionScreen.y),z.intersects(C)){E=p;var ja=t,R=I++;null==T[R]&&(T[R]=document.createElementNS("http://www.w3.org/2000/svg",
"line"),0==pa&&T[R].setAttribute("shape-rendering","crispEdges"));Z=T[R];Z.setAttribute("x1",E.positionScreen.x);Z.setAttribute("y1",E.positionScreen.y);Z.setAttribute("x2",ja.positionScreen.x);Z.setAttribute("y2",ja.positionScreen.y);ca instanceof THREE.LineBasicMaterial&&(Z.setAttribute("style","fill: none; stroke: "+ca.color.getContextStyle()+"; stroke-width: "+ca.linewidth+"; stroke-opacity: "+ca.opacity+"; stroke-linecap: "+ca.linecap+"; stroke-linejoin: "+ca.linejoin),h.appendChild(Z))}}else if(E instanceof
THREE.RenderableFace3){if(p=E.v1,t=E.v2,u=E.v3,p.positionScreen.x*=r,p.positionScreen.y*=-v,t.positionScreen.x*=r,t.positionScreen.y*=-v,u.positionScreen.x*=r,u.positionScreen.y*=-v,C.addPoint(p.positionScreen.x,p.positionScreen.y),C.addPoint(t.positionScreen.x,t.positionScreen.y),C.addPoint(u.positionScreen.x,u.positionScreen.y),z.intersects(C)){ja=p;R=t;var J=u;d.info.render.vertices+=3;d.info.render.faces++;Z=b(Y++);Z.setAttribute("d","M "+ja.positionScreen.x+" "+ja.positionScreen.y+" L "+R.positionScreen.x+
" "+R.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+"z");ca instanceof THREE.MeshBasicMaterial?F.copy(ca.color):ca instanceof THREE.MeshLambertMaterial?Q?(F.r=W.r,F.g=W.g,F.b=W.b,a(g,E.centroidWorld,E.normalWorld,F),F.r=Math.max(0,Math.min(ca.color.r*F.r,1)),F.g=Math.max(0,Math.min(ca.color.g*F.g,1)),F.b=Math.max(0,Math.min(ca.color.b*F.b,1))):F.copy(ca.color):ca instanceof THREE.MeshDepthMaterial?(X=1-ca.__2near/(ca.__farPlusNear-E.z*ca.__farMinusNear),F.setRGB(X,X,X)):ca instanceof
THREE.MeshNormalMaterial&&F.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));ca.wireframe?Z.setAttribute("style","fill: none; stroke: "+F.getContextStyle()+"; stroke-width: "+ca.wireframeLinewidth+"; stroke-opacity: "+ca.opacity+"; stroke-linecap: "+ca.wireframeLinecap+"; stroke-linejoin: "+ca.wireframeLinejoin):Z.setAttribute("style","fill: "+F.getContextStyle()+"; fill-opacity: "+ca.opacity);h.appendChild(Z)}}else if(E instanceof THREE.RenderableFace4&&(p=E.v1,t=E.v2,u=E.v3,x=E.v4,
p.positionScreen.x*=r,p.positionScreen.y*=-v,t.positionScreen.x*=r,t.positionScreen.y*=-v,u.positionScreen.x*=r,u.positionScreen.y*=-v,x.positionScreen.x*=r,x.positionScreen.y*=-v,C.addPoint(p.positionScreen.x,p.positionScreen.y),C.addPoint(t.positionScreen.x,t.positionScreen.y),C.addPoint(u.positionScreen.x,u.positionScreen.y),C.addPoint(x.positionScreen.x,x.positionScreen.y),z.intersects(C))){ja=p;R=t;J=u;var da=x;d.info.render.vertices+=4;d.info.render.faces++;Z=b(Y++);Z.setAttribute("d","M "+
ja.positionScreen.x+" "+ja.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+"z");ca instanceof THREE.MeshBasicMaterial?F.copy(ca.color):ca instanceof THREE.MeshLambertMaterial?Q?(F.r=W.r,F.g=W.g,F.b=W.b,a(g,E.centroidWorld,E.normalWorld,F),F.r=Math.max(0,Math.min(ca.color.r*F.r,1)),F.g=Math.max(0,Math.min(ca.color.g*F.g,1)),F.b=Math.max(0,Math.min(ca.color.b*F.b,1))):F.copy(ca.color):
ca instanceof THREE.MeshDepthMaterial?(X=1-ca.__2near/(ca.__farPlusNear-E.z*ca.__farMinusNear),F.setRGB(X,X,X)):ca instanceof THREE.MeshNormalMaterial&&F.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));ca.wireframe?Z.setAttribute("style","fill: none; stroke: "+F.getContextStyle()+"; stroke-width: "+ca.wireframeLinewidth+"; stroke-opacity: "+ca.opacity+"; stroke-linecap: "+ca.wireframeLinecap+"; stroke-linejoin: "+ca.wireframeLinejoin):Z.setAttribute("style","fill: "+F.getContextStyle()+
"; fill-opacity: "+ca.opacity);h.appendChild(Z)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",
envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",
linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d={};for(b=0;b<a.length;b++){var e=this.clone(a[b]);for(c in e)d[c]=e[c]}return d},clone:function(a){var b,c,d={};for(b in a)for(c in d[b]={},a[b]){var e=a[b][c];d[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e}return d}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",
value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",
value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,
1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",
THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(w,D){var A=w.vertices.length;D=D.material;if(D.attributes){void 0===w.__webglCustomAttributesList&&(w.__webglCustomAttributesList=[]);for(var y in D.attributes){var G=D.attributes[y];if(!G.__webglInitialized||G.createUniqueBuffers){G.__webglInitialized=!0;var P=1;"v2"===G.type?P=2:"v3"===G.type?P=3:"v4"===G.type?P=4:"c"===G.type&&(P=3);G.size=P;G.array=new Float32Array(A*P);G.buffer=m.createBuffer();G.buffer.belongsToAttribute=y;G.needsUpdate=!0}w.__webglCustomAttributesList.push(G)}}}
function c(w,D){if(w.material&&!(w.material instanceof THREE.MeshFaceMaterial))return w.material;if(0<=D.materialIndex)return w.geometry.materials[D.materialIndex]}function d(w){return w instanceof THREE.MeshBasicMaterial&&!w.envMap||w instanceof THREE.MeshDepthMaterial?!1:w&&void 0!==w.shading&&w.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(w){return w.map||w.lightMap||w instanceof THREE.ShaderMaterial?!0:!1}function f(w,D,A){var y,G=w.vertices;var P=G.length;var oa=
w.colors,S=oa.length,ha=w.__vertexArray,na=w.__colorArray,sa=w.__sortArray,Da=w.verticesNeedUpdate,Ca=w.colorsNeedUpdate,Ma=w.__webglCustomAttributesList;if(A.sortParticles){Ra.copy(Ha);Ra.multiplySelf(A.matrixWorld);for(y=0;y<P;y++){var Na=G[y];Qa.copy(Na);Ra.multiplyVector3(Qa);sa[y]=[Qa.z,y]}sa.sort(function(Pa,ib){return ib[0]-Pa[0]});for(y=0;y<P;y++){Na=G[sa[y][1]];var ra=3*y;ha[ra]=Na.x;ha[ra+1]=Na.y;ha[ra+2]=Na.z}for(y=0;y<S;y++)ra=3*y,Na=oa[sa[y][1]],na[ra]=Na.r,na[ra+1]=Na.g,na[ra+2]=Na.b;
if(Ma)for(oa=0,S=Ma.length;oa<S;oa++)if(G=Ma[oa],void 0===G.boundTo||"vertices"===G.boundTo)if(ra=0,Na=G.value.length,1===G.size)for(y=0;y<Na;y++)P=sa[y][1],G.array[y]=G.value[P];else if(2===G.size)for(y=0;y<Na;y++)P=sa[y][1],P=G.value[P],G.array[ra]=P.x,G.array[ra+1]=P.y,ra+=2;else if(3===G.size)if("c"===G.type)for(y=0;y<Na;y++)P=sa[y][1],P=G.value[P],G.array[ra]=P.r,G.array[ra+1]=P.g,G.array[ra+2]=P.b,ra+=3;else for(y=0;y<Na;y++)P=sa[y][1],P=G.value[P],G.array[ra]=P.x,G.array[ra+1]=P.y,G.array[ra+
2]=P.z,ra+=3;else if(4===G.size)for(y=0;y<Na;y++)P=sa[y][1],P=G.value[P],G.array[ra]=P.x,G.array[ra+1]=P.y,G.array[ra+2]=P.z,G.array[ra+3]=P.w,ra+=4}else{if(Da)for(y=0;y<P;y++)Na=G[y],ra=3*y,ha[ra]=Na.x,ha[ra+1]=Na.y,ha[ra+2]=Na.z;if(Ca)for(y=0;y<S;y++)Na=oa[y],ra=3*y,na[ra]=Na.r,na[ra+1]=Na.g,na[ra+2]=Na.b;if(Ma)for(oa=0,S=Ma.length;oa<S;oa++)if(G=Ma[oa],G.needsUpdate&&(void 0===G.boundTo||"vertices"===G.boundTo))if(Na=G.value.length,ra=0,1===G.size)for(y=0;y<Na;y++)G.array[y]=G.value[y];else if(2===
G.size)for(y=0;y<Na;y++)P=G.value[y],G.array[ra]=P.x,G.array[ra+1]=P.y,ra+=2;else if(3===G.size)if("c"===G.type)for(y=0;y<Na;y++)P=G.value[y],G.array[ra]=P.r,G.array[ra+1]=P.g,G.array[ra+2]=P.b,ra+=3;else for(y=0;y<Na;y++)P=G.value[y],G.array[ra]=P.x,G.array[ra+1]=P.y,G.array[ra+2]=P.z,ra+=3;else if(4===G.size)for(y=0;y<Na;y++)P=G.value[y],G.array[ra]=P.x,G.array[ra+1]=P.y,G.array[ra+2]=P.z,G.array[ra+3]=P.w,ra+=4}if(Da||A.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,w.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,
ha,D);if(Ca||A.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,w.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,na,D);if(Ma)for(oa=0,S=Ma.length;oa<S;oa++)if(G=Ma[oa],G.needsUpdate||A.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,G.buffer),m.bufferData(m.ARRAY_BUFFER,G.array,D)}function g(w,D){return D.z-w.z}function l(w,D,A){if(w.length)for(var y=0,G=w.length;y<G;y++)da=E=null,R=J=Aa=ya=La=wa=ua=-1,Xa=!0,w[y].render(D,A,za,Ga),da=E=null,R=J=Aa=ya=La=wa=ua=-1,Xa=!0}function h(w,D,A,y,G,P,oa,S){if(D){var ha=
w.length-1;var na=D=-1}else ha=0,D=w.length,na=1;for(var sa=ha;sa!==D;sa+=na){var Da=w[sa];if(Da.render){ha=Da.object;var Ca=Da.buffer;if(S)Da=S;else{Da=Da[A];if(!Da)continue;oa&&K.setBlending(Da.blending,Da.blendEquation,Da.blendSrc,Da.blendDst);K.setDepthTest(Da.depthTest);K.setDepthWrite(Da.depthWrite);z(Da.polygonOffset,Da.polygonOffsetFactor,Da.polygonOffsetUnits)}K.setObjectFaces(ha);Ca instanceof THREE.BufferGeometry?K.renderBufferDirect(y,G,P,Da,Ca,ha):K.renderBuffer(y,G,P,Da,Ca,ha)}}}function n(w,
D,A,y,G,P,oa){for(var S,ha,na=0,sa=w.length;na<sa;na++)if(S=w[na],ha=S.object,ha.visible){if(oa)S=oa;else{S=S[D];if(!S)continue;P&&K.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst);K.setDepthTest(S.depthTest);K.setDepthWrite(S.depthWrite);z(S.polygonOffset,S.polygonOffsetFactor,S.polygonOffsetUnits)}K.renderImmediateObject(A,y,G,S,ha)}}function q(w,D,A){w.push({buffer:D,object:A,opaque:null,transparent:null})}function r(w){for(var D in w.attributes)if(w.attributes[D].needsUpdate)return!0;
return!1}function v(w){for(var D in w.attributes)w.attributes[D].needsUpdate=!1}function p(w,D){for(var A=w.length-1;0<=A;A--)w[A].object===D&&w.splice(A,1)}function t(w,D){for(var A=w.length-1;0<=A;A--)w[A]===D&&w.splice(A,1)}function u(w,D,A,y,G){if(!y.program||y.needsUpdate)K.initMaterial(y,D,A,G),y.needsUpdate=!1;if(y.morphTargets&&!G.__webglMorphTargetInfluences){G.__webglMorphTargetInfluences=new Float32Array(K.maxMorphTargets);for(var P=0,oa=K.maxMorphTargets;P<oa;P++)G.__webglMorphTargetInfluences[P]=
0}var S=!1;P=y.program;oa=P.uniforms;var ha=y.uniforms;P!==E&&(m.useProgram(P),E=P,S=!0);y.id!==R&&(R=y.id,S=!0);if(S||w!==da)m.uniformMatrix4fv(oa.projectionMatrix,!1,w._projectionMatrixArray),w!==da&&(da=w);if(S){A&&y.fog&&(ha.fogColor.value=A.color,A instanceof THREE.Fog?(ha.fogNear.value=A.near,ha.fogFar.value=A.far):A instanceof THREE.FogExp2&&(ha.fogDensity.value=A.density));if(y instanceof THREE.MeshPhongMaterial||y instanceof THREE.MeshLambertMaterial||y.lights){if(Xa){var na=0,sa=0,Da=0,
Ca=rb,Ma=Ca.directional.colors,Na=Ca.directional.positions,ra=Ca.point.colors,Pa=Ca.point.positions,ib=Ca.point.distances,bb=Ca.spot.colors,Sb=Ca.spot.positions,$b=Ca.spot.distances,Za=Ca.spot.directions,Tb=Ca.spot.angles,hc=Ca.spot.exponents,cc=0,ob=0,jb=0;A=0;for(S=D.length;A<S;A++){var O=D[A];if(!O.onlyShadow){var la=O.color;var ta=O.intensity;var xa=O.distance;if(O instanceof THREE.AmbientLight)K.gammaInput?(na+=la.r*la.r,sa+=la.g*la.g,Da+=la.b*la.b):(na+=la.r,sa+=la.g,Da+=la.b);else if(O instanceof
THREE.DirectionalLight)xa=3*cc,K.gammaInput?(Ma[xa]=la.r*la.r*ta*ta,Ma[xa+1]=la.g*la.g*ta*ta,Ma[xa+2]=la.b*la.b*ta*ta):(Ma[xa]=la.r*ta,Ma[xa+1]=la.g*ta,Ma[xa+2]=la.b*ta),cb.copy(O.matrixWorld.getPosition()),cb.subSelf(O.target.matrixWorld.getPosition()),cb.normalize(),Na[xa]=cb.x,Na[xa+1]=cb.y,Na[xa+2]=cb.z,cc+=1;else if(O instanceof THREE.PointLight){var Ea=3*ob;K.gammaInput?(ra[Ea]=la.r*la.r*ta*ta,ra[Ea+1]=la.g*la.g*ta*ta,ra[Ea+2]=la.b*la.b*ta*ta):(ra[Ea]=la.r*ta,ra[Ea+1]=la.g*ta,ra[Ea+2]=la.b*
ta);la=O.matrixWorld.getPosition();Pa[Ea]=la.x;Pa[Ea+1]=la.y;Pa[Ea+2]=la.z;ib[ob]=xa;ob+=1}else O instanceof THREE.SpotLight&&(Ea=3*jb,K.gammaInput?(bb[Ea]=la.r*la.r*ta*ta,bb[Ea+1]=la.g*la.g*ta*ta,bb[Ea+2]=la.b*la.b*ta*ta):(bb[Ea]=la.r*ta,bb[Ea+1]=la.g*ta,bb[Ea+2]=la.b*ta),la=O.matrixWorld.getPosition(),Sb[Ea]=la.x,Sb[Ea+1]=la.y,Sb[Ea+2]=la.z,$b[jb]=xa,cb.copy(la),cb.subSelf(O.target.matrixWorld.getPosition()),cb.normalize(),Za[Ea]=cb.x,Za[Ea+1]=cb.y,Za[Ea+2]=cb.z,Tb[jb]=Math.cos(O.angle),hc[jb]=
O.exponent,jb+=1)}}A=3*cc;for(S=Ma.length;A<S;A++)Ma[A]=0;A=3*ob;for(S=ra.length;A<S;A++)ra[A]=0;A=3*jb;for(S=bb.length;A<S;A++)bb[A]=0;Ca.directional.length=cc;Ca.point.length=ob;Ca.spot.length=jb;Ca.ambient[0]=na;Ca.ambient[1]=sa;Ca.ambient[2]=Da;Xa=!1}A=rb;ha.ambientLightColor.value=A.ambient;ha.directionalLightColor.value=A.directional.colors;ha.directionalLightDirection.value=A.directional.positions;ha.pointLightColor.value=A.point.colors;ha.pointLightPosition.value=A.point.positions;ha.pointLightDistance.value=
A.point.distances;ha.spotLightColor.value=A.spot.colors;ha.spotLightPosition.value=A.spot.positions;ha.spotLightDistance.value=A.spot.distances;ha.spotLightDirection.value=A.spot.directions;ha.spotLightAngle.value=A.spot.angles;ha.spotLightExponent.value=A.spot.exponents}if(y instanceof THREE.MeshBasicMaterial||y instanceof THREE.MeshLambertMaterial||y instanceof THREE.MeshPhongMaterial)ha.opacity.value=y.opacity,K.gammaInput?ha.diffuse.value.copyGammaToLinear(y.color):ha.diffuse.value=y.color,(ha.map.texture=
y.map)&&ha.offsetRepeat.value.set(y.map.offset.x,y.map.offset.y,y.map.repeat.x,y.map.repeat.y),ha.lightMap.texture=y.lightMap,ha.envMap.texture=y.envMap,ha.flipEnvMap.value=y.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,ha.reflectivity.value=y.reflectivity,ha.refractionRatio.value=y.refractionRatio,ha.combine.value=y.combine,ha.useRefract.value=y.envMap&&y.envMap.mapping instanceof THREE.CubeRefractionMapping;y instanceof THREE.LineBasicMaterial?(ha.diffuse.value=y.color,ha.opacity.value=y.opacity):
y instanceof THREE.ParticleBasicMaterial?(ha.psColor.value=y.color,ha.opacity.value=y.opacity,ha.size.value=y.size,ha.scale.value=B.height/2,ha.map.texture=y.map):y instanceof THREE.MeshPhongMaterial?(ha.shininess.value=y.shininess,K.gammaInput?(ha.ambient.value.copyGammaToLinear(y.ambient),ha.emissive.value.copyGammaToLinear(y.emissive),ha.specular.value.copyGammaToLinear(y.specular)):(ha.ambient.value=y.ambient,ha.emissive.value=y.emissive,ha.specular.value=y.specular),y.wrapAround&&ha.wrapRGB.value.copy(y.wrapRGB)):
y instanceof THREE.MeshLambertMaterial?(K.gammaInput?(ha.ambient.value.copyGammaToLinear(y.ambient),ha.emissive.value.copyGammaToLinear(y.emissive)):(ha.ambient.value=y.ambient,ha.emissive.value=y.emissive),y.wrapAround&&ha.wrapRGB.value.copy(y.wrapRGB)):y instanceof THREE.MeshDepthMaterial?(ha.mNear.value=w.near,ha.mFar.value=w.far,ha.opacity.value=y.opacity):y instanceof THREE.MeshNormalMaterial&&(ha.opacity.value=y.opacity);if(G.receiveShadow&&!y._shadowPass&&ha.shadowMatrix)for(S=A=0,O=D.length;S<
O;S++)na=D[S],na.castShadow&&(na instanceof THREE.SpotLight||na instanceof THREE.DirectionalLight&&!na.shadowCascade)&&(ha.shadowMap.texture[A]=na.shadowMap,ha.shadowMapSize.value[A]=na.shadowMapSize,ha.shadowMatrix.value[A]=na.shadowMatrix,ha.shadowDarkness.value[A]=na.shadowDarkness,ha.shadowBias.value[A]=na.shadowBias,A++);D=y.uniformsList;ha=0;for(A=D.length;ha<A;ha++)if(na=P.uniforms[D[ha][1]])switch(S=D[ha][0],sa=S.type,O=S.value,sa){case "i":m.uniform1i(na,O);break;case "f":m.uniform1f(na,
O);break;case "v2":m.uniform2f(na,O.x,O.y);break;case "v3":m.uniform3f(na,O.x,O.y,O.z);break;case "v4":m.uniform4f(na,O.x,O.y,O.z,O.w);break;case "c":m.uniform3f(na,O.r,O.g,O.b);break;case "fv1":m.uniform1fv(na,O);break;case "fv":m.uniform3fv(na,O);break;case "v2v":S._array||(S._array=new Float32Array(2*O.length));sa=0;for(Da=O.length;sa<Da;sa++)Ca=2*sa,S._array[Ca]=O[sa].x,S._array[Ca+1]=O[sa].y;m.uniform2fv(na,S._array);break;case "v3v":S._array||(S._array=new Float32Array(3*O.length));sa=0;for(Da=
O.length;sa<Da;sa++)Ca=3*sa,S._array[Ca]=O[sa].x,S._array[Ca+1]=O[sa].y,S._array[Ca+2]=O[sa].z;m.uniform3fv(na,S._array);break;case "v4v":S._array||(S._array=new Float32Array(4*O.length));sa=0;for(Da=O.length;sa<Da;sa++)Ca=4*sa,S._array[Ca]=O[sa].x,S._array[Ca+1]=O[sa].y,S._array[Ca+2]=O[sa].z,S._array[Ca+3]=O[sa].w;m.uniform4fv(na,S._array);break;case "m4":S._array||(S._array=new Float32Array(16));O.flattenToArray(S._array);m.uniformMatrix4fv(na,!1,S._array);break;case "m4v":S._array||(S._array=
new Float32Array(16*O.length));sa=0;for(Da=O.length;sa<Da;sa++)O[sa].flattenToArrayOffset(S._array,16*sa);m.uniformMatrix4fv(na,!1,S._array);break;case "t":m.uniform1i(na,O);na=S.texture;if(!na)continue;if(na.image instanceof Array&&6===na.image.length){if(S=na,6===S.image.length)if(S.needsUpdate){S.image.__webglTextureCube||(S.image.__webglTextureCube=m.createTexture());m.activeTexture(m.TEXTURE0+O);m.bindTexture(m.TEXTURE_CUBE_MAP,S.image.__webglTextureCube);O=[];for(na=0;6>na;na++)sa=O,Da=na,K.autoScaleCubemaps?
(Ca=S.image[na],Na=Zb,Ca.width<=Na&&Ca.height<=Na||(ra=Math.max(Ca.width,Ca.height),Ma=Math.floor(Ca.width*Na/ra),Na=Math.floor(Ca.height*Na/ra),ra=document.createElement("canvas"),ra.width=Ma,ra.height=Na,ra.getContext("2d").drawImage(Ca,0,0,Ca.width,Ca.height,0,0,Ma,Na),Ca=ra)):Ca=S.image[na],sa[Da]=Ca;na=O[0];sa=0===(na.width&na.width-1)&&0===(na.height&na.height-1);Da=H(S.format);Ca=H(S.type);Q(m.TEXTURE_CUBE_MAP,S,sa);for(na=0;6>na;na++)m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+na,0,Da,Da,Ca,
O[na]);S.generateMipmaps&&sa&&m.generateMipmap(m.TEXTURE_CUBE_MAP);S.needsUpdate=!1;if(S.onUpdate)S.onUpdate()}else m.activeTexture(m.TEXTURE0+O),m.bindTexture(m.TEXTURE_CUBE_MAP,S.image.__webglTextureCube)}else na instanceof THREE.WebGLRenderTargetCube?(S=na,m.activeTexture(m.TEXTURE0+O),m.bindTexture(m.TEXTURE_CUBE_MAP,S.__webglTexture)):K.setTexture(na,O);break;case "tv":if(!S._array)for(S._array=[],sa=0,Da=S.texture.length;sa<Da;sa++)S._array[sa]=O+sa;m.uniform1iv(na,S._array);sa=0;for(Da=S.texture.length;sa<
Da;sa++)(na=S.texture[sa])&&K.setTexture(na,S._array[sa])}(y instanceof THREE.ShaderMaterial||y instanceof THREE.MeshPhongMaterial||y.envMap)&&null!==oa.cameraPosition&&(D=w.matrixWorld.getPosition(),m.uniform3f(oa.cameraPosition,D.x,D.y,D.z));(y instanceof THREE.MeshPhongMaterial||y instanceof THREE.MeshLambertMaterial||y instanceof THREE.ShaderMaterial||y.skinning)&&null!==oa.viewMatrix&&m.uniformMatrix4fv(oa.viewMatrix,!1,w._viewMatrixArray);y.skinning&&m.uniformMatrix4fv(oa.boneGlobalMatrices,
!1,G.boneMatrices)}m.uniformMatrix4fv(oa.modelViewMatrix,!1,G._modelViewMatrix.elements);oa.normalMatrix&&m.uniformMatrix3fv(oa.normalMatrix,!1,G._normalMatrix.elements);null!==oa.objectMatrix&&m.uniformMatrix4fv(oa.objectMatrix,!1,G.matrixWorld.elements);return P}function x(w,D){w._modelViewMatrix.multiply(D.matrixWorldInverse,w.matrixWorld);w._normalMatrix.getInverse(w._modelViewMatrix);w._normalMatrix.transpose()}function z(w,D,A){Sa!==w&&(w?m.enable(m.POLYGON_OFFSET_FILL):m.disable(m.POLYGON_OFFSET_FILL),
Sa=w);!w||Oa===D&&hb===A||(m.polygonOffset(D,A),Oa=D,hb=A)}function C(w,D){var A;"fragment"===w?A=m.createShader(m.FRAGMENT_SHADER):"vertex"===w&&(A=m.createShader(m.VERTEX_SHADER));m.shaderSource(A,D);m.compileShader(A);return m.getShaderParameter(A,m.COMPILE_STATUS)?A:(console.error(m.getShaderInfoLog(A)),console.error(D),null)}function Q(w,D,A){A?(m.texParameteri(w,m.TEXTURE_WRAP_S,H(D.wrapS)),m.texParameteri(w,m.TEXTURE_WRAP_T,H(D.wrapT)),m.texParameteri(w,m.TEXTURE_MAG_FILTER,H(D.magFilter)),
m.texParameteri(w,m.TEXTURE_MIN_FILTER,H(D.minFilter))):(m.texParameteri(w,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(w,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(w,m.TEXTURE_MAG_FILTER,W(D.magFilter)),m.texParameteri(w,m.TEXTURE_MIN_FILTER,W(D.minFilter)))}function F(w,D){m.bindRenderbuffer(m.RENDERBUFFER,w);D.depthBuffer&&!D.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_COMPONENT16,D.width,D.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,
w)):D.depthBuffer&&D.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,D.width,D.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,w)):m.renderbufferStorage(m.RENDERBUFFER,m.RGBA4,D.width,D.height)}function W(w){switch(w){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return m.NEAREST;default:return m.LINEAR}}function H(w){switch(w){case THREE.RepeatWrapping:return m.REPEAT;case THREE.ClampToEdgeWrapping:return m.CLAMP_TO_EDGE;
case THREE.MirroredRepeatWrapping:return m.MIRRORED_REPEAT;case THREE.NearestFilter:return m.NEAREST;case THREE.NearestMipMapNearestFilter:return m.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return m.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return m.LINEAR;case THREE.LinearMipMapNearestFilter:return m.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return m.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return m.BYTE;case THREE.UnsignedByteType:return m.UNSIGNED_BYTE;case THREE.ShortType:return m.SHORT;
case THREE.UnsignedShortType:return m.UNSIGNED_SHORT;case THREE.IntType:return m.INT;case THREE.UnsignedIntType:return m.UNSIGNED_INT;case THREE.FloatType:return m.FLOAT;case THREE.AlphaFormat:return m.ALPHA;case THREE.RGBFormat:return m.RGB;case THREE.RGBAFormat:return m.RGBA;case THREE.LuminanceFormat:return m.LUMINANCE;case THREE.LuminanceAlphaFormat:return m.LUMINANCE_ALPHA;case THREE.AddEquation:return m.FUNC_ADD;case THREE.SubtractEquation:return m.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return m.FUNC_REVERSE_SUBTRACT;
case THREE.ZeroFactor:return m.ZERO;case THREE.OneFactor:return m.ONE;case THREE.SrcColorFactor:return m.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return m.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return m.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return m.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return m.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return m.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return m.DST_COLOR;case THREE.OneMinusDstColorFactor:return m.ONE_MINUS_DST_COLOR;
case THREE.SrcAlphaSaturateFactor:return m.SRC_ALPHA_SATURATE}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var B=void 0!==a.canvas?a.canvas:document.createElement("canvas"),X=void 0!==a.precision?a.precision:"highp",M=void 0!==a.alpha?a.alpha:!0,N=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,T=void 0!==a.antialias?a.antialias:!1,Z=void 0!==a.stencil?a.stencil:!0,Y=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,I=void 0!==a.clearColor?new THREE.Color(a.clearColor):
new THREE.Color(0),pa=void 0!==a.clearAlpha?a.clearAlpha:0,V=void 0!==a.maxLights?a.maxLights:4;this.domElement=B;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=
8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var K=this,ca=[],E=null,ja=null,R=-1,J=null,da=null,va=0,ya=-1,Aa=-1,ua=-1,ea=-1,ia=-1,ka=-1,wa=-1,La=-1,Sa=null,Oa=null,hb=null,kb=null,Lb=0,Bb=0,Xb=0,Yb=0,za=0,Ga=0,fa=new THREE.Frustum,Ha=new THREE.Matrix4,Ra=new THREE.Matrix4,Qa=new THREE.Vector4,cb=new THREE.Vector3,Xa=!0,rb={ambient:[0,0,0],
directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};var m=function(){var w;try{if(!(w=B.getContext("experimental-webgl",{alpha:M,premultipliedAlpha:N,antialias:T,stencil:Z,preserveDrawingBuffer:Y})))throw"Error creating WebGL context.";}catch(D){console.error(D)}w.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported.");
return w}();m.clearColor(0,0,0,1);m.clearDepth(1);m.clearStencil(0);m.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);m.enable(m.CULL_FACE);m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);m.clearColor(I.r,I.g,I.b,pa);this.context=m;var Va=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS);m.getParameter(m.MAX_TEXTURE_SIZE);var Zb=m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return m};this.supportsVertexTextures=
function(){return 0<Va};this.setSize=function(w,D){B.width=w;B.height=D;this.setViewport(0,0,B.width,B.height)};this.setViewport=function(w,D,A,y){Lb=w;Bb=D;Xb=A;Yb=y;m.viewport(Lb,Bb,Xb,Yb)};this.setScissor=function(w,D,A,y){m.scissor(w,D,A,y)};this.enableScissorTest=function(w){w?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.setClearColorHex=function(w,D){I.setHex(w);pa=D;m.clearColor(I.r,I.g,I.b,pa)};this.setClearColor=function(w,D){I.copy(w);pa=D;m.clearColor(I.r,I.g,I.b,pa)};this.getClearColor=
function(){return I};this.getClearAlpha=function(){return pa};this.clear=function(w,D,A){var y=0;if(void 0===w||w)y|=m.COLOR_BUFFER_BIT;if(void 0===D||D)y|=m.DEPTH_BUFFER_BIT;if(void 0===A||A)y|=m.STENCIL_BUFFER_BIT;m.clear(y)};this.clearTarget=function(w,D,A,y){this.setRenderTarget(w);this.clear(D,A,y)};this.addPostPlugin=function(w){w.init(this);this.renderPluginsPost.push(w)};this.addPrePlugin=function(w){w.init(this);this.renderPluginsPre.push(w)};this.deallocateObject=function(w){if(w.__webglInit)if(w.__webglInit=
!1,delete w._modelViewMatrix,delete w._normalMatrix,delete w._normalMatrixArray,delete w._modelViewMatrixArray,delete w._objectMatrixArray,w instanceof THREE.Mesh)for(var D in w.geometry.geometryGroups){var A=w.geometry.geometryGroups[D];m.deleteBuffer(A.__webglVertexBuffer);m.deleteBuffer(A.__webglNormalBuffer);m.deleteBuffer(A.__webglTangentBuffer);m.deleteBuffer(A.__webglColorBuffer);m.deleteBuffer(A.__webglUVBuffer);m.deleteBuffer(A.__webglUV2Buffer);m.deleteBuffer(A.__webglSkinVertexABuffer);
m.deleteBuffer(A.__webglSkinVertexBBuffer);m.deleteBuffer(A.__webglSkinIndicesBuffer);m.deleteBuffer(A.__webglSkinWeightsBuffer);m.deleteBuffer(A.__webglFaceBuffer);m.deleteBuffer(A.__webglLineBuffer);var y;if(A.numMorphTargets){var G=0;for(y=A.numMorphTargets;G<y;G++)m.deleteBuffer(A.__webglMorphTargetsBuffers[G])}if(A.numMorphNormals)for(G=0,y=A.numMorphNormals;G<y;G++)m.deleteBuffer(A.__webglMorphNormalsBuffers[G]);if(A.__webglCustomAttributesList)for(G in G=void 0,A.__webglCustomAttributesList)m.deleteBuffer(A.__webglCustomAttributesList[G].buffer);
K.info.memory.geometries--}else w instanceof THREE.Ribbon?(w=w.geometry,m.deleteBuffer(w.__webglVertexBuffer),m.deleteBuffer(w.__webglColorBuffer),K.info.memory.geometries--):w instanceof THREE.Line?(w=w.geometry,m.deleteBuffer(w.__webglVertexBuffer),m.deleteBuffer(w.__webglColorBuffer),K.info.memory.geometries--):w instanceof THREE.ParticleSystem&&(w=w.geometry,m.deleteBuffer(w.__webglVertexBuffer),m.deleteBuffer(w.__webglColorBuffer),K.info.memory.geometries--)};this.deallocateTexture=function(w){w.__webglInit&&
(w.__webglInit=!1,m.deleteTexture(w.__webglTexture),K.info.memory.textures--)};this.deallocateRenderTarget=function(w){if(w&&w.__webglTexture)if(m.deleteTexture(w.__webglTexture),w instanceof THREE.WebGLRenderTargetCube)for(var D=0;6>D;D++)m.deleteFramebuffer(w.__webglFramebuffer[D]),m.deleteRenderbuffer(w.__webglRenderbuffer[D]);else m.deleteFramebuffer(w.__webglFramebuffer),m.deleteRenderbuffer(w.__webglRenderbuffer)};this.updateShadowMap=function(w,D){E=null;R=J=La=wa=ua=-1;Xa=!0;Aa=ya=-1;this.shadowMapPlugin.update(w,
D)};this.renderBufferImmediate=function(w,D,A){w.__webglVertexBuffer||(w.__webglVertexBuffer=m.createBuffer());w.__webglNormalBuffer||(w.__webglNormalBuffer=m.createBuffer());w.hasPos&&(m.bindBuffer(m.ARRAY_BUFFER,w.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,w.positionArray,m.DYNAMIC_DRAW),m.enableVertexAttribArray(D.attributes.position),m.vertexAttribPointer(D.attributes.position,3,m.FLOAT,!1,0,0));if(w.hasNormal){m.bindBuffer(m.ARRAY_BUFFER,w.__webglNormalBuffer);if(A===THREE.FlatShading){var y,
G=3*w.count;for(y=0;y<G;y+=9){A=w.normalArray;var P=A[y];var oa=A[y+1];var S=A[y+2];var ha=A[y+3];var na=A[y+4];var sa=A[y+5];var Da=A[y+6];var Ca=A[y+7];var Ma=A[y+8];P=(P+ha+Da)/3;oa=(oa+na+Ca)/3;S=(S+sa+Ma)/3;A[y]=P;A[y+1]=oa;A[y+2]=S;A[y+3]=P;A[y+4]=oa;A[y+5]=S;A[y+6]=P;A[y+7]=oa;A[y+8]=S}}m.bufferData(m.ARRAY_BUFFER,w.normalArray,m.DYNAMIC_DRAW);m.enableVertexAttribArray(D.attributes.normal);m.vertexAttribPointer(D.attributes.normal,3,m.FLOAT,!1,0,0)}m.drawArrays(m.TRIANGLES,0,w.count);w.count=
0};this.renderBufferDirect=function(w,D,A,y,G,P){if(!1!==y.visible&&(A=u(w,D,A,y,P),w=A.attributes,D=!1,y=16777215*G.id+2*A.id+(y.wireframe?1:0),y!==J&&(J=y,D=!0),P instanceof THREE.Mesh))for(P=G.offsets,y=0,A=P.length;y<A;++y)D&&(m.bindBuffer(m.ARRAY_BUFFER,G.vertexPositionBuffer),m.vertexAttribPointer(w.position,G.vertexPositionBuffer.itemSize,m.FLOAT,!1,0,12*P[y].index),0<=w.normal&&G.vertexNormalBuffer&&(m.bindBuffer(m.ARRAY_BUFFER,G.vertexNormalBuffer),m.vertexAttribPointer(w.normal,G.vertexNormalBuffer.itemSize,
m.FLOAT,!1,0,12*P[y].index)),0<=w.uv&&G.vertexUvBuffer&&(G.vertexUvBuffer?(m.bindBuffer(m.ARRAY_BUFFER,G.vertexUvBuffer),m.vertexAttribPointer(w.uv,G.vertexUvBuffer.itemSize,m.FLOAT,!1,0,8*P[y].index),m.enableVertexAttribArray(w.uv)):m.disableVertexAttribArray(w.uv)),0<=w.color&&G.vertexColorBuffer&&(m.bindBuffer(m.ARRAY_BUFFER,G.vertexColorBuffer),m.vertexAttribPointer(w.color,G.vertexColorBuffer.itemSize,m.FLOAT,!1,0,16*P[y].index)),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,G.vertexIndexBuffer)),m.drawElements(m.TRIANGLES,
P[y].count,m.UNSIGNED_SHORT,2*P[y].start),K.info.render.calls++,K.info.render.vertices+=P[y].count,K.info.render.faces+=P[y].count/3};this.renderBuffer=function(w,D,A,y,G,P){if(!1!==y.visible){var oa;A=u(w,D,A,y,P);D=A.attributes;w=!1;A=16777215*G.id+2*A.id+(y.wireframe?1:0);A!==J&&(J=A,w=!0);if(!y.morphTargets&&0<=D.position)w&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglVertexBuffer),m.vertexAttribPointer(D.position,3,m.FLOAT,!1,0,0));else if(P.morphTargetBase){A=y.program.attributes;-1!==P.morphTargetBase?
(m.bindBuffer(m.ARRAY_BUFFER,G.__webglMorphTargetsBuffers[P.morphTargetBase]),m.vertexAttribPointer(A.position,3,m.FLOAT,!1,0,0)):0<=A.position&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglVertexBuffer),m.vertexAttribPointer(A.position,3,m.FLOAT,!1,0,0));if(P.morphTargetForcedOrder.length){var S=0;var ha=P.morphTargetForcedOrder;for(oa=P.morphTargetInfluences;S<y.numSupportedMorphTargets&&S<ha.length;)m.bindBuffer(m.ARRAY_BUFFER,G.__webglMorphTargetsBuffers[ha[S]]),m.vertexAttribPointer(A["morphTarget"+
S],3,m.FLOAT,!1,0,0),y.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglMorphNormalsBuffers[ha[S]]),m.vertexAttribPointer(A["morphNormal"+S],3,m.FLOAT,!1,0,0)),P.__webglMorphTargetInfluences[S]=oa[ha[S]],S++}else{ha=[];var na=-1,sa=0;oa=P.morphTargetInfluences;var Da,Ca=oa.length;S=0;for(-1!==P.morphTargetBase&&(ha[P.morphTargetBase]=!0);S<y.numSupportedMorphTargets;){for(Da=0;Da<Ca;Da++)!ha[Da]&&oa[Da]>na&&(sa=Da,na=oa[sa]);m.bindBuffer(m.ARRAY_BUFFER,G.__webglMorphTargetsBuffers[sa]);m.vertexAttribPointer(A["morphTarget"+
S],3,m.FLOAT,!1,0,0);y.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglMorphNormalsBuffers[sa]),m.vertexAttribPointer(A["morphNormal"+S],3,m.FLOAT,!1,0,0));P.__webglMorphTargetInfluences[S]=na;ha[sa]=1;na=-1;S++}}null!==y.program.uniforms.morphTargetInfluences&&m.uniform1fv(y.program.uniforms.morphTargetInfluences,P.__webglMorphTargetInfluences)}if(w){if(G.__webglCustomAttributesList)for(S=0,oa=G.__webglCustomAttributesList.length;S<oa;S++)A=G.__webglCustomAttributesList[S],0<=D[A.buffer.belongsToAttribute]&&
(m.bindBuffer(m.ARRAY_BUFFER,A.buffer),m.vertexAttribPointer(D[A.buffer.belongsToAttribute],A.size,m.FLOAT,!1,0,0));0<=D.color&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglColorBuffer),m.vertexAttribPointer(D.color,3,m.FLOAT,!1,0,0));0<=D.normal&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglNormalBuffer),m.vertexAttribPointer(D.normal,3,m.FLOAT,!1,0,0));0<=D.tangent&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglTangentBuffer),m.vertexAttribPointer(D.tangent,4,m.FLOAT,!1,0,0));0<=D.uv&&(G.__webglUVBuffer?(m.bindBuffer(m.ARRAY_BUFFER,
G.__webglUVBuffer),m.vertexAttribPointer(D.uv,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(D.uv)):m.disableVertexAttribArray(D.uv));0<=D.uv2&&(G.__webglUV2Buffer?(m.bindBuffer(m.ARRAY_BUFFER,G.__webglUV2Buffer),m.vertexAttribPointer(D.uv2,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(D.uv2)):m.disableVertexAttribArray(D.uv2));y.skinning&&0<=D.skinVertexA&&0<=D.skinVertexB&&0<=D.skinIndex&&0<=D.skinWeight&&(m.bindBuffer(m.ARRAY_BUFFER,G.__webglSkinVertexABuffer),m.vertexAttribPointer(D.skinVertexA,4,
m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,G.__webglSkinVertexBBuffer),m.vertexAttribPointer(D.skinVertexB,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,G.__webglSkinIndicesBuffer),m.vertexAttribPointer(D.skinIndex,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,G.__webglSkinWeightsBuffer),m.vertexAttribPointer(D.skinWeight,4,m.FLOAT,!1,0,0))}P instanceof THREE.Mesh?(y.wireframe?(y=y.wireframeLinewidth,y!==kb&&(m.lineWidth(y),kb=y),w&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,G.__webglLineBuffer),m.drawElements(m.LINES,
G.__webglLineCount,m.UNSIGNED_SHORT,0)):(w&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,G.__webglFaceBuffer),m.drawElements(m.TRIANGLES,G.__webglFaceCount,m.UNSIGNED_SHORT,0)),K.info.render.calls++,K.info.render.vertices+=G.__webglFaceCount,K.info.render.faces+=G.__webglFaceCount/3):P instanceof THREE.Line?(P=P.type===THREE.LineStrip?m.LINE_STRIP:m.LINES,y=y.linewidth,y!==kb&&(m.lineWidth(y),kb=y),m.drawArrays(P,0,G.__webglLineCount),K.info.render.calls++):P instanceof THREE.ParticleSystem?(m.drawArrays(m.POINTS,
0,G.__webglParticleCount),K.info.render.calls++,K.info.render.points+=G.__webglParticleCount):P instanceof THREE.Ribbon&&(m.drawArrays(m.TRIANGLE_STRIP,0,G.__webglVertexCount),K.info.render.calls++)}};this.render=function(w,D,A,y){var G,P=w.__lights,oa=w.fog;R=-1;Xa=!0;void 0===D.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),w.add(D));this.autoUpdateScene&&w.updateMatrixWorld();D._viewMatrixArray||(D._viewMatrixArray=new Float32Array(16));D._projectionMatrixArray||
(D._projectionMatrixArray=new Float32Array(16));D.matrixWorldInverse.getInverse(D.matrixWorld);D.matrixWorldInverse.flattenToArray(D._viewMatrixArray);D.projectionMatrix.flattenToArray(D._projectionMatrixArray);Ha.multiply(D.projectionMatrix,D.matrixWorldInverse);fa.setFromMatrix(Ha);this.autoUpdateObjects&&this.initWebGLObjects(w);l(this.renderPluginsPre,w,D);K.info.render.calls=0;K.info.render.vertices=0;K.info.render.faces=0;K.info.render.points=0;this.setRenderTarget(A);(this.autoClear||y)&&this.clear(this.autoClearColor,
this.autoClearDepth,this.autoClearStencil);var S=w.__webglObjects;y=0;for(G=S.length;y<G;y++){var ha=S[y];var na=ha.object;ha.render=!1;if(na.visible&&(!(na instanceof THREE.Mesh||na instanceof THREE.ParticleSystem)||!na.frustumCulled||fa.contains(na))){x(na,D);var sa=ha,Da=sa.object,Ca=sa.buffer;var Ma=Da.material;Ma instanceof THREE.MeshFaceMaterial?(Ma=Ca.materialIndex,0<=Ma&&(Ma=Da.geometry.materials[Ma],Ma.transparent?(sa.transparent=Ma,sa.opaque=null):(sa.opaque=Ma,sa.transparent=null))):Ma&&
(Ma.transparent?(sa.transparent=Ma,sa.opaque=null):(sa.opaque=Ma,sa.transparent=null));ha.render=!0;this.sortObjects&&(na.renderDepth?ha.z=na.renderDepth:(Qa.copy(na.matrixWorld.getPosition()),Ha.multiplyVector3(Qa),ha.z=Qa.z))}}this.sortObjects&&S.sort(g);S=w.__webglObjectsImmediate;y=0;for(G=S.length;y<G;y++)ha=S[y],na=ha.object,na.visible&&(x(na,D),na=ha.object.material,na.transparent?(ha.transparent=na,ha.opaque=null):(ha.opaque=na,ha.transparent=null));w.overrideMaterial?(y=w.overrideMaterial,
this.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),this.setDepthTest(y.depthTest),this.setDepthWrite(y.depthWrite),z(y.polygonOffset,y.polygonOffsetFactor,y.polygonOffsetUnits),h(w.__webglObjects,!1,"",D,P,oa,!0,y),n(w.__webglObjectsImmediate,"",D,P,oa,!1,y)):(this.setBlending(THREE.NormalBlending),h(w.__webglObjects,!0,"opaque",D,P,oa,!1),n(w.__webglObjectsImmediate,"opaque",D,P,oa,!1),h(w.__webglObjects,!1,"transparent",D,P,oa,!0),n(w.__webglObjectsImmediate,"transparent",D,P,oa,
!0));l(this.renderPluginsPost,w,D);A&&A.generateMipmaps&&A.minFilter!==THREE.NearestFilter&&A.minFilter!==THREE.LinearFilter&&(A instanceof THREE.WebGLRenderTargetCube?(m.bindTexture(m.TEXTURE_CUBE_MAP,A.__webglTexture),m.generateMipmap(m.TEXTURE_CUBE_MAP),m.bindTexture(m.TEXTURE_CUBE_MAP,null)):(m.bindTexture(m.TEXTURE_2D,A.__webglTexture),m.generateMipmap(m.TEXTURE_2D),m.bindTexture(m.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)};this.renderImmediateObject=function(w,D,A,y,G){var P=
u(w,D,A,y,G);J=-1;K.setObjectFaces(G);G.immediateRenderCallback?G.immediateRenderCallback(P,m,fa):G.render(function(oa){K.renderBufferImmediate(oa,P,y.shading)})};this.initWebGLObjects=function(w){w.__webglObjects||(w.__webglObjects=[],w.__webglObjectsImmediate=[],w.__webglSprites=[],w.__webglFlares=[]);for(;w.__objectsAdded.length;){var D=w.__objectsAdded[0],A=w,y=void 0,G=void 0,P=void 0;if(!D.__webglInit)if(D.__webglInit=!0,D._modelViewMatrix=new THREE.Matrix4,D._normalMatrix=new THREE.Matrix3,
D instanceof THREE.Mesh){if(G=D.geometry,G instanceof THREE.Geometry){if(void 0===G.geometryGroups){var oa=G,S=void 0,ha=void 0,na=void 0,sa=void 0,Da=void 0,Ca=void 0,Ma=void 0,Na={},ra=oa.morphTargets.length,Pa=oa.morphNormals.length;oa.geometryGroups={};S=0;for(ha=oa.faces.length;S<ha;S++)na=oa.faces[S],sa=na.materialIndex,Ca=void 0!==sa?sa:-1,void 0===Na[Ca]&&(Na[Ca]={hash:Ca,counter:0}),Ma=Na[Ca].hash+"_"+Na[Ca].counter,void 0===oa.geometryGroups[Ma]&&(oa.geometryGroups[Ma]={faces3:[],faces4:[],
materialIndex:sa,vertices:0,numMorphTargets:ra,numMorphNormals:Pa}),Da=na instanceof THREE.Face3?3:4,65535<oa.geometryGroups[Ma].vertices+Da&&(Na[Ca].counter+=1,Ma=Na[Ca].hash+"_"+Na[Ca].counter,void 0===oa.geometryGroups[Ma]&&(oa.geometryGroups[Ma]={faces3:[],faces4:[],materialIndex:sa,vertices:0,numMorphTargets:ra,numMorphNormals:Pa})),na instanceof THREE.Face3?oa.geometryGroups[Ma].faces3.push(S):oa.geometryGroups[Ma].faces4.push(S),oa.geometryGroups[Ma].vertices+=Da;oa.geometryGroupsList=[];var ib=
void 0;for(ib in oa.geometryGroups)oa.geometryGroups[ib].id=va++,oa.geometryGroupsList.push(oa.geometryGroups[ib])}for(y in G.geometryGroups)if(P=G.geometryGroups[y],!P.__webglVertexBuffer){var bb=P;bb.__webglVertexBuffer=m.createBuffer();bb.__webglNormalBuffer=m.createBuffer();bb.__webglTangentBuffer=m.createBuffer();bb.__webglColorBuffer=m.createBuffer();bb.__webglUVBuffer=m.createBuffer();bb.__webglUV2Buffer=m.createBuffer();bb.__webglSkinVertexABuffer=m.createBuffer();bb.__webglSkinVertexBBuffer=
m.createBuffer();bb.__webglSkinIndicesBuffer=m.createBuffer();bb.__webglSkinWeightsBuffer=m.createBuffer();bb.__webglFaceBuffer=m.createBuffer();bb.__webglLineBuffer=m.createBuffer();var Sb=void 0,$b=void 0;if(bb.numMorphTargets)for(bb.__webglMorphTargetsBuffers=[],Sb=0,$b=bb.numMorphTargets;Sb<$b;Sb++)bb.__webglMorphTargetsBuffers.push(m.createBuffer());if(bb.numMorphNormals)for(bb.__webglMorphNormalsBuffers=[],Sb=0,$b=bb.numMorphNormals;Sb<$b;Sb++)bb.__webglMorphNormalsBuffers.push(m.createBuffer());
K.info.memory.geometries++;var Za=P,Tb=D,hc=Tb.geometry,cc=Za.faces3,ob=Za.faces4,jb=3*cc.length+4*ob.length,O=1*cc.length+2*ob.length,la=3*cc.length+4*ob.length,ta=c(Tb,Za),xa=e(ta),Ea=d(ta),lb=ta.vertexColors?ta.vertexColors:!1;Za.__vertexArray=new Float32Array(3*jb);Ea&&(Za.__normalArray=new Float32Array(3*jb));hc.hasTangents&&(Za.__tangentArray=new Float32Array(4*jb));lb&&(Za.__colorArray=new Float32Array(3*jb));if(xa){if(0<hc.faceUvs.length||0<hc.faceVertexUvs.length)Za.__uvArray=new Float32Array(2*
jb);if(1<hc.faceUvs.length||1<hc.faceVertexUvs.length)Za.__uv2Array=new Float32Array(2*jb)}Tb.geometry.skinWeights.length&&Tb.geometry.skinIndices.length&&(Za.__skinVertexAArray=new Float32Array(4*jb),Za.__skinVertexBArray=new Float32Array(4*jb),Za.__skinIndexArray=new Float32Array(4*jb),Za.__skinWeightArray=new Float32Array(4*jb));Za.__faceArray=new Uint16Array(3*O);Za.__lineArray=new Uint16Array(2*la);var Ba=void 0,ba=void 0;if(Za.numMorphTargets)for(Za.__morphTargetsArrays=[],Ba=0,ba=Za.numMorphTargets;Ba<
ba;Ba++)Za.__morphTargetsArrays.push(new Float32Array(3*jb));if(Za.numMorphNormals)for(Za.__morphNormalsArrays=[],Ba=0,ba=Za.numMorphNormals;Ba<ba;Ba++)Za.__morphNormalsArrays.push(new Float32Array(3*jb));Za.__webglFaceCount=3*O;Za.__webglLineCount=2*la;if(ta.attributes){void 0===Za.__webglCustomAttributesList&&(Za.__webglCustomAttributesList=[]);var db=void 0;for(db in ta.attributes){var Ya=ta.attributes[db],nb={},Mb;for(Mb in Ya)nb[Mb]=Ya[Mb];if(!nb.__webglInitialized||nb.createUniqueBuffers){nb.__webglInitialized=
!0;var $a=1;"v2"===nb.type?$a=2:"v3"===nb.type?$a=3:"v4"===nb.type?$a=4:"c"===nb.type&&($a=3);nb.size=$a;nb.array=new Float32Array(jb*$a);nb.buffer=m.createBuffer();nb.buffer.belongsToAttribute=db;Ya.needsUpdate=!0;nb.__original=Ya}Za.__webglCustomAttributesList.push(nb)}}Za.__inittedArrays=!0;G.verticesNeedUpdate=!0;G.morphTargetsNeedUpdate=!0;G.elementsNeedUpdate=!0;G.uvsNeedUpdate=!0;G.normalsNeedUpdate=!0;G.tangetsNeedUpdate=!0;G.colorsNeedUpdate=!0}}}else if(D instanceof THREE.Ribbon){if(G=D.geometry,
!G.__webglVertexBuffer){var yb=G;yb.__webglVertexBuffer=m.createBuffer();yb.__webglColorBuffer=m.createBuffer();K.info.memory.geometries++;var Jb=G,Oc=Jb.vertices.length;Jb.__vertexArray=new Float32Array(3*Oc);Jb.__colorArray=new Float32Array(3*Oc);Jb.__webglVertexCount=Oc;G.verticesNeedUpdate=!0;G.colorsNeedUpdate=!0}}else if(D instanceof THREE.Line){if(G=D.geometry,!G.__webglVertexBuffer){var Wc=G;Wc.__webglVertexBuffer=m.createBuffer();Wc.__webglColorBuffer=m.createBuffer();K.info.memory.geometries++;
var ed=G,de=D,Gd=ed.vertices.length;ed.__vertexArray=new Float32Array(3*Gd);ed.__colorArray=new Float32Array(3*Gd);ed.__webglLineCount=Gd;b(ed,de);G.verticesNeedUpdate=!0;G.colorsNeedUpdate=!0}}else if(D instanceof THREE.ParticleSystem&&(G=D.geometry,!G.__webglVertexBuffer)){var Sd=G;Sd.__webglVertexBuffer=m.createBuffer();Sd.__webglColorBuffer=m.createBuffer();K.info.geometries++;var Xc=G,ee=D,Hd=Xc.vertices.length;Xc.__vertexArray=new Float32Array(3*Hd);Xc.__colorArray=new Float32Array(3*Hd);Xc.__sortArray=
[];Xc.__webglParticleCount=Hd;b(Xc,ee);G.verticesNeedUpdate=!0;G.colorsNeedUpdate=!0}if(!D.__webglActive){if(D instanceof THREE.Mesh)if(G=D.geometry,G instanceof THREE.BufferGeometry)q(A.__webglObjects,G,D);else for(y in G.geometryGroups)P=G.geometryGroups[y],q(A.__webglObjects,P,D);else D instanceof THREE.Ribbon||D instanceof THREE.Line||D instanceof THREE.ParticleSystem?(G=D.geometry,q(A.__webglObjects,G,D)):D instanceof THREE.ImmediateRenderObject||D.immediateRenderCallback?A.__webglObjectsImmediate.push({object:D,
opaque:null,transparent:null}):D instanceof THREE.Sprite?A.__webglSprites.push(D):D instanceof THREE.LensFlare&&A.__webglFlares.push(D);D.__webglActive=!0}w.__objectsAdded.splice(0,1)}for(;w.__objectsRemoved.length;){var ac=w.__objectsRemoved[0],rd=w;ac instanceof THREE.Mesh||ac instanceof THREE.ParticleSystem||ac instanceof THREE.Ribbon||ac instanceof THREE.Line?p(rd.__webglObjects,ac):ac instanceof THREE.Sprite?t(rd.__webglSprites,ac):ac instanceof THREE.LensFlare?t(rd.__webglFlares,ac):(ac instanceof
THREE.ImmediateRenderObject||ac.immediateRenderCallback)&&p(rd.__webglObjectsImmediate,ac);ac.__webglActive=!1;w.__objectsRemoved.splice(0,1)}for(var Id=0,fe=w.__webglObjects.length;Id<fe;Id++){var ec=w.__webglObjects[Id].object,ab=ec.geometry,fd=void 0,Yc=void 0,Ob=void 0;if(ec instanceof THREE.Mesh)if(ab instanceof THREE.BufferGeometry)ab.verticesNeedUpdate=!1,ab.elementsNeedUpdate=!1,ab.uvsNeedUpdate=!1,ab.normalsNeedUpdate=!1,ab.colorsNeedUpdate=!1;else{for(var Jd=0,ge=ab.geometryGroupsList.length;Jd<
ge;Jd++)if(fd=ab.geometryGroupsList[Jd],Ob=c(ec,fd),Yc=Ob.attributes&&r(Ob),ab.verticesNeedUpdate||ab.morphTargetsNeedUpdate||ab.elementsNeedUpdate||ab.uvsNeedUpdate||ab.normalsNeedUpdate||ab.colorsNeedUpdate||ab.tangetsNeedUpdate||Yc){var Ta=fd,he=ec,Ub=m.DYNAMIC_DRAW,ie=!ab.dynamic,Pc=Ob;if(Ta.__inittedArrays){var Td=d(Pc),Kd=Pc.vertexColors?Pc.vertexColors:!1,Ud=e(Pc),sd=Td===THREE.SmoothShading,aa=void 0,Fa=void 0,dc=void 0,qa=void 0,Zc=void 0,Bc=void 0,fc=void 0,td=void 0,yc=void 0,$c=void 0,
ad=void 0,Ia=void 0,Ja=void 0,Ka=void 0,mb=void 0,ic=void 0,jc=void 0,kc=void 0,gd=void 0,lc=void 0,mc=void 0,nc=void 0,hd=void 0,oc=void 0,pc=void 0,qc=void 0,id=void 0,rc=void 0,sc=void 0,tc=void 0,jd=void 0,uc=void 0,vc=void 0,wc=void 0,kd=void 0,Cc=void 0,Dc=void 0,Ec=void 0,ud=void 0,Fc=void 0,Gc=void 0,Hc=void 0,vd=void 0,eb=void 0,Vd=void 0,Ic=void 0,bd=void 0,cd=void 0,Gb=void 0,Wd=void 0,Db=void 0,Eb=void 0,Jc=void 0,zc=void 0,zb=0,Fb=0,Qc=0,Rc=0,gc=0,Pb=0,pb=0,Qb=0,Cb=0,ma=0,Ua=0,U=0,Vb=
void 0,Hb=Ta.__vertexArray,ld=Ta.__uvArray,md=Ta.__uv2Array,bc=Ta.__normalArray,sb=Ta.__tangentArray,Ib=Ta.__colorArray,tb=Ta.__skinVertexAArray,ub=Ta.__skinVertexBArray,vb=Ta.__skinIndexArray,wb=Ta.__skinWeightArray,Ld=Ta.__morphTargetsArrays,Md=Ta.__morphNormalsArrays,Nd=Ta.__webglCustomAttributesList,L=void 0,xc=Ta.__faceArray,Wb=Ta.__lineArray,Nb=he.geometry,je=Nb.elementsNeedUpdate,Xd=Nb.uvsNeedUpdate,ke=Nb.normalsNeedUpdate,le=Nb.tangetsNeedUpdate,me=Nb.colorsNeedUpdate,ne=Nb.morphTargetsNeedUpdate,
Sc=Nb.vertices,fb=Ta.faces3,gb=Ta.faces4,xb=Nb.faces,Od=Nb.faceVertexUvs[0],Pd=Nb.faceVertexUvs[1],Tc=Nb.skinVerticesA,Uc=Nb.skinVerticesB,Vc=Nb.skinIndices,Kc=Nb.skinWeights,Lc=Nb.morphTargets,wd=Nb.morphNormals;if(Nb.verticesNeedUpdate){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],Ia=Sc[qa.a],Ja=Sc[qa.b],Ka=Sc[qa.c],Hb[Fb]=Ia.x,Hb[Fb+1]=Ia.y,Hb[Fb+2]=Ia.z,Hb[Fb+3]=Ja.x,Hb[Fb+4]=Ja.y,Hb[Fb+5]=Ja.z,Hb[Fb+6]=Ka.x,Hb[Fb+7]=Ka.y,Hb[Fb+8]=Ka.z,Fb+=9;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],Ia=
Sc[qa.a],Ja=Sc[qa.b],Ka=Sc[qa.c],mb=Sc[qa.d],Hb[Fb]=Ia.x,Hb[Fb+1]=Ia.y,Hb[Fb+2]=Ia.z,Hb[Fb+3]=Ja.x,Hb[Fb+4]=Ja.y,Hb[Fb+5]=Ja.z,Hb[Fb+6]=Ka.x,Hb[Fb+7]=Ka.y,Hb[Fb+8]=Ka.z,Hb[Fb+9]=mb.x,Hb[Fb+10]=mb.y,Hb[Fb+11]=mb.z,Fb+=12;m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Hb,Ub)}if(ne)for(Gb=0,Wd=Lc.length;Gb<Wd;Gb++){aa=Ua=0;for(Fa=fb.length;aa<Fa;aa++)Jc=fb[aa],qa=xb[Jc],Ia=Lc[Gb].vertices[qa.a],Ja=Lc[Gb].vertices[qa.b],Ka=Lc[Gb].vertices[qa.c],Db=Ld[Gb],Db[Ua]=Ia.x,Db[Ua+
1]=Ia.y,Db[Ua+2]=Ia.z,Db[Ua+3]=Ja.x,Db[Ua+4]=Ja.y,Db[Ua+5]=Ja.z,Db[Ua+6]=Ka.x,Db[Ua+7]=Ka.y,Db[Ua+8]=Ka.z,Pc.morphNormals&&(sd?(zc=wd[Gb].vertexNormals[Jc],lc=zc.a,mc=zc.b,nc=zc.c):nc=mc=lc=wd[Gb].faceNormals[Jc],Eb=Md[Gb],Eb[Ua]=lc.x,Eb[Ua+1]=lc.y,Eb[Ua+2]=lc.z,Eb[Ua+3]=mc.x,Eb[Ua+4]=mc.y,Eb[Ua+5]=mc.z,Eb[Ua+6]=nc.x,Eb[Ua+7]=nc.y,Eb[Ua+8]=nc.z),Ua+=9;aa=0;for(Fa=gb.length;aa<Fa;aa++)Jc=gb[aa],qa=xb[Jc],Ia=Lc[Gb].vertices[qa.a],Ja=Lc[Gb].vertices[qa.b],Ka=Lc[Gb].vertices[qa.c],mb=Lc[Gb].vertices[qa.d],
Db=Ld[Gb],Db[Ua]=Ia.x,Db[Ua+1]=Ia.y,Db[Ua+2]=Ia.z,Db[Ua+3]=Ja.x,Db[Ua+4]=Ja.y,Db[Ua+5]=Ja.z,Db[Ua+6]=Ka.x,Db[Ua+7]=Ka.y,Db[Ua+8]=Ka.z,Db[Ua+9]=mb.x,Db[Ua+10]=mb.y,Db[Ua+11]=mb.z,Pc.morphNormals&&(sd?(zc=wd[Gb].vertexNormals[Jc],lc=zc.a,mc=zc.b,nc=zc.c,hd=zc.d):hd=nc=mc=lc=wd[Gb].faceNormals[Jc],Eb=Md[Gb],Eb[Ua]=lc.x,Eb[Ua+1]=lc.y,Eb[Ua+2]=lc.z,Eb[Ua+3]=mc.x,Eb[Ua+4]=mc.y,Eb[Ua+5]=mc.z,Eb[Ua+6]=nc.x,Eb[Ua+7]=nc.y,Eb[Ua+8]=nc.z,Eb[Ua+9]=hd.x,Eb[Ua+10]=hd.y,Eb[Ua+11]=hd.z),Ua+=12;m.bindBuffer(m.ARRAY_BUFFER,
Ta.__webglMorphTargetsBuffers[Gb]);m.bufferData(m.ARRAY_BUFFER,Ld[Gb],Ub);Pc.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglMorphNormalsBuffers[Gb]),m.bufferData(m.ARRAY_BUFFER,Md[Gb],Ub))}if(Kc.length){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],rc=Kc[qa.a],sc=Kc[qa.b],tc=Kc[qa.c],wb[ma]=rc.x,wb[ma+1]=rc.y,wb[ma+2]=rc.z,wb[ma+3]=rc.w,wb[ma+4]=sc.x,wb[ma+5]=sc.y,wb[ma+6]=sc.z,wb[ma+7]=sc.w,wb[ma+8]=tc.x,wb[ma+9]=tc.y,wb[ma+10]=tc.z,wb[ma+11]=tc.w,uc=Vc[qa.a],vc=Vc[qa.b],wc=Vc[qa.c],vb[ma]=
uc.x,vb[ma+1]=uc.y,vb[ma+2]=uc.z,vb[ma+3]=uc.w,vb[ma+4]=vc.x,vb[ma+5]=vc.y,vb[ma+6]=vc.z,vb[ma+7]=vc.w,vb[ma+8]=wc.x,vb[ma+9]=wc.y,vb[ma+10]=wc.z,vb[ma+11]=wc.w,Cc=Tc[qa.a],Dc=Tc[qa.b],Ec=Tc[qa.c],tb[ma]=Cc.x,tb[ma+1]=Cc.y,tb[ma+2]=Cc.z,tb[ma+3]=1,tb[ma+4]=Dc.x,tb[ma+5]=Dc.y,tb[ma+6]=Dc.z,tb[ma+7]=1,tb[ma+8]=Ec.x,tb[ma+9]=Ec.y,tb[ma+10]=Ec.z,tb[ma+11]=1,Fc=Uc[qa.a],Gc=Uc[qa.b],Hc=Uc[qa.c],ub[ma]=Fc.x,ub[ma+1]=Fc.y,ub[ma+2]=Fc.z,ub[ma+3]=1,ub[ma+4]=Gc.x,ub[ma+5]=Gc.y,ub[ma+6]=Gc.z,ub[ma+7]=1,ub[ma+
8]=Hc.x,ub[ma+9]=Hc.y,ub[ma+10]=Hc.z,ub[ma+11]=1,ma+=12;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],rc=Kc[qa.a],sc=Kc[qa.b],tc=Kc[qa.c],jd=Kc[qa.d],wb[ma]=rc.x,wb[ma+1]=rc.y,wb[ma+2]=rc.z,wb[ma+3]=rc.w,wb[ma+4]=sc.x,wb[ma+5]=sc.y,wb[ma+6]=sc.z,wb[ma+7]=sc.w,wb[ma+8]=tc.x,wb[ma+9]=tc.y,wb[ma+10]=tc.z,wb[ma+11]=tc.w,wb[ma+12]=jd.x,wb[ma+13]=jd.y,wb[ma+14]=jd.z,wb[ma+15]=jd.w,uc=Vc[qa.a],vc=Vc[qa.b],wc=Vc[qa.c],kd=Vc[qa.d],vb[ma]=uc.x,vb[ma+1]=uc.y,vb[ma+2]=uc.z,vb[ma+3]=uc.w,vb[ma+4]=vc.x,vb[ma+
5]=vc.y,vb[ma+6]=vc.z,vb[ma+7]=vc.w,vb[ma+8]=wc.x,vb[ma+9]=wc.y,vb[ma+10]=wc.z,vb[ma+11]=wc.w,vb[ma+12]=kd.x,vb[ma+13]=kd.y,vb[ma+14]=kd.z,vb[ma+15]=kd.w,Cc=Tc[qa.a],Dc=Tc[qa.b],Ec=Tc[qa.c],ud=Tc[qa.d],tb[ma]=Cc.x,tb[ma+1]=Cc.y,tb[ma+2]=Cc.z,tb[ma+3]=1,tb[ma+4]=Dc.x,tb[ma+5]=Dc.y,tb[ma+6]=Dc.z,tb[ma+7]=1,tb[ma+8]=Ec.x,tb[ma+9]=Ec.y,tb[ma+10]=Ec.z,tb[ma+11]=1,tb[ma+12]=ud.x,tb[ma+13]=ud.y,tb[ma+14]=ud.z,tb[ma+15]=1,Fc=Uc[qa.a],Gc=Uc[qa.b],Hc=Uc[qa.c],vd=Uc[qa.d],ub[ma]=Fc.x,ub[ma+1]=Fc.y,ub[ma+2]=
Fc.z,ub[ma+3]=1,ub[ma+4]=Gc.x,ub[ma+5]=Gc.y,ub[ma+6]=Gc.z,ub[ma+7]=1,ub[ma+8]=Hc.x,ub[ma+9]=Hc.y,ub[ma+10]=Hc.z,ub[ma+11]=1,ub[ma+12]=vd.x,ub[ma+13]=vd.y,ub[ma+14]=vd.z,ub[ma+15]=1,ma+=16;0<ma&&(m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglSkinVertexABuffer),m.bufferData(m.ARRAY_BUFFER,tb,Ub),m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglSkinVertexBBuffer),m.bufferData(m.ARRAY_BUFFER,ub,Ub),m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglSkinIndicesBuffer),m.bufferData(m.ARRAY_BUFFER,vb,Ub),m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglSkinWeightsBuffer),
m.bufferData(m.ARRAY_BUFFER,wb,Ub))}if(me&&Kd){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],fc=qa.vertexColors,td=qa.color,3===fc.length&&Kd===THREE.VertexColors?(oc=fc[0],pc=fc[1],qc=fc[2]):qc=pc=oc=td,Ib[Cb]=oc.r,Ib[Cb+1]=oc.g,Ib[Cb+2]=oc.b,Ib[Cb+3]=pc.r,Ib[Cb+4]=pc.g,Ib[Cb+5]=pc.b,Ib[Cb+6]=qc.r,Ib[Cb+7]=qc.g,Ib[Cb+8]=qc.b,Cb+=9;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],fc=qa.vertexColors,td=qa.color,4===fc.length&&Kd===THREE.VertexColors?(oc=fc[0],pc=fc[1],qc=fc[2],id=fc[3]):id=qc=pc=oc=
td,Ib[Cb]=oc.r,Ib[Cb+1]=oc.g,Ib[Cb+2]=oc.b,Ib[Cb+3]=pc.r,Ib[Cb+4]=pc.g,Ib[Cb+5]=pc.b,Ib[Cb+6]=qc.r,Ib[Cb+7]=qc.g,Ib[Cb+8]=qc.b,Ib[Cb+9]=id.r,Ib[Cb+10]=id.g,Ib[Cb+11]=id.b,Cb+=12;0<Cb&&(m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,Ib,Ub))}if(le&&Nb.hasTangents){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],yc=qa.vertexTangents,ic=yc[0],jc=yc[1],kc=yc[2],sb[pb]=ic.x,sb[pb+1]=ic.y,sb[pb+2]=ic.z,sb[pb+3]=ic.w,sb[pb+4]=jc.x,sb[pb+5]=jc.y,sb[pb+6]=jc.z,sb[pb+7]=jc.w,sb[pb+
8]=kc.x,sb[pb+9]=kc.y,sb[pb+10]=kc.z,sb[pb+11]=kc.w,pb+=12;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],yc=qa.vertexTangents,ic=yc[0],jc=yc[1],kc=yc[2],gd=yc[3],sb[pb]=ic.x,sb[pb+1]=ic.y,sb[pb+2]=ic.z,sb[pb+3]=ic.w,sb[pb+4]=jc.x,sb[pb+5]=jc.y,sb[pb+6]=jc.z,sb[pb+7]=jc.w,sb[pb+8]=kc.x,sb[pb+9]=kc.y,sb[pb+10]=kc.z,sb[pb+11]=kc.w,sb[pb+12]=gd.x,sb[pb+13]=gd.y,sb[pb+14]=gd.z,sb[pb+15]=gd.w,pb+=16;m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,sb,Ub)}if(ke&&Td){aa=0;
for(Fa=fb.length;aa<Fa;aa++)if(qa=xb[fb[aa]],Zc=qa.vertexNormals,Bc=qa.normal,3===Zc.length&&sd)for(eb=0;3>eb;eb++)Ic=Zc[eb],bc[Pb]=Ic.x,bc[Pb+1]=Ic.y,bc[Pb+2]=Ic.z,Pb+=3;else for(eb=0;3>eb;eb++)bc[Pb]=Bc.x,bc[Pb+1]=Bc.y,bc[Pb+2]=Bc.z,Pb+=3;aa=0;for(Fa=gb.length;aa<Fa;aa++)if(qa=xb[gb[aa]],Zc=qa.vertexNormals,Bc=qa.normal,4===Zc.length&&sd)for(eb=0;4>eb;eb++)Ic=Zc[eb],bc[Pb]=Ic.x,bc[Pb+1]=Ic.y,bc[Pb+2]=Ic.z,Pb+=3;else for(eb=0;4>eb;eb++)bc[Pb]=Bc.x,bc[Pb+1]=Bc.y,bc[Pb+2]=Bc.z,Pb+=3;m.bindBuffer(m.ARRAY_BUFFER,
Ta.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,bc,Ub)}if(Xd&&Od&&Ud){aa=0;for(Fa=fb.length;aa<Fa;aa++)if(dc=fb[aa],qa=xb[dc],$c=Od[dc],void 0!==$c)for(eb=0;3>eb;eb++)bd=$c[eb],ld[Qc]=bd.u,ld[Qc+1]=bd.v,Qc+=2;aa=0;for(Fa=gb.length;aa<Fa;aa++)if(dc=gb[aa],qa=xb[dc],$c=Od[dc],void 0!==$c)for(eb=0;4>eb;eb++)bd=$c[eb],ld[Qc]=bd.u,ld[Qc+1]=bd.v,Qc+=2;0<Qc&&(m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglUVBuffer),m.bufferData(m.ARRAY_BUFFER,ld,Ub))}if(Xd&&Pd&&Ud){aa=0;for(Fa=fb.length;aa<Fa;aa++)if(dc=fb[aa],
qa=xb[dc],ad=Pd[dc],void 0!==ad)for(eb=0;3>eb;eb++)cd=ad[eb],md[Rc]=cd.u,md[Rc+1]=cd.v,Rc+=2;aa=0;for(Fa=gb.length;aa<Fa;aa++)if(dc=gb[aa],qa=xb[dc],ad=Pd[dc],void 0!==ad)for(eb=0;4>eb;eb++)cd=ad[eb],md[Rc]=cd.u,md[Rc+1]=cd.v,Rc+=2;0<Rc&&(m.bindBuffer(m.ARRAY_BUFFER,Ta.__webglUV2Buffer),m.bufferData(m.ARRAY_BUFFER,md,Ub))}if(je){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],xc[gc]=zb,xc[gc+1]=zb+1,xc[gc+2]=zb+2,gc+=3,Wb[Qb]=zb,Wb[Qb+1]=zb+1,Wb[Qb+2]=zb,Wb[Qb+3]=zb+2,Wb[Qb+4]=zb+1,Wb[Qb+5]=zb+2,Qb+=
6,zb+=3;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],xc[gc]=zb,xc[gc+1]=zb+1,xc[gc+2]=zb+3,xc[gc+3]=zb+1,xc[gc+4]=zb+2,xc[gc+5]=zb+3,gc+=6,Wb[Qb]=zb,Wb[Qb+1]=zb+1,Wb[Qb+2]=zb,Wb[Qb+3]=zb+3,Wb[Qb+4]=zb+1,Wb[Qb+5]=zb+2,Wb[Qb+6]=zb+2,Wb[Qb+7]=zb+3,Qb+=8,zb+=4;m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,Ta.__webglFaceBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,xc,Ub);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,Ta.__webglLineBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Wb,Ub)}if(Nd)for(eb=0,Vd=Nd.length;eb<Vd;eb++)if(L=
Nd[eb],L.__original.needsUpdate){U=0;if(1===L.size)if(void 0===L.boundTo||"vertices"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],L.array[U]=L.value[qa.a],L.array[U+1]=L.value[qa.b],L.array[U+2]=L.value[qa.c],U+=3;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],L.array[U]=L.value[qa.a],L.array[U+1]=L.value[qa.b],L.array[U+2]=L.value[qa.c],L.array[U+3]=L.value[qa.d],U+=4}else{if("faces"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)Vb=L.value[fb[aa]],L.array[U]=Vb,L.array[U+1]=Vb,L.array[U+
2]=Vb,U+=3;aa=0;for(Fa=gb.length;aa<Fa;aa++)Vb=L.value[gb[aa]],L.array[U]=Vb,L.array[U+1]=Vb,L.array[U+2]=Vb,L.array[U+3]=Vb,U+=4}}else if(2===L.size)if(void 0===L.boundTo||"vertices"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ja.x,L.array[U+3]=Ja.y,L.array[U+4]=Ka.x,L.array[U+5]=Ka.y,U+=6;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],
mb=L.value[qa.d],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ja.x,L.array[U+3]=Ja.y,L.array[U+4]=Ka.x,L.array[U+5]=Ka.y,L.array[U+6]=mb.x,L.array[U+7]=mb.y,U+=8}else{if("faces"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)Ka=Ja=Ia=Vb=L.value[fb[aa]],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ja.x,L.array[U+3]=Ja.y,L.array[U+4]=Ka.x,L.array[U+5]=Ka.y,U+=6;aa=0;for(Fa=gb.length;aa<Fa;aa++)mb=Ka=Ja=Ia=Vb=L.value[gb[aa]],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ja.x,L.array[U+3]=Ja.y,L.array[U+
4]=Ka.x,L.array[U+5]=Ka.y,L.array[U+6]=mb.x,L.array[U+7]=mb.y,U+=8}}else if(3===L.size){var Wa="c"===L.type?["r","g","b"]:["x","y","z"];if(void 0===L.boundTo||"vertices"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],L.array[U]=Ia[Wa[0]],L.array[U+1]=Ia[Wa[1]],L.array[U+2]=Ia[Wa[2]],L.array[U+3]=Ja[Wa[0]],L.array[U+4]=Ja[Wa[1]],L.array[U+5]=Ja[Wa[2]],L.array[U+6]=Ka[Wa[0]],L.array[U+7]=Ka[Wa[1]],L.array[U+8]=Ka[Wa[2]],U+=9;aa=0;for(Fa=
gb.length;aa<Fa;aa++)qa=xb[gb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],mb=L.value[qa.d],L.array[U]=Ia[Wa[0]],L.array[U+1]=Ia[Wa[1]],L.array[U+2]=Ia[Wa[2]],L.array[U+3]=Ja[Wa[0]],L.array[U+4]=Ja[Wa[1]],L.array[U+5]=Ja[Wa[2]],L.array[U+6]=Ka[Wa[0]],L.array[U+7]=Ka[Wa[1]],L.array[U+8]=Ka[Wa[2]],L.array[U+9]=mb[Wa[0]],L.array[U+10]=mb[Wa[1]],L.array[U+11]=mb[Wa[2]],U+=12}else if("faces"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)Ka=Ja=Ia=Vb=L.value[fb[aa]],L.array[U]=Ia[Wa[0]],L.array[U+
1]=Ia[Wa[1]],L.array[U+2]=Ia[Wa[2]],L.array[U+3]=Ja[Wa[0]],L.array[U+4]=Ja[Wa[1]],L.array[U+5]=Ja[Wa[2]],L.array[U+6]=Ka[Wa[0]],L.array[U+7]=Ka[Wa[1]],L.array[U+8]=Ka[Wa[2]],U+=9;aa=0;for(Fa=gb.length;aa<Fa;aa++)mb=Ka=Ja=Ia=Vb=L.value[gb[aa]],L.array[U]=Ia[Wa[0]],L.array[U+1]=Ia[Wa[1]],L.array[U+2]=Ia[Wa[2]],L.array[U+3]=Ja[Wa[0]],L.array[U+4]=Ja[Wa[1]],L.array[U+5]=Ja[Wa[2]],L.array[U+6]=Ka[Wa[0]],L.array[U+7]=Ka[Wa[1]],L.array[U+8]=Ka[Wa[2]],L.array[U+9]=mb[Wa[0]],L.array[U+10]=mb[Wa[1]],L.array[U+
11]=mb[Wa[2]],U+=12}}else if(4===L.size)if(void 0===L.boundTo||"vertices"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)qa=xb[fb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ia.z,L.array[U+3]=Ia.w,L.array[U+4]=Ja.x,L.array[U+5]=Ja.y,L.array[U+6]=Ja.z,L.array[U+7]=Ja.w,L.array[U+8]=Ka.x,L.array[U+9]=Ka.y,L.array[U+10]=Ka.z,L.array[U+11]=Ka.w,U+=12;aa=0;for(Fa=gb.length;aa<Fa;aa++)qa=xb[gb[aa]],Ia=L.value[qa.a],Ja=L.value[qa.b],Ka=L.value[qa.c],
mb=L.value[qa.d],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ia.z,L.array[U+3]=Ia.w,L.array[U+4]=Ja.x,L.array[U+5]=Ja.y,L.array[U+6]=Ja.z,L.array[U+7]=Ja.w,L.array[U+8]=Ka.x,L.array[U+9]=Ka.y,L.array[U+10]=Ka.z,L.array[U+11]=Ka.w,L.array[U+12]=mb.x,L.array[U+13]=mb.y,L.array[U+14]=mb.z,L.array[U+15]=mb.w,U+=16}else if("faces"===L.boundTo){aa=0;for(Fa=fb.length;aa<Fa;aa++)Ka=Ja=Ia=Vb=L.value[fb[aa]],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ia.z,L.array[U+3]=Ia.w,L.array[U+4]=Ja.x,L.array[U+
5]=Ja.y,L.array[U+6]=Ja.z,L.array[U+7]=Ja.w,L.array[U+8]=Ka.x,L.array[U+9]=Ka.y,L.array[U+10]=Ka.z,L.array[U+11]=Ka.w,U+=12;aa=0;for(Fa=gb.length;aa<Fa;aa++)mb=Ka=Ja=Ia=Vb=L.value[gb[aa]],L.array[U]=Ia.x,L.array[U+1]=Ia.y,L.array[U+2]=Ia.z,L.array[U+3]=Ia.w,L.array[U+4]=Ja.x,L.array[U+5]=Ja.y,L.array[U+6]=Ja.z,L.array[U+7]=Ja.w,L.array[U+8]=Ka.x,L.array[U+9]=Ka.y,L.array[U+10]=Ka.z,L.array[U+11]=Ka.w,L.array[U+12]=mb.x,L.array[U+13]=mb.y,L.array[U+14]=mb.z,L.array[U+15]=mb.w,U+=16}m.bindBuffer(m.ARRAY_BUFFER,
L.buffer);m.bufferData(m.ARRAY_BUFFER,L.array,Ub)}ie&&(delete Ta.__inittedArrays,delete Ta.__colorArray,delete Ta.__normalArray,delete Ta.__tangentArray,delete Ta.__uvArray,delete Ta.__uv2Array,delete Ta.__faceArray,delete Ta.__vertexArray,delete Ta.__lineArray,delete Ta.__skinVertexAArray,delete Ta.__skinVertexBArray,delete Ta.__skinIndexArray,delete Ta.__skinWeightArray)}}ab.verticesNeedUpdate=!1;ab.morphTargetsNeedUpdate=!1;ab.elementsNeedUpdate=!1;ab.uvsNeedUpdate=!1;ab.normalsNeedUpdate=!1;ab.colorsNeedUpdate=
!1;ab.tangetsNeedUpdate=!1;Ob.attributes&&v(Ob)}else if(ec instanceof THREE.Ribbon){if(ab.verticesNeedUpdate||ab.colorsNeedUpdate){var Mc=ab,Yd=m.DYNAMIC_DRAW,nd=void 0,od=void 0,xd=void 0,Nc=void 0,yd=void 0,Zd=Mc.vertices,$d=Mc.colors,oe=Zd.length,pe=$d.length,zd=Mc.__vertexArray,Ad=Mc.__colorArray,qe=Mc.colorsNeedUpdate;if(Mc.verticesNeedUpdate){for(nd=0;nd<oe;nd++)xd=Zd[nd],Nc=3*nd,zd[Nc]=xd.x,zd[Nc+1]=xd.y,zd[Nc+2]=xd.z;m.bindBuffer(m.ARRAY_BUFFER,Mc.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,
zd,Yd)}if(qe){for(od=0;od<pe;od++)yd=$d[od],Nc=3*od,Ad[Nc]=yd.r,Ad[Nc+1]=yd.g,Ad[Nc+2]=yd.b;m.bindBuffer(m.ARRAY_BUFFER,Mc.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,Ad,Yd)}}ab.verticesNeedUpdate=!1;ab.colorsNeedUpdate=!1}else if(ec instanceof THREE.Line){Ob=c(ec,fd);Yc=Ob.attributes&&r(Ob);if(ab.verticesNeedUpdate||ab.colorsNeedUpdate||Yc){var Ac=ab,Qd=m.DYNAMIC_DRAW,pd=void 0,qd=void 0,Bd=void 0,Ab=void 0,Cd=void 0,ae=Ac.vertices,be=Ac.colors,re=ae.length,se=be.length,Dd=Ac.__vertexArray,Ed=
Ac.__colorArray,te=Ac.colorsNeedUpdate,Rd=Ac.__webglCustomAttributesList,Fd=void 0,ce=void 0,Kb=void 0,dd=void 0,Rb=void 0,qb=void 0;if(Ac.verticesNeedUpdate){for(pd=0;pd<re;pd++)Bd=ae[pd],Ab=3*pd,Dd[Ab]=Bd.x,Dd[Ab+1]=Bd.y,Dd[Ab+2]=Bd.z;m.bindBuffer(m.ARRAY_BUFFER,Ac.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,Dd,Qd)}if(te){for(qd=0;qd<se;qd++)Cd=be[qd],Ab=3*qd,Ed[Ab]=Cd.r,Ed[Ab+1]=Cd.g,Ed[Ab+2]=Cd.b;m.bindBuffer(m.ARRAY_BUFFER,Ac.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,Ed,Qd)}if(Rd)for(Fd=
0,ce=Rd.length;Fd<ce;Fd++)if(qb=Rd[Fd],qb.needsUpdate&&(void 0===qb.boundTo||"vertices"===qb.boundTo)){Ab=0;dd=qb.value.length;if(1===qb.size)for(Kb=0;Kb<dd;Kb++)qb.array[Kb]=qb.value[Kb];else if(2===qb.size)for(Kb=0;Kb<dd;Kb++)Rb=qb.value[Kb],qb.array[Ab]=Rb.x,qb.array[Ab+1]=Rb.y,Ab+=2;else if(3===qb.size)if("c"===qb.type)for(Kb=0;Kb<dd;Kb++)Rb=qb.value[Kb],qb.array[Ab]=Rb.r,qb.array[Ab+1]=Rb.g,qb.array[Ab+2]=Rb.b,Ab+=3;else for(Kb=0;Kb<dd;Kb++)Rb=qb.value[Kb],qb.array[Ab]=Rb.x,qb.array[Ab+1]=Rb.y,
qb.array[Ab+2]=Rb.z,Ab+=3;else if(4===qb.size)for(Kb=0;Kb<dd;Kb++)Rb=qb.value[Kb],qb.array[Ab]=Rb.x,qb.array[Ab+1]=Rb.y,qb.array[Ab+2]=Rb.z,qb.array[Ab+3]=Rb.w,Ab+=4;m.bindBuffer(m.ARRAY_BUFFER,qb.buffer);m.bufferData(m.ARRAY_BUFFER,qb.array,Qd)}}ab.verticesNeedUpdate=!1;ab.colorsNeedUpdate=!1;Ob.attributes&&v(Ob)}else ec instanceof THREE.ParticleSystem&&(Ob=c(ec,fd),Yc=Ob.attributes&&r(Ob),(ab.verticesNeedUpdate||ab.colorsNeedUpdate||ec.sortParticles||Yc)&&f(ab,m.DYNAMIC_DRAW,ec),ab.verticesNeedUpdate=
!1,ab.colorsNeedUpdate=!1,Ob.attributes&&v(Ob))}};this.initMaterial=function(w,D,A,y){var G,P,oa;w instanceof THREE.MeshDepthMaterial?oa="depth":w instanceof THREE.MeshNormalMaterial?oa="normal":w instanceof THREE.MeshBasicMaterial?oa="basic":w instanceof THREE.MeshLambertMaterial?oa="lambert":w instanceof THREE.MeshPhongMaterial?oa="phong":w instanceof THREE.LineBasicMaterial?oa="basic":w instanceof THREE.ParticleBasicMaterial&&(oa="particle_basic");if(oa){var S=THREE.ShaderLib[oa];w.uniforms=THREE.UniformsUtils.clone(S.uniforms);
w.vertexShader=S.vertexShader;w.fragmentShader=S.fragmentShader}var ha,na,sa;var Da=na=sa=S=0;for(ha=D.length;Da<ha;Da++){var Ca=D[Da];Ca.onlyShadow||(Ca instanceof THREE.DirectionalLight&&na++,Ca instanceof THREE.PointLight&&sa++,Ca instanceof THREE.SpotLight&&S++)}sa+S+na<=V?(ha=na,Ca=sa,na=S):(ha=Math.ceil(V*na/(sa+na)),na=Ca=V-ha);var Ma=0;S=0;for(sa=D.length;S<sa;S++)Da=D[S],Da.castShadow&&(Da instanceof THREE.SpotLight&&Ma++,Da instanceof THREE.DirectionalLight&&!Da.shadowCascade&&Ma++);var Na=
50;void 0!==y&&y instanceof THREE.SkinnedMesh&&(Na=y.bones.length);a:{sa=w.fragmentShader;Da=w.vertexShader;S=w.uniforms;D=w.attributes;A={map:!!w.map,envMap:!!w.envMap,lightMap:!!w.lightMap,vertexColors:w.vertexColors,fog:A,useFog:w.fog,sizeAttenuation:w.sizeAttenuation,skinning:w.skinning,maxBones:Na,morphTargets:w.morphTargets,morphNormals:w.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:ha,maxPointLights:Ca,maxSpotLights:na,maxShadows:Ma,shadowMapEnabled:this.shadowMapEnabled&&
y.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:w.alphaTest,metal:w.metal,perPixel:w.perPixel,wrapAround:w.wrapAround,doubleSided:y&&y.doubleSided};y=[];oa?y.push(oa):(y.push(sa),y.push(Da));for(ra in A)y.push(ra),y.push(A[ra]);oa=y.join();var ra=0;for(y=ca.length;ra<y;ra++)if(ca[ra].code===oa){var Pa=ca[ra].program;break a}ra=m.createProgram();y=["precision "+X+" float;",0<Va?"#define VERTEX_TEXTURES":"",K.gammaInput?
"#define GAMMA_INPUT":"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+A.maxDirLights,"#define MAX_POINT_LIGHTS "+A.maxPointLights,"#define MAX_SPOT_LIGHTS "+A.maxSpotLights,"#define MAX_SHADOWS "+A.maxShadows,"#define MAX_BONES "+A.maxBones,A.map?"#define USE_MAP":"",A.envMap?"#define USE_ENVMAP":"",A.lightMap?"#define USE_LIGHTMAP":"",A.vertexColors?"#define USE_COLOR":"",A.skinning?"#define USE_SKINNING":"",A.morphTargets?
"#define USE_MORPHTARGETS":"",A.morphNormals?"#define USE_MORPHNORMALS":"",A.perPixel?"#define PHONG_PER_PIXEL":"",A.wrapAround?"#define WRAP_AROUND":"",A.doubleSided?"#define DOUBLE_SIDED":"",A.shadowMapEnabled?"#define USE_SHADOWMAP":"",A.shadowMapSoft?"#define SHADOWMAP_SOFT":"",A.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",A.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",A.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
ha=["precision "+X+" float;","#define MAX_DIR_LIGHTS "+A.maxDirLights,"#define MAX_POINT_LIGHTS "+A.maxPointLights,"#define MAX_SPOT_LIGHTS "+A.maxSpotLights,"#define MAX_SHADOWS "+A.maxShadows,A.alphaTest?"#define ALPHATEST "+A.alphaTest:"",K.gammaInput?"#define GAMMA_INPUT":"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",A.useFog&&A.fog?"#define USE_FOG":"",A.useFog&&A.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",A.map?"#define USE_MAP":
"",A.envMap?"#define USE_ENVMAP":"",A.lightMap?"#define USE_LIGHTMAP":"",A.vertexColors?"#define USE_COLOR":"",A.metal?"#define METAL":"",A.perPixel?"#define PHONG_PER_PIXEL":"",A.wrapAround?"#define WRAP_AROUND":"",A.doubleSided?"#define DOUBLE_SIDED":"",A.shadowMapEnabled?"#define USE_SHADOWMAP":"",A.shadowMapSoft?"#define SHADOWMAP_SOFT":"",A.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",A.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");
m.attachShader(ra,C("fragment",ha+sa));m.attachShader(ra,C("vertex",y+Da));m.linkProgram(ra);m.getProgramParameter(ra,m.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+m.getProgramParameter(ra,m.VALIDATE_STATUS)+", gl error ["+m.getError()+"]");ra.uniforms={};ra.attributes={};y="viewMatrix modelViewMatrix projectionMatrix normalMatrix objectMatrix cameraPosition boneGlobalMatrices morphTargetInfluences".split(" ");for(ib in S)y.push(ib);var ib=y;y=0;for(S=ib.length;y<
S;y++)sa=ib[y],ra.uniforms[sa]=m.getUniformLocation(ra,sa);y="position normal uv uv2 tangent color skinVertexA skinVertexB skinIndex skinWeight".split(" ");for(ib=0;ib<A.maxMorphTargets;ib++)y.push("morphTarget"+ib);for(ib=0;ib<A.maxMorphNormals;ib++)y.push("morphNormal"+ib);for(Pa in D)y.push(Pa);Pa=y;ib=0;for(D=Pa.length;ib<D;ib++)A=Pa[ib],ra.attributes[A]=m.getAttribLocation(ra,A);ra.id=ca.length;ca.push({program:ra,code:oa});K.info.memory.programs=ca.length;Pa=ra}w.program=Pa;Pa=w.program.attributes;
0<=Pa.position&&m.enableVertexAttribArray(Pa.position);0<=Pa.color&&m.enableVertexAttribArray(Pa.color);0<=Pa.normal&&m.enableVertexAttribArray(Pa.normal);0<=Pa.tangent&&m.enableVertexAttribArray(Pa.tangent);w.skinning&&0<=Pa.skinVertexA&&0<=Pa.skinVertexB&&0<=Pa.skinIndex&&0<=Pa.skinWeight&&(m.enableVertexAttribArray(Pa.skinVertexA),m.enableVertexAttribArray(Pa.skinVertexB),m.enableVertexAttribArray(Pa.skinIndex),m.enableVertexAttribArray(Pa.skinWeight));if(w.attributes)for(P in w.attributes)void 0!==
Pa[P]&&0<=Pa[P]&&m.enableVertexAttribArray(Pa[P]);if(w.morphTargets)for(w.numSupportedMorphTargets=0,ra="morphTarget",P=0;P<this.maxMorphTargets;P++)ib=ra+P,0<=Pa[ib]&&(m.enableVertexAttribArray(Pa[ib]),w.numSupportedMorphTargets++);if(w.morphNormals)for(w.numSupportedMorphNormals=0,ra="morphNormal",P=0;P<this.maxMorphNormals;P++)ib=ra+P,0<=Pa[ib]&&(m.enableVertexAttribArray(Pa[ib]),w.numSupportedMorphNormals++);w.uniformsList=[];for(G in w.uniforms)w.uniformsList.push([w.uniforms[G],G])};this.setFaceCulling=
function(w,D){w?(D&&"ccw"!==D?m.frontFace(m.CW):m.frontFace(m.CCW),"back"===w?m.cullFace(m.BACK):"front"===w?m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE)):m.disable(m.CULL_FACE)};this.setObjectFaces=function(w){ya!==w.doubleSided&&(w.doubleSided?m.disable(m.CULL_FACE):m.enable(m.CULL_FACE),ya=w.doubleSided);Aa!==w.flipSided&&(w.flipSided?m.frontFace(m.CW):m.frontFace(m.CCW),Aa=w.flipSided)};this.setDepthTest=function(w){wa!==w&&(w?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),
wa=w)};this.setDepthWrite=function(w){La!==w&&(m.depthMask(w),La=w)};this.setBlending=function(w,D,A,y){if(w!==ua){switch(w){case THREE.NoBlending:m.disable(m.BLEND);break;case THREE.AdditiveBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE);break;case THREE.SubtractiveBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,m.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,
m.SRC_COLOR);break;case THREE.CustomBlending:m.enable(m.BLEND);break;default:m.enable(m.BLEND),m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA)}ua=w}if(w===THREE.CustomBlending){if(D!==ea&&(m.blendEquation(H(D)),ea=D),A!==ia||y!==ka)m.blendFunc(H(A),H(y)),ia=A,ka=y}else ka=ia=ea=null};this.setTexture=function(w,D){if(w.needsUpdate){w.__webglInit||(w.__webglInit=!0,w.__webglTexture=m.createTexture(),K.info.memory.textures++);
m.activeTexture(m.TEXTURE0+D);m.bindTexture(m.TEXTURE_2D,w.__webglTexture);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha);D=w.image;var A=0===(D.width&D.width-1)&&0===(D.height&D.height-1),y=H(w.format),G=H(w.type);Q(m.TEXTURE_2D,w,A);w instanceof THREE.DataTexture?m.texImage2D(m.TEXTURE_2D,0,y,D.width,D.height,0,y,G,D.data):m.texImage2D(m.TEXTURE_2D,0,y,y,G,w.image);w.generateMipmaps&&A&&m.generateMipmap(m.TEXTURE_2D);w.needsUpdate=!1;if(w.onUpdate)w.onUpdate()}else m.activeTexture(m.TEXTURE0+
D),m.bindTexture(m.TEXTURE_2D,w.__webglTexture)};this.setRenderTarget=function(w){var D=w instanceof THREE.WebGLRenderTargetCube;if(w&&!w.__webglFramebuffer){void 0===w.depthBuffer&&(w.depthBuffer=!0);void 0===w.stencilBuffer&&(w.stencilBuffer=!0);w.__webglTexture=m.createTexture();var A=0===(w.width&w.width-1)&&0===(w.height&w.height-1),y=H(w.format),G=H(w.type);if(D){w.__webglFramebuffer=[];w.__webglRenderbuffer=[];m.bindTexture(m.TEXTURE_CUBE_MAP,w.__webglTexture);Q(m.TEXTURE_CUBE_MAP,w,A);for(var P=
0;6>P;P++){w.__webglFramebuffer[P]=m.createFramebuffer();w.__webglRenderbuffer[P]=m.createRenderbuffer();m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+P,0,y,w.width,w.height,0,y,G,null);var oa=w,S=m.TEXTURE_CUBE_MAP_POSITIVE_X+P;m.bindFramebuffer(m.FRAMEBUFFER,w.__webglFramebuffer[P]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,S,oa.__webglTexture,0);F(w.__webglRenderbuffer[P],w)}A&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else w.__webglFramebuffer=m.createFramebuffer(),w.__webglRenderbuffer=
m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,w.__webglTexture),Q(m.TEXTURE_2D,w,A),m.texImage2D(m.TEXTURE_2D,0,y,w.width,w.height,0,y,G,null),y=m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,w.__webglFramebuffer),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,y,w.__webglTexture,0),F(w.__webglRenderbuffer,w),A&&m.generateMipmap(m.TEXTURE_2D);D?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,null);m.bindFramebuffer(m.FRAMEBUFFER,
null)}w?(D=D?w.__webglFramebuffer[w.activeCubeFace]:w.__webglFramebuffer,A=w.width,w=w.height,G=y=0):(D=null,A=Xb,w=Yb,y=Lb,G=Bb);D!==ja&&(m.bindFramebuffer(m.FRAMEBUFFER,D),m.viewport(y,G,A,w),ja=D);za=A;Ga=w};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:
THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g;a=a.b;var e=Math.max(Math.max(c,d),a),f=Math.min(Math.min(c,d),a);if(f===e)f=c=0;else{var g=e-f;f=g/e;c=(c===e?(d-a)/g:d===e?2+(a-c)/g:4+(c-d)/g)/6;0>c&&(c+=1);1<c&&--c}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=f;b.v=e;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,l=f.vertices,h=a.faces,n=f.faces,q=a.faceVertexUvs[0],r=f.faceVertexUvs[0],v={},p=0;p<a.materials.length;p++)v[a.materials[p].id]=p;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));p=0;for(b=l.length;p<b;p++){var t=l[p].clone();c&&c.multiplyVector3(t);g.push(t)}p=0;for(b=n.length;p<b;p++){g=n[p];var u,
x=g.vertexNormals,z=g.vertexColors;g instanceof THREE.Face3?u=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(u=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));u.normal.copy(g.normal);d&&d.multiplyVector3(u.normal);l=0;for(t=x.length;l<t;l++){var C=x[l].clone();d&&d.multiplyVector3(C);u.vertexNormals.push(C)}u.color.copy(g.color);l=0;for(t=z.length;l<t;l++)C=z[l],u.vertexColors.push(C.clone());void 0!==g.materialIndex&&(l=f.materials[g.materialIndex],t=l.id,z=v[t],void 0===z&&(z=a.materials.length,
v[t]=z,a.materials.push(l)),u.materialIndex=z);u.centroid.copy(g.centroid);c&&c.multiplyVector3(u.centroid);h.push(u)}p=0;for(b=r.length;p<b;p++){c=r[p];d=[];l=0;for(t=c.length;l<t;l++)d.push(new THREE.UV(c[l].u,c[l].v));q.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<
c;a++){d=f[a];e=[];for(var g=0,l=d.length;g<l;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d=new THREE.Vector3,e=THREE.GeometryUtils.__v1;var f=THREE.GeometryUtils.random();var g=THREE.GeometryUtils.random();1<f+g&&(f=1-f,g=1-g);var l=1-f-g;d.copy(a);d.multiplyScalar(f);e.copy(b);e.multiplyScalar(g);d.addSelf(e);e.copy(c);e.multiplyScalar(l);d.addSelf(e);return d},randomPointInFace:function(a,b,c){if(a instanceof THREE.Face3){var d=
b.vertices[a.a];var e=b.vertices[a.b];var f=b.vertices[a.c];return THREE.GeometryUtils.randomPointInTriangle(d,e,f)}if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];b=b.vertices[a.d];if(c)if(a._area1&&a._area2){c=a._area1;var g=a._area2}else c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g;else c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b);return THREE.GeometryUtils.random()*
(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(t){function u(x,z){if(z<x)return x;var C=x+Math.floor((z-x)/2);return h[C]>t?u(x,C-1):h[C]<t?u(C+1,z):C}return u(0,h.length-1)}var d,e=a.faces,f=a.vertices,g=e.length,l=0,h=[];for(d=0;d<g;d++){var n=e[d];if(n instanceof THREE.Face3){var q=f[n.a];var r=f[n.b];var v=f[n.c];n._area=THREE.GeometryUtils.triangleArea(q,r,v)}else if(n instanceof THREE.Face4){q=
f[n.a];r=f[n.b];v=f[n.c];var p=f[n.d];n._area1=THREE.GeometryUtils.triangleArea(q,r,p);n._area2=THREE.GeometryUtils.triangleArea(r,v,p);n._area=n._area1+n._area2}l+=n._area;h[d]=l}n=[];for(d=0;d<b;d++)f=THREE.GeometryUtils.random()*l,f=c(f),n[d]=THREE.GeometryUtils.randomPointInFace(e[f],a,!0);return n},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1;d.sub(a,b);var e=d.length();d.sub(a,c);a=d.length();d.sub(b,c);c=d.length();b=.5*(e+a+c);return Math.sqrt(b*(b-e)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();
var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v&&(d[e].v-=Math.floor(d[e].v))},triangulateQuads:function(a){var b,c=[],d=[],e=[];var f=0;for(b=a.faceUvs.length;f<b;f++)d[f]=[];f=0;for(b=a.faceVertexUvs.length;f<
b;f++)e[f]=[];f=0;for(b=a.faces.length;f<b;f++){var g=a.faces[f];if(g instanceof THREE.Face4){var l=g.a;var h=g.b,n=g.c,q=g.d,r=new THREE.Face3,v=new THREE.Face3;r.color.copy(g.color);v.color.copy(g.color);r.materialIndex=g.materialIndex;v.materialIndex=g.materialIndex;r.a=l;r.b=h;r.c=q;v.a=h;v.b=n;v.c=q;4===g.vertexColors.length&&(r.vertexColors[0]=g.vertexColors[0].clone(),r.vertexColors[1]=g.vertexColors[1].clone(),r.vertexColors[2]=g.vertexColors[3].clone(),v.vertexColors[0]=g.vertexColors[1].clone(),
v.vertexColors[1]=g.vertexColors[2].clone(),v.vertexColors[2]=g.vertexColors[3].clone());c.push(r,v);g=0;for(l=a.faceVertexUvs.length;g<l;g++)a.faceVertexUvs[g].length&&(r=a.faceVertexUvs[g][f],h=r[1],n=r[2],q=r[3],r=[r[0].clone(),h.clone(),q.clone()],h=[h.clone(),n.clone(),q.clone()],e[g].push(r,h));g=0;for(l=a.faceUvs.length;g<l;g++)a.faceUvs[g].length&&(h=a.faceUvs[g][f],d[g].push(h,h))}else{c.push(g);g=0;for(l=a.faceUvs.length;g<l;g++)d[g].push(a.faceUvs[g]);g=0;for(l=a.faceVertexUvs.length;g<
l;g++)e[g].push(a.faceVertexUvs[g])}}a.faces=c;a.faceUvs=d;a.faceVertexUvs=e;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,l=f.b,h=f.c;g=a.vertices[g];l=a.vertices[l];h=a.vertices[h];var n=a.vertices[f.d];b.push(g.clone());b.push(l.clone());b.push(h.clone());b.push(n.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=
f.a,l=f.b,h=f.c,g=a.vertices[g],l=a.vertices[l],h=a.vertices[h],b.push(g.clone()),b.push(l.clone()),b.push(h.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d=[],e=[];var f=0;for(c=a.faceVertexUvs.length;f<c;f++)e[f]=[];f=0;for(c=a.faces.length;f<c;f++){var g=a.faces[f];if(g instanceof THREE.Face3){var l=g.a;var h=g.b;var n=g.c;var q=a.vertices[l];var r=a.vertices[h];var v=a.vertices[n];var p=q.distanceTo(r);var t=r.distanceTo(v);var u=q.distanceTo(v);
if(p>b||t>b||u>b){var x=a.vertices.length;var z=g.clone();var C=g.clone();p>=t&&p>=u?(q=q.clone(),q.lerpSelf(r,.5),z.a=l,z.b=x,z.c=n,C.a=x,C.b=h,C.c=n,3===g.vertexNormals.length&&(l=g.vertexNormals[0].clone(),l.lerpSelf(g.vertexNormals[1],.5),z.vertexNormals[1].copy(l),C.vertexNormals[0].copy(l)),3===g.vertexColors.length&&(l=g.vertexColors[0].clone(),l.lerpSelf(g.vertexColors[1],.5),z.vertexColors[1].copy(l),C.vertexColors[0].copy(l)),g=0):t>=p&&t>=u?(q=r.clone(),q.lerpSelf(v,.5),z.a=l,z.b=h,z.c=
x,C.a=x,C.b=n,C.c=l,3===g.vertexNormals.length&&(l=g.vertexNormals[1].clone(),l.lerpSelf(g.vertexNormals[2],.5),z.vertexNormals[2].copy(l),C.vertexNormals[0].copy(l),C.vertexNormals[1].copy(g.vertexNormals[2]),C.vertexNormals[2].copy(g.vertexNormals[0])),3===g.vertexColors.length&&(l=g.vertexColors[1].clone(),l.lerpSelf(g.vertexColors[2],.5),z.vertexColors[2].copy(l),C.vertexColors[0].copy(l),C.vertexColors[1].copy(g.vertexColors[2]),C.vertexColors[2].copy(g.vertexColors[0])),g=1):(q=q.clone(),q.lerpSelf(v,
.5),z.a=l,z.b=h,z.c=x,C.a=x,C.b=h,C.c=n,3===g.vertexNormals.length&&(l=g.vertexNormals[0].clone(),l.lerpSelf(g.vertexNormals[2],.5),z.vertexNormals[2].copy(l),C.vertexNormals[0].copy(l)),3===g.vertexColors.length&&(l=g.vertexColors[0].clone(),l.lerpSelf(g.vertexColors[2],.5),z.vertexColors[2].copy(l),C.vertexColors[0].copy(l)),g=2);d.push(z,C);a.vertices.push(q);l=0;for(h=a.faceVertexUvs.length;l<h;l++)a.faceVertexUvs[l].length&&(q=a.faceVertexUvs[l][f],C=q[0],n=q[1],z=q[2],0===g?(r=C.clone(),r.lerpSelf(n,
.5),q=[C.clone(),r.clone(),z.clone()],n=[r.clone(),n.clone(),z.clone()]):1===g?(r=n.clone(),r.lerpSelf(z,.5),q=[C.clone(),n.clone(),r.clone()],n=[r.clone(),z.clone(),C.clone()]):(r=C.clone(),r.lerpSelf(z,.5),q=[C.clone(),n.clone(),r.clone()],n=[r.clone(),n.clone(),z.clone()]),e[l].push(q,n))}else for(d.push(g),l=0,h=a.faceVertexUvs.length;l<h;l++)e[l].push(a.faceVertexUvs[l][f])}else{l=g.a;h=g.b;n=g.c;x=g.d;q=a.vertices[l];r=a.vertices[h];v=a.vertices[n];u=a.vertices[x];p=q.distanceTo(r);t=r.distanceTo(v);
var Q=v.distanceTo(u);var F=q.distanceTo(u);if(p>b||t>b||Q>b||F>b){var W=a.vertices.length;var H=a.vertices.length+1;z=g.clone();C=g.clone();p>=t&&p>=Q&&p>=F||Q>=t&&Q>=p&&Q>=F?(p=q.clone(),p.lerpSelf(r,.5),r=v.clone(),r.lerpSelf(u,.5),z.a=l,z.b=W,z.c=H,z.d=x,C.a=W,C.b=h,C.c=n,C.d=H,4===g.vertexNormals.length&&(l=g.vertexNormals[0].clone(),l.lerpSelf(g.vertexNormals[1],.5),h=g.vertexNormals[2].clone(),h.lerpSelf(g.vertexNormals[3],.5),z.vertexNormals[1].copy(l),z.vertexNormals[2].copy(h),C.vertexNormals[0].copy(l),
C.vertexNormals[3].copy(h)),4===g.vertexColors.length&&(l=g.vertexColors[0].clone(),l.lerpSelf(g.vertexColors[1],.5),h=g.vertexColors[2].clone(),h.lerpSelf(g.vertexColors[3],.5),z.vertexColors[1].copy(l),z.vertexColors[2].copy(h),C.vertexColors[0].copy(l),C.vertexColors[3].copy(h)),g=0):(p=r.clone(),p.lerpSelf(v,.5),r=u.clone(),r.lerpSelf(q,.5),z.a=l,z.b=h,z.c=W,z.d=H,C.a=H,C.b=W,C.c=n,C.d=x,4===g.vertexNormals.length&&(l=g.vertexNormals[1].clone(),l.lerpSelf(g.vertexNormals[2],.5),h=g.vertexNormals[3].clone(),
h.lerpSelf(g.vertexNormals[0],.5),z.vertexNormals[2].copy(l),z.vertexNormals[3].copy(h),C.vertexNormals[0].copy(h),C.vertexNormals[1].copy(l)),4===g.vertexColors.length&&(l=g.vertexColors[1].clone(),l.lerpSelf(g.vertexColors[2],.5),h=g.vertexColors[3].clone(),h.lerpSelf(g.vertexColors[0],.5),z.vertexColors[2].copy(l),z.vertexColors[3].copy(h),C.vertexColors[0].copy(h),C.vertexColors[1].copy(l)),g=1);d.push(z,C);a.vertices.push(p,r);l=0;for(h=a.faceVertexUvs.length;l<h;l++)a.faceVertexUvs[l].length&&
(q=a.faceVertexUvs[l][f],C=q[0],n=q[1],z=q[2],q=q[3],0===g?(r=C.clone(),r.lerpSelf(n,.5),v=z.clone(),v.lerpSelf(q,.5),C=[C.clone(),r.clone(),v.clone(),q.clone()],n=[r.clone(),n.clone(),z.clone(),v.clone()]):(r=n.clone(),r.lerpSelf(z,.5),v=q.clone(),v.lerpSelf(C,.5),C=[C.clone(),n.clone(),r.clone(),v.clone()],n=[v.clone(),r.clone(),z.clone(),q.clone()]),e[l].push(C,n))}else for(d.push(g),l=0,h=a.faceVertexUvs.length;l<h;l++)e[l].push(a.faceVertexUvs[l][f])}}a.faces=d;a.faceVertexUvs=e}};
THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);d.onload=function(){e.needsUpdate=!0;c&&c(this)};d.crossOrigin=this.crossOrigin;d.src=a;return e},loadTextureCube:function(a,b,c){var d,e=[],f=new THREE.Texture(e,b);b=e.loadCount=0;for(d=a.length;b<d;++b)e[b]=new Image,e[b].onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0);c&&c(this)},e[b].crossOrigin=this.crossOrigin,e[b].src=a[b];return f},getNormalMap:function(a,b){b|=
1;var c=a.width,d=a.height,e=document.createElement("canvas");e.width=c;e.height=d;var f=e.getContext("2d");f.drawImage(a,0,0);a=f.getImageData(0,0,c,d).data;for(var g=f.createImageData(c,d),l=g.data,h=0;h<c;h++)for(var n=0;n<d;n++){var q=0>n-1?0:n-1,r=n+1>d-1?d-1:n+1,v=0>h-1?0:h-1,p=h+1>c-1?c-1:h+1,t=[],u=[0,0,a[4*(n*c+h)]/255*b];t.push([-1,0,a[4*(n*c+v)]/255*b]);t.push([-1,-1,a[4*(q*c+v)]/255*b]);t.push([0,-1,a[4*(q*c+h)]/255*b]);t.push([1,-1,a[4*(q*c+p)]/255*b]);t.push([1,0,a[4*(n*c+p)]/255*b]);
t.push([1,1,a[4*(r*c+p)]/255*b]);t.push([0,1,a[4*(r*c+h)]/255*b]);t.push([-1,1,a[4*(r*c+v)]/255*b]);q=[];v=t.length;for(r=0;r<v;r++){p=t[r];var x=t[(r+1)%v];p=[p[0]-u[0],p[1]-u[1],p[2]-u[2]];x=[x[0]-u[0],x[1]-u[1],x[2]-u[2]];var z=q;p=[p[1]*x[2]-p[2]*x[1],p[2]*x[0]-p[0]*x[2],p[0]*x[1]-p[1]*x[0]];x=Math.sqrt(p[0]*p[0]+p[1]*p[1]+p[2]*p[2]);z.push.call(z,[p[0]/x,p[1]/x,p[2]/x])}t=[0,0,0];for(r=0;r<q.length;r++)t[0]+=q[r][0],t[1]+=q[r][1],t[2]+=q[r][2];t[0]/=q.length;t[1]/=q.length;t[2]/=q.length;u=4*
(n*c+h);l[u]=(t[0]+1)/2*255|0;l[u+1]=255*(t[1]+.5)|0;l[u+2]=255*t[2]|0;l[u+3]=255}f.putImageData(g,0,0);return e},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var l=0;l<d;l++)e[3*l]=f,e[3*l+1]=g,e[3*l+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(c){c.visible=b})},traverseHierarchy:function(a,b){var c,d=a.children.length;for(c=0;c<d;c++){var e=a.children[c];b(e);THREE.SceneUtils.traverseHierarchy(e,b)}},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){if(a instanceof THREE.MorphAnimMesh){var b=new THREE.MorphAnimMesh(a.geometry,a.material);
b.duration=a.duration;b.mirroredLoop=a.mirroredLoop;b.time=a.time;b.lastKeyframe=a.lastKeyframe;b.currentKeyframe=a.currentKeyframe;b.direction=a.direction;b.directionBackwards=a.directionBackwards}else a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?
(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,
b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.doubleSided=a.doubleSided;
b.flipSided=a.flipSided;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=
a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",
value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null;this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}};
THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||=5;var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||=5;var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c=this.getPoint(0),d,e=0;b.push(0);for(d=1;d<=a;d++){var f=this.getPoint(d/a);e+=f.distanceTo(c);b.push(e);c=f}return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=c.length;b=b?b:a*c[d-1];for(var e=0,f=d-1,g;e<=f;)if(a=Math.floor(e+(f-e)/2),g=c[a]-b,0>g)e=a+1;else if(0<g)f=a-1;else{f=a;break}a=f;if(c[a]==b)return a/(d-1);e=c[a];return(a+(b-e)/(c[a+1]-e))/(d-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;
THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points;var e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.ArcCurve=function(a,b,c,d,e,f){this.aX=a;this.aY=b;this.aRadius=c;this.aStartAngle=d;this.aEndAngle=e;this.aClockwise=f};THREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.aRadius*Math.cos(b);b=this.aY+this.aRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);var c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);var c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points;a*=d.length-1;var e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]];c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points;var e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c;var d=b=Number.NEGATIVE_INFINITY;var e=c=Number.POSITIVE_INFINITY;var f;var g=new THREE.Vector2;var l=0;for(f=a.length;l<f;l++){var h=a[l];h.x>d?d=h.x:h.x<e&&(e=h.x);h.y>b?b=h.y:h.y<b&&(c=h.y);g.addSelf(h.x,h.y)}return{minX:e,minY:c,maxX:d,maxY:b,centroid:g.divideScalar(f)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};
THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){a=this.getPoints(a);var c;b||(b=this.bends);var d=0;for(c=b.length;d<c;d++)a=this.getWrapPoints(a,b[d]);return a};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){a=this.getSpacedPoints(a);var c;b||(b=this.bends);var d=0;for(c=b.length;d<c;d++)a=this.getWrapPoints(a,b[d]);return a};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d;var e=0;for(d=a.length;e<d;e++){var f=a[e];var g=f.x;var l=f.y;var h=g/c.maxX;h=b.getUtoTmapping(h,g);g=b.getPoint(h);l=b.getNormalVector(h).multiplyScalar(l);f.x=g.x+l.x;f.y=g.y+l.y}return a};
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0==a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){c=a[b].indexOf(c);-1!==c&&a[b].splice(c,1)}};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=new THREE.Object3D;THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),l=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(l[l.length-2],l[l.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args;c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};
THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),l=this.actions[this.actions.length-1];l=new THREE.ArcCurve(l.x+a,l.y+b,c,d,e,f);this.curves.push(l);l=l.getPoint(f?1:0);g.push(l.x);g.push(l.y);this.actions.push({action:THREE.PathActions.ARC,args:g})};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),l=new THREE.ArcCurve(a,b,c,d,e,f);this.curves.push(l);l=l.getPoint(f?1:0);g.push(l.x);g.push(l.y);this.actions.push({action:THREE.PathActions.ARC,args:g})};THREE.Path.prototype.getSpacedPoints=function(a){a||=40;for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d;var e=0;for(d=this.actions.length;e<d;e++){var f=this.actions[e];var g=f.action;f=f.args;switch(g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:var l=f[2];var h=f[3];var n=f[0];var q=f[1];if(0<c.length){g=c[c.length-
1];var r=g.x;var v=g.y}else g=this.actions[e-1].args,r=g[g.length-2],v=g[g.length-1];for(f=1;f<=a;f++){var p=f/a;g=THREE.Shape.Utils.b2(p,r,n,l);p=THREE.Shape.Utils.b2(p,v,q,h);c.push(new THREE.Vector2(g,p))}break;case THREE.PathActions.BEZIER_CURVE_TO:l=f[4];h=f[5];n=f[0];q=f[1];var t=f[2];var u=f[3];0<c.length?(g=c[c.length-1],r=g.x,v=g.y):(g=this.actions[e-1].args,r=g[g.length-2],v=g[g.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b3(p,r,n,t,l),p=THREE.Shape.Utils.b3(p,v,q,u,h),c.push(new THREE.Vector2(g,
p));break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[e-1].args;p=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;p=p.concat(f[0]);p=new THREE.SplineCurve(p);for(f=1;f<=g;f++)c.push(p.getPointAt(f/g));break;case THREE.PathActions.ARC:for(l=f[0],h=f[1],t=f[2],n=f[3],q=!!f[5],u=f[4]-n,r=2*a,f=1;f<=r;f++)p=f/r,q||(p=1-p),p=n+p*u,g=l+t*Math.cos(p),p=h+t*Math.sin(p),c.push(new THREE.Vector2(g,p))}}e=c[c.length-1];1E-10>Math.abs(e.x-c[0].x)&&1E-10>Math.abs(e.y-c[0].y)&&c.splice(c.length-
1,1);b&&c.push(c[0]);return c};THREE.Path.prototype.transform=function(a,b){this.getBoundingBox();return this.getWrapPoints(this.getPoints(b),a)};THREE.Path.prototype.nltransform=function(a,b,c,d,e,f){var g=this.getPoints(),l;var h=0;for(l=g.length;h<l;h++){var n=g[h];var q=n.x;var r=n.y;n.x=a*q+b*r+c;n.y=d*r+e*q+f}return g};
THREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",b.maxX+100),a.setAttribute("height",b.maxY+100),document.body.appendChild(a));b=a.getContext("2d");b.fillStyle="white";b.fillRect(0,0,a.width,a.height);b.strokeStyle="black";b.beginPath();var c;a=0;for(c=this.actions.length;a<c;a++){var d=this.actions[a];var e=d.args;d=d.action;d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,e)}b.stroke();b.closePath();b.strokeStyle="red";
d=this.getPoints();a=0;for(c=d.length;a<c;a++)e=d[a],b.beginPath(),b.arc(e.x,e.y,1.5,0,2*Math.PI,!1),b.stroke(),b.closePath()};
THREE.Path.prototype.toShapes=function(){var a,b=[],c=new THREE.Path;var d=0;for(a=this.actions.length;d<a;d++){var e=this.actions[d];var f=e.args;e=e.action;e==THREE.PathActions.MOVE_TO&&0!=c.actions.length&&(b.push(c),c=new THREE.Path);c[e].apply(c,f)}0!=c.actions.length&&b.push(c);if(0==b.length)return[];f=[];d=!THREE.Shape.Utils.isClockWise(b[0].getPoints());if(1==b.length){c=b[0];var g=new THREE.Shape;g.actions=c.actions;g.curves=c.curves;f.push(g);return f}if(d)for(g=new THREE.Shape,d=0,a=b.length;d<
a;d++)c=b[d],THREE.Shape.Utils.isClockWise(c.getPoints())?(g.actions=c.actions,g.curves=c.curves,f.push(g),g=new THREE.Shape):g.holes.push(c);else{d=0;for(a=b.length;d<a;d++)c=b[d],THREE.Shape.Utils.isClockWise(c.getPoints())?(g&&f.push(g),g=new THREE.Shape,g.actions=c.actions,g.curves=c.curves):g.holes.push(c);f.push(g)}return f};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){a=a.concat();var c=a.concat(),d,e,f,g=[];for(e=0;e<b.length;e++){var l=b[e];Array.prototype.push.apply(c,l);var h=Number.POSITIVE_INFINITY;for(d=0;d<l.length;d++){var n=l[d];var q=[];for(f=0;f<a.length;f++){var r=a[f];r=n.distanceToSquared(r);q.push(r);if(r<h){h=r;var v=d;var p=f}}}d=0<=p-1?p-1:a.length-1;h=0<=v-1?v-1:l.length-1;var t=[l[v],a[p],a[d]];f=THREE.FontUtils.Triangulate.area(t);var u=[l[v],l[h],a[p]];n=THREE.FontUtils.Triangulate.area(u);q=p;
r=v;p+=1;v+=-1;0>p&&(p+=a.length);p%=a.length;0>v&&(v+=l.length);v%=l.length;d=0<=p-1?p-1:a.length-1;h=0<=v-1?v-1:l.length-1;t=[l[v],a[p],a[d]];t=THREE.FontUtils.Triangulate.area(t);u=[l[v],l[h],a[p]];u=THREE.FontUtils.Triangulate.area(u);f+n>t+u&&(p=q,v=r,0>p&&(p+=a.length),p%=a.length,0>v&&(v+=l.length),v%=l.length,d=0<=p-1?p-1:a.length-1,h=0<=v-1?v-1:l.length-1);f=a.slice(0,p);n=a.slice(p);q=l.slice(v);r=l.slice(0,v);h=[l[v],l[h],a[p]];g.push([l[v],a[p],a[d]]);g.push(h);a=f.concat(q).concat(r).concat(n)}return{shape:a,
isolatedPts:g,allpoints:c}},triangulateShape:function(a,b){a=THREE.Shape.Utils.removeHoles(a,b);b=a.allpoints;var c=a.isolatedPts;a=THREE.FontUtils.Triangulate(a.shape,!1);var d,e={};var f=0;for(d=b.length;f<d;f++){var g=b[f].x+":"+b[f].y;void 0!==e[g]&&console.log("Duplicate point",g);e[g]=f}f=0;for(d=a.length;f<d;f++){var l=a[f];for(b=0;3>b;b++)g=l[b].x+":"+l[b].y,g=e[g],void 0!==g&&(l[b]=g)}f=0;for(d=c.length;f<d;f++)for(l=c[f],b=0;3>b;b++)g=l[b].x+":"+l[b].y,g=e[g],void 0!==g&&(l[b]=g);return a.concat(c)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){a=1-a;return a*a*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){a=1-a;return a*a*a*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,
e)}};THREE.TextPath=function(a,b){THREE.Path.call(this);this.parameters=b||{};this.set(a)};THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters;this.text=a;a=void 0!==b.curveSegments?b.curveSegments:4;var c=void 0!==b.font?b.font:"helvetiker",d=void 0!==b.weight?b.weight:"normal",e=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=a;THREE.FontUtils.face=c;THREE.FontUtils.weight=d;THREE.FontUtils.style=e};
THREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(e){for(var f=0;f<a.length;f++)a[f].update(e)},addToUpdate:function(e){-1===a.indexOf(e)&&a.push(e)},removeFromUpdate:function(e){e=a.indexOf(e);-1!==e&&a.splice(e,1)},add:function(e){void 0!==b[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting.");b[e.name]=e;if(!0!==e.initialized){for(var f=0;f<e.hierarchy.length;f++){for(var g=0;g<e.hierarchy[f].keys.length;g++)if(0>e.hierarchy[f].keys[g].time&&
(e.hierarchy[f].keys[g].time=0),void 0!==e.hierarchy[f].keys[g].rot&&!(e.hierarchy[f].keys[g].rot instanceof THREE.Quaternion)){var l=e.hierarchy[f].keys[g].rot;e.hierarchy[f].keys[g].rot=new THREE.Quaternion(l[0],l[1],l[2],l[3])}if(e.hierarchy[f].keys.length&&void 0!==e.hierarchy[f].keys[0].morphTargets){l={};for(g=0;g<e.hierarchy[f].keys.length;g++)for(var h=0;h<e.hierarchy[f].keys[g].morphTargets.length;h++){var n=e.hierarchy[f].keys[g].morphTargets[h];l[n]=-1}e.hierarchy[f].usedMorphTargets=l;
for(g=0;g<e.hierarchy[f].keys.length;g++){var q={};for(n in l){for(h=0;h<e.hierarchy[f].keys[g].morphTargets.length;h++)if(e.hierarchy[f].keys[g].morphTargets[h]===n){q[n]=e.hierarchy[f].keys[g].morphTargetsInfluences[h];break}h===e.hierarchy[f].keys[g].morphTargets.length&&(q[n]=0)}e.hierarchy[f].keys[g].morphTargetsInfluences=q}}for(g=1;g<e.hierarchy[f].keys.length;g++)e.hierarchy[f].keys[g].time===e.hierarchy[f].keys[g-1].time&&(e.hierarchy[f].keys.splice(g,1),g--);for(g=0;g<e.hierarchy[f].keys.length;g++)e.hierarchy[f].keys[g].index=
g}g=parseInt(e.length*e.fps,10);e.JIT={};e.JIT.hierarchy=[];for(f=0;f<e.hierarchy.length;f++)e.JIT.hierarchy.push(Array(g));e.initialized=!0}},get:function(e){if("string"===typeof e){if(b[e])return b[e];console.log("THREE.AnimationHandler.get: Couldn't find animation "+e);return null}},parse:function(e){var f=[];if(e instanceof THREE.SkinnedMesh)for(var g=0;g<e.bones.length;g++)f.push(e.bones[g]);else d(e,f);return f}},d=function(e,f){f.push(e);for(var g=0;g<e.children.length;g++)d(e.children[g],
f)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c,d){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.JITCompile=void 0!==d?d:!0;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;b=this.hierarchy.length;for(a=0;a<b;a++){var c=this.hierarchy[a];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(c.useQuaternion=!0);c.matrixAutoUpdate=!0;void 0===c.animationCache&&(c.animationCache={},c.animationCache.prevKey={pos:0,rot:0,scl:0},c.animationCache.nextKey={pos:0,rot:0,scl:0},c.animationCache.originalMatrix=c instanceof THREE.Bone?
c.skinMatrix:c.matrix);var d=c.animationCache.prevKey;c=c.animationCache.nextKey;d.pos=this.data.hierarchy[a].keys[0];d.rot=this.data.hierarchy[a].keys[0];d.scl=this.data.hierarchy[a].keys[0];c.pos=this.getNextKeyWith("pos",a,1);c.rot=this.getNextKeyWith("rot",a,1);c.scl=this.getNextKeyWith("scl",a,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)void 0!==this.hierarchy[a].animationCache&&(this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache)};
THREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=["pos","rot","scl"],c=this.data.JIT.hierarchy;var d=this.currentTime+=a*this.timeScale;var e=this.currentTime%=this.data.length;var f=parseInt(Math.min(e*this.data.fps,this.data.length*this.data.fps),10);for(var g=0,l=this.hierarchy.length;g<l;g++){a=this.hierarchy[g];var h=a.animationCache;if(this.JITCompile&&void 0!==c[g][f])a instanceof THREE.Bone?(a.skinMatrix=c[g][f],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!1):(a.matrix=
c[g][f],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{this.JITCompile&&(a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix);for(var n=0;3>n;n++){var q=b[n];var r=h.prevKey[q];var v=h.nextKey[q];if(v.time<=d){if(e<d)if(this.loop)for(r=this.data.hierarchy[g].keys[0],v=this.getNextKeyWith(q,g,1);v.time<e;)r=v,v=this.getNextKeyWith(q,g,v.index+1);else{this.stop();return}else{do r=v,v=this.getNextKeyWith(q,g,v.index+1);while(v.time<e)
}h.prevKey[q]=r;h.nextKey[q]=v}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;var p=(e-r.time)/(v.time-r.time);var t=r[q];var u=v[q];if(0>p||1<p)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+p+" on bone "+g),p=0>p?0:1;if("pos"===q)if(q=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)q.x=t[0]+(u[0]-t[0])*p,q.y=t[1]+(u[1]-t[1])*p,q.z=t[2]+(u[2]-t[2])*p;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=
this.getPrevKeyWith("pos",g,r.index-1).pos,this.points[1]=t,this.points[2]=u,this.points[3]=this.getNextKeyWith("pos",g,v.index+1).pos,p=.33*p+.33,t=this.interpolateCatmullRom(this.points,p),q.x=t[0],q.y=t[1],q.z=t[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(p=this.interpolateCatmullRom(this.points,1.01*p),this.target.set(p[0],p[1],p[2]),this.target.subSelf(q),this.target.y=0,this.target.normalize(),p=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,p,0))}else"rot"===
q?THREE.Quaternion.slerp(t,u,a.quaternion,p):"scl"===q&&(q=a.scale,q.x=t[0]+(u[0]-t[0])*p,q.y=t[1]+(u[1]-t[1])*p,q.z=t[2]+(u[2]-t[2])*p)}}}if(this.JITCompile&&void 0===c[0][f])for(this.hierarchy[0].updateMatrixWorld(!0),g=0;g<this.hierarchy.length;g++)c[g][f]=this.hierarchy[g]instanceof THREE.Bone?this.hierarchy[g].skinMatrix.clone():this.hierarchy[g].matrix.clone()}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[];b*=a.length-1;var e=Math.floor(b);b-=e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>a.length-2?e:e+1;c[3]=e>a.length-3?e:e+2;e=a[c[0]];var f=a[c[1]];var g=a[c[2]];var l=a[c[3]];c=b*b;a=b*c;d[0]=this.interpolate(e[0],f[0],g[0],l[0],b,c,a);d[1]=this.interpolate(e[1],f[1],g[1],l[1],b,c,a);d[2]=this.interpolate(e[2],f[2],g[2],l[2],b,c,a);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;b=this.hierarchy.length;for(a=0;a<b;a++){var c=this.hierarchy[a];var d=this.data.hierarchy[a];c.useQuaternion=!0;void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c instanceof THREE.Bone?c.skinMatrix:
c.matrix);c=this.data.hierarchy[a].keys;c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=c[1],this.startTime=Math.min(c[0].time,this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b=this.data.JIT.hierarchy,c;var d=this.currentTime+=a*this.timeScale;var e=this.currentTime%=this.data.length;e<this.startTimeMs&&(e=this.currentTime=this.startTimeMs+e);var f=parseInt(Math.min(e*this.data.fps,this.data.length*this.data.fps),10);if((c=e<d)&&!this.loop){a=0;for(var g=this.hierarchy.length;a<g;a++){var l=this.data.hierarchy[a].keys;b=this.data.hierarchy[a].sids;var h=l.length-1;f=this.hierarchy[a];if(l.length){for(l=
0;l<b.length;l++)e=b[l],(d=this.getPrevKeyWith(e,a,h))&&d.apply(e);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(e<this.startTime)){a=0;for(g=this.hierarchy.length;a<g;a++){h=this.hierarchy[a];var n=this.data.hierarchy[a];l=n.keys;var q=n.animationCache;if(this.JITCompile&&void 0!==b[a][f])h instanceof THREE.Bone?(h.skinMatrix=b[a][f],h.matrixWorldNeedsUpdate=!1):(h.matrix=b[a][f],h.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&q&&(h instanceof
THREE.Bone?h.skinMatrix=q.originalMatrix:h.matrix=q.originalMatrix);n=q.prevKey;var r=q.nextKey;if(n&&r){if(r.time<=d){if(c&&this.loop)for(n=l[0],r=l[1];r.time<e;)n=r,r=l[n.index+1];else if(!c)for(var v=l.length-1;r.time<e&&r.index!==v;)n=r,r=l[n.index+1];q.prevKey=n;q.nextKey=r}r.time>=e?n.interpolate(r,e):n.interpolate(r,r.time)}this.data.hierarchy[a].node.updateMatrix();h.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===b[0][f])for(this.hierarchy[0].updateMatrixWorld(!0),a=0;a<this.hierarchy.length;a++)b[a][f]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var l=new THREE.PerspectiveCamera(90,
1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,1));this.add(l);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,q){var r=this.renderTarget,v=r.generateMipmaps;r.generateMipmaps=!1;r.activeCubeFace=0;n.render(q,d,r);r.activeCubeFace=1;n.render(q,e,r);r.activeCubeFace=
2;n.render(q,f,r);r.activeCubeFace=3;n.render(q,g,r);r.activeCubeFace=4;n.render(q,l,r);r.generateMipmaps=v;r.activeCubeFace=5;n.render(q,h,r)}};THREE.CubeCamera.prototype=new THREE.Object3D;THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;
THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CombinedCamera;
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2;b*=Math.tan(this.fov/2);a=2*b*a/2;b/=this.zoom;a/=this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPersepectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){a=180/Math.PI*Math.atan((void 0!==b?b:24)/(2*a))*2;this.setFov(a);return a};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.FirstPersonControls=function(a,b){function c(d,e){return function(){e.apply(d,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=.005;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(d){this.domElement!==document&&this.domElement.focus();d.preventDefault();d.stopPropagation();if(this.activeLook)switch(d.button){case 0:this.moveForward=
!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(d){d.preventDefault();d.stopPropagation();if(this.activeLook)switch(d.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(d){this.domElement===document?(this.mouseX=d.pageX-this.viewHalfX,this.mouseY=d.pageY-this.viewHalfY):(this.mouseX=d.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=d.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=
function(d){switch(d.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(d){switch(d.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=
!1;break;case 70:this.moveDown=!1}};this.update=function(d){if(!this.freeze){if(this.heightSpeed){var e=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=d*e*this.heightCoef}else this.autoSpeedFactor=0;e=d*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(e+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(e);this.moveLeft&&this.object.translateX(-e);this.moveRight&&this.object.translateX(e);
this.moveUp&&this.object.translateY(e);this.moveDown&&this.object.translateY(-e);d*=this.lookSpeed;this.activeLook||(d=0);this.lon+=this.mouseX*d;this.lookVertical&&(this.lat-=this.mouseY*d);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;e=this.target;var f=this.object.position;e.x=f.x+100*Math.sin(this.phi)*Math.cos(this.theta);e.y=f.y+100*Math.cos(this.phi);e.z=f.z+100*Math.sin(this.phi)*Math.sin(this.theta);e=1;this.constrainVertical&&
(e=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*d;this.lookVertical&&(this.lat-=this.mouseY*d*e);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));e=this.target;f=this.object.position;e.x=f.x+100*Math.sin(this.phi)*Math.cos(this.theta);e.y=f.y+100*Math.cos(this.phi);e.z=f.z+100*Math.sin(this.phi)*Math.sin(this.theta);
this.object.lookAt(e)}};this.domElement.addEventListener("contextmenu",function(d){d.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1)};
THREE.PathControls=function(a,b){function c(h){return 1>(h*=2)?.5*h*h:-.5*(--h*(h-2)-1)}function d(h,n){return function(){n.apply(h,arguments)}}function e(h,n,q,r){var v={name:q,fps:.6,length:r,hierarchy:[]},p=n.getControlPointsArray(),t=n.getLength(),u=p.length;var x=u-1;n={parent:-1,keys:[]};n.keys[0]={time:0,pos:p[0],rot:[0,0,0,1],scl:[1,1,1]};n.keys[x]={time:r,pos:p[x],rot:[0,0,0,1],scl:[1,1,1]};for(x=1;x<u-1;x++){var z=r*t.chunks[x]/t.total;n.keys[x]={time:z,pos:p[x]}}v.hierarchy[0]=n;THREE.AnimationHandler.add(v);
return new THREE.Animation(h,q,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(h,n){var q,r=new THREE.Geometry;for(q=0;q<h.points.length*n;q++){var v=q/(h.points.length*n);v=h.getPoint(v);r.vertices[q]=new THREE.Vector3(v.x,v.y,v.z)}return r}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/
2,this.domElement.setAttribute("tabindex",-1));var g=2*Math.PI,l=Math.PI/180;this.update=function(h){this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*h);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*h);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*l;this.theta=this.lon*l;h=this.phi%g;this.phi=0<=h?h:h+g;var n=this.verticalAngleMap.srcRange;h=this.verticalAngleMap.dstRange;n=THREE.Math.mapLinear(this.phi,n[0],n[1],
h[0],h[1]);var q=h[1]-h[0];this.phi=c((n-h[0])/q)*q+h[0];n=this.horizontalAngleMap.srcRange;h=this.horizontalAngleMap.dstRange;n=THREE.Math.mapLinear(this.theta,n[0],n[1],h[0],h[1]);q=h[1]-h[0];this.theta=c((n-h[0])/q)*q+h[0];h=this.target.position;h.x=100*Math.sin(this.phi)*Math.cos(this.theta);h.y=100*Math.cos(this.phi);h.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=function(h){this.domElement===document?(this.mouseX=h.pageX-this.viewHalfX,
this.mouseY=h.pageY-this.viewHalfY):(this.mouseX=h.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=h.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var h=new THREE.MeshLambertMaterial({color:30719}),n=new THREE.MeshLambertMaterial({color:65280}),q=new THREE.CubeGeometry(10,10,20),r=new THREE.CubeGeometry(2,
2,10);this.animationParent=new THREE.Mesh(q,h);h=new THREE.Mesh(r,n);h.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(h)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){h=this.debugPath;n=this.spline;r=f(n,10);q=f(n,10);var v=
new THREE.LineBasicMaterial({color:16711680,linewidth:3});r=new THREE.Line(r,v);q=new THREE.ParticleSystem(q,new THREE.ParticleBasicMaterial({color:16755200,size:3}));r.scale.set(1,1,1);h.add(r);q.scale.set(1,1,1);h.add(q);r=new THREE.SphereGeometry(1,16,8);v=new THREE.MeshBasicMaterial({color:65280});for(var p=0;p<n.points.length;p++)q=new THREE.Mesh(r,v),q.position.copy(n.points[p]),h.add(q)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1)}};
THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(d,e){return function(){e.apply(d,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(d){if("function"==typeof this[d.type])this[d.type](d)};this.keydown=function(d){if(!d.altKey){switch(d.keyCode){case 16:this.movementSpeedMultiplier=.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(d){switch(d.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(d){this.domElement!==document&&this.domElement.focus();d.preventDefault();d.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(d.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(d){if(!this.dragToLook||0<this.mouseStatus){var e=this.getContainerDimensions(),f=e.size[0]/2,g=e.size[1]/2;this.moveState.yawLeft=-(d.pageX-e.offset[0]-f)/f;this.moveState.pitchDown=(d.pageY-e.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(d){d.preventDefault();d.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(d.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(d){var e=d*this.movementSpeed;d*=this.rollSpeed;this.object.translateX(this.moveVector.x*e);this.object.translateY(this.moveVector.y*e);this.object.translateZ(this.moveVector.z*e);this.tmpQuaternion.set(this.rotationVector.x*d,this.rotationVector.y*d,this.rotationVector.z*d,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var d=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-d+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-.9,.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,l=1,h=0,n=0,q=0,r=0,v=0,p=window.innerWidth/2,t=window.innerHeight/2;this.update=function(u){if(this.mouseLook){var x=u*this.lookSpeed;
this.rotateHorizontally(x*r);this.rotateVertically(x*v)}x=u*this.movementSpeed;this.object.translateZ(-x*(0<h||this.autoForward&&!(0>h)?1:h));this.object.translateX(x*n);this.object.translateY(x*q);g&&(this.roll+=this.rollSpeed*u*l);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);c.cross(d,e).normalize();
d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);this.object.matrix.multiplySelf(f);
this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(u){this.object.position.x+=this.object.matrix.elements[0]*u;this.object.position.y+=this.object.matrix.elements[1]*u;this.object.position.z+=this.object.matrix.elements[2]*u};this.translateY=function(u){this.object.position.x+=this.object.matrix.elements[4]*u;this.object.position.y+=
this.object.matrix.elements[5]*u;this.object.position.z+=this.object.matrix.elements[6]*u};this.translateZ=function(u){this.object.position.x-=this.object.matrix.elements[8]*u;this.object.position.y-=this.object.matrix.elements[9]*u;this.object.position.z-=this.object.matrix.elements[10]*u};this.rotateHorizontally=function(u){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(u);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=
function(u){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(u);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(u){u.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(u){r=(u.clientX-p)/window.innerWidth;v=(u.clientY-t)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(u){u.preventDefault();u.stopPropagation();switch(u.button){case 0:h=
1;break;case 2:h=-1}},!1);this.domElement.addEventListener("mouseup",function(u){u.preventDefault();u.stopPropagation();switch(u.button){case 0:h=0;break;case 2:h=0}},!1);this.domElement.addEventListener("keydown",function(u){switch(u.keyCode){case 38:case 87:h=1;break;case 37:case 65:n=-1;break;case 40:case 83:h=-1;break;case 39:case 68:n=1;break;case 81:g=!0;l=1;break;case 69:g=!0;l=-1;break;case 82:q=1;break;case 70:q=-1}},!1);this.domElement.addEventListener("keyup",function(u){switch(u.keyCode){case 38:case 87:h=
0;break;case 37:case 65:n=0;break;case 40:case 83:h=0;break;case 39:case 68:n=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:q=0;break;case 70:q=0}},!1)};
THREE.TrackballControls=function(a,b){THREE.EventTarget.call(this);var c=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=
new THREE.Vector3;var d=new THREE.Vector3,e=!1,f=-1,g=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,n=new THREE.Vector2,q=new THREE.Vector2,r=new THREE.Vector2,v=new THREE.Vector2,p={type:"change"};this.handleEvent=function(t){if("function"==typeof this[t.type])this[t.type](t)};this.getMouseOnScreen=function(t,u){return new THREE.Vector2((t-c.screen.offsetLeft)/c.radius*.5,(u-c.screen.offsetTop)/c.radius*.5)};this.getMouseProjectionOnBall=function(t,u){t=new THREE.Vector3((t-.5*c.screen.width-
c.screen.offsetLeft)/c.radius,(.5*c.screen.height+c.screen.offsetTop-u)/c.radius,0);u=t.length();1<u?t.normalize():t.z=Math.sqrt(1-u*u);g.copy(c.object.position).subSelf(c.target);u=c.object.up.clone().setLength(t.y);u.addSelf(c.object.up.clone().crossSelf(g).setLength(t.x));u.addSelf(g.setLength(t.z));return u};this.rotateCamera=function(){var t=Math.acos(l.dot(h)/l.length()/h.length());if(t){var u=(new THREE.Vector3).cross(l,h).normalize(),x=new THREE.Quaternion;t*=c.rotateSpeed;x.setFromAxisAngle(u,
-t);x.multiplyVector3(g);x.multiplyVector3(c.object.up);x.multiplyVector3(h);c.staticMoving?l=h:(x.setFromAxisAngle(u,t*(c.dynamicDampingFactor-1)),x.multiplyVector3(l))}};this.zoomCamera=function(){var t=1+(q.y-n.y)*c.zoomSpeed;1!==t&&0<t&&(g.multiplyScalar(t),c.staticMoving?n=q:n.y+=(q.y-n.y)*this.dynamicDampingFactor)};this.panCamera=function(){var t=v.clone().subSelf(r);if(t.lengthSq()){t.multiplyScalar(g.length()*c.panSpeed);var u=g.clone().crossSelf(c.object.up).setLength(t.x);u.addSelf(c.object.up.clone().setLength(t.y));
c.object.position.addSelf(u);c.target.addSelf(u);c.staticMoving?r=v:r.addSelf(t.sub(v,r).multiplyScalar(c.dynamicDampingFactor))}};this.checkDistances=function(){c.noZoom&&c.noPan||(c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),g.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,g.setLength(c.minDistance)))};this.update=function(){g.copy(c.object.position).subSelf(c.target);c.noRotate||c.rotateCamera();c.noZoom||c.zoomCamera();
c.noPan||c.panCamera();c.object.position.add(c.target,g);c.checkDistances();c.object.lookAt(c.target);0<d.distanceTo(c.object.position)&&(c.dispatchEvent(p),d.copy(c.object.position))};this.domElement.addEventListener("contextmenu",function(t){t.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(t){c.enabled&&(e&&(l=h=c.getMouseProjectionOnBall(t.clientX,t.clientY),n=q=c.getMouseOnScreen(t.clientX,t.clientY),r=v=c.getMouseOnScreen(t.clientX,t.clientY),e=!1),-1!==f&&(0!==f||
c.noRotate?1!==f||c.noZoom?2===f&&!c.noPan&&(v=c.getMouseOnScreen(t.clientX,t.clientY)):q=c.getMouseOnScreen(t.clientX,t.clientY):h=c.getMouseProjectionOnBall(t.clientX,t.clientY)))},!1);this.domElement.addEventListener("mousedown",function(t){c.enabled&&(t.preventDefault(),t.stopPropagation(),-1===f&&(f=t.button,0!==f||c.noRotate?1!==f||c.noZoom?this.noPan||(r=v=c.getMouseOnScreen(t.clientX,t.clientY)):n=q=c.getMouseOnScreen(t.clientX,t.clientY):l=h=c.getMouseProjectionOnBall(t.clientX,t.clientY)))},
!1);this.domElement.addEventListener("mouseup",function(t){c.enabled&&(t.preventDefault(),t.stopPropagation(),f=-1)},!1);window.addEventListener("keydown",function(t){c.enabled&&-1===f&&(t.keyCode!==c.keys[0]||c.noRotate?t.keyCode!==c.keys[1]||c.noZoom?t.keyCode===c.keys[2]&&!c.noPan&&(f=2):f=1:f=0,-1!==f&&(e=!0))},!1);window.addEventListener("keyup",function(){c.enabled&&-1!==f&&(f=-1)},!1)};
THREE.CubeGeometry=function(a,b,c,d,e,f,g,l){function h(F,W,H,B,X,M,N,T){var Z=d||1,Y=e||1,I=X/2,pa=M/2,V=n.vertices.length;if("x"===F&&"y"===W||"y"===F&&"x"===W)var K="z";else if("x"===F&&"z"===W||"z"===F&&"x"===W)K="y",Y=f||1;else if("z"===F&&"y"===W||"y"===F&&"z"===W)K="x",Z=f||1;var ca=Z+1,E=Y+1,ja=X/Z,R=M/Y,J=new THREE.Vector3;J[K]=0<N?1:-1;for(X=0;X<E;X++)for(M=0;M<ca;M++){var da=new THREE.Vector3;da[F]=(M*ja-I)*H;da[W]=(X*R-pa)*B;da[K]=N;n.vertices.push(da)}for(X=0;X<Y;X++)for(M=0;M<Z;M++)F=
new THREE.Face4(M+ca*X+V,M+ca*(X+1)+V,M+1+ca*(X+1)+V,M+1+ca*X+V),F.normal.copy(J),F.vertexNormals.push(J.clone(),J.clone(),J.clone(),J.clone()),F.materialIndex=T,n.faces.push(F),n.faceVertexUvs[0].push([new THREE.UV(M/Z,X/Y),new THREE.UV(M/Z,(X+1)/Y),new THREE.UV((M+1)/Z,(X+1)/Y),new THREE.UV((M+1)/Z,X/Y)])}THREE.Geometry.call(this);var n=this,q=a/2,r=b/2,v=c/2,p;if(void 0!==g){if(g instanceof Array)this.materials=g;else for(this.materials=[],p=0;6>p;p++)this.materials.push(g);p=0;var t=1;var u=2;
var x=3;var z=4;var C=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=l)for(var Q in l)void 0!==this.sides[Q]&&(this.sides[Q]=l[Q]);this.sides.px&&h("z","y",-1,-1,c,b,q,p);this.sides.nx&&h("z","y",1,-1,c,b,-q,t);this.sides.py&&h("x","z",1,1,a,c,r,u);this.sides.ny&&h("x","z",1,-1,a,c,-r,x);this.sides.pz&&h("x","y",1,-1,a,b,v,z);this.sides.nz&&h("x","y",-1,-1,a,b,-v,C);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;
THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;e=e||1;var l,h,n=[],q=[];for(h=0;h<=e;h++){var r=[],v=[],p=h/e,t=p*(b-a)+a;for(l=0;l<=d;l++){var u=l/d,x=new THREE.Vector3;x.x=t*Math.sin(u*Math.PI*2);x.y=-p*c+g;x.z=t*Math.cos(u*Math.PI*2);this.vertices.push(x);r.push(this.vertices.length-1);v.push(new THREE.UV(u,p))}n.push(r);q.push(v)}c=(b-a)/c;for(l=0;l<d;l++)for(0!==a?(r=this.vertices[n[0][l]].clone(),
v=this.vertices[n[0][l+1]].clone()):(r=this.vertices[n[1][l]].clone(),v=this.vertices[n[1][l+1]].clone()),r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*c).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*c).normalize(),h=0;h<e;h++){p=n[h][l];t=n[h+1][l];u=n[h+1][l+1];x=n[h][l+1];var z=r.clone(),C=r.clone(),Q=v.clone(),F=v.clone(),W=q[h][l].clone(),H=q[h+1][l].clone(),B=q[h+1][l+1].clone(),X=q[h][l+1].clone();this.faces.push(new THREE.Face4(p,t,u,x,[z,C,Q,F]));this.faceVertexUvs[0].push([W,H,B,X])}if(!f&&0<a)for(this.vertices.push(new THREE.Vector3(0,
g,0)),l=0;l<d;l++)p=n[0][l],t=n[0][l+1],u=this.vertices.length-1,z=new THREE.Vector3(0,1,0),C=new THREE.Vector3(0,1,0),Q=new THREE.Vector3(0,1,0),W=q[0][l].clone(),H=q[0][l+1].clone(),B=new THREE.UV(H.u,0),this.faces.push(new THREE.Face3(p,t,u,[z,C,Q])),this.faceVertexUvs[0].push([W,H,B]);if(!f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-g,0)),l=0;l<d;l++)p=n[h][l+1],t=n[h][l],u=this.vertices.length-1,z=new THREE.Vector3(0,-1,0),C=new THREE.Vector3(0,-1,0),Q=new THREE.Vector3(0,-1,0),W=q[h][l+
1].clone(),H=q[h][l].clone(),B=new THREE.UV(H.u,1),this.faces.push(new THREE.Face3(p,t,u,[z,C,Q])),this.faceVertexUvs[0].push([W,H,B]);this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(ea,ia,ka){ia||console.log("die");return ia.clone().multiplyScalar(ka).addSelf(ea)}function d(ea,ia,ka){var wa=THREE.ExtrudeGeometry.__v1,La=THREE.ExtrudeGeometry.__v2,Sa=THREE.ExtrudeGeometry.__v3,Oa=THREE.ExtrudeGeometry.__v4,hb=THREE.ExtrudeGeometry.__v5,kb=THREE.ExtrudeGeometry.__v6;wa.set(ea.x-ia.x,ea.y-ia.y);La.set(ea.x-ka.x,ea.y-ka.y);wa=wa.normalize();La=La.normalize();Sa.set(-wa.y,wa.x);Oa.set(La.y,-La.x);hb.copy(ea).addSelf(Sa);
kb.copy(ea).addSelf(Oa);if(hb.equals(kb))return Oa.clone();hb.copy(ia).addSelf(Sa);kb.copy(ka).addSelf(Oa);Sa=wa.dot(Oa);Oa=kb.subSelf(hb).dot(Oa);0===Sa&&(console.log("Either infinite or no solutions!"),0===Oa?console.log("Its finite solutions."):console.log("Too bad, no solutions."));Oa/=Sa;return 0>Oa?(ia=Math.atan2(ia.y-ea.y,ia.x-ea.x),ea=Math.atan2(ka.y-ea.y,ka.x-ea.x),ia>ea&&(ea+=2*Math.PI),ka=(ia+ea)/2,ea=-Math.cos(ka),ka=-Math.sin(ka),new THREE.Vector2(ea,ka)):wa.multiplyScalar(Oa).addSelf(hb).subSelf(ea).clone()}
function e(ea,ia){for(E=ea.length;0<=--E;){var ka=E;var wa=E-1;0>wa&&(wa=ea.length-1);var La,Sa=v+2*q;for(La=0;La<Sa;La++){var Oa=V*La,hb=V*(La+1),kb=ia+ka+Oa;Oa=ia+wa+Oa;var Lb=ia+wa+hb;hb=ia+ka+hb;var Bb=ea,Xb=La,Yb=Sa;kb+=M;Oa+=M;Lb+=M;hb+=M;X.faces.push(new THREE.Face4(kb,Oa,Lb,hb,null,null,z));kb=ua.generateSideWallUV(X,a,Bb,b,kb,Oa,Lb,hb,Xb,Yb);X.faceVertexUvs[0].push(kb)}}}function f(ea,ia,ka){X.vertices.push(new THREE.Vector3(ea,ia,ka))}function g(ea,ia,ka,wa){ea+=M;ia+=M;ka+=M;X.faces.push(new THREE.Face3(ea,
ia,ka,null,null,x));ea=wa?ua.generateBottomUV(X,a,b,ea,ia,ka):ua.generateTopUV(X,a,b,ea,ia,ka);X.faceVertexUvs[0].push(ea)}var l=void 0!==b.amount?b.amount:100,h=void 0!==b.bevelThickness?b.bevelThickness:6,n=void 0!==b.bevelSize?b.bevelSize:h-2,q=void 0!==b.bevelSegments?b.bevelSegments:3,r=void 0!==b.bevelEnabled?b.bevelEnabled:!0,v=void 0!==b.steps?b.steps:1,p=b.bendPath,t=b.extrudePath,u=!1,x=b.material,z=b.extrudeMaterial;if(t){var C=t.getSpacedPoints(v);u=!0;r=!1;var Q=new THREE.TubeGeometry.FrenetFrames(t,
v,!1);var F=new THREE.Vector3;var W=new THREE.Vector3;var H=new THREE.Vector3}r||(n=h=q=0);var B,X=this,M=this.vertices.length;p&&a.addWrapPath(p);t=a.extractPoints();p=t.shape;var N=t.holes;if(t=!THREE.Shape.Utils.isClockWise(p)){p=p.reverse();var T=0;for(B=N.length;T<B;T++){var Z=N[T];THREE.Shape.Utils.isClockWise(Z)&&(N[T]=Z.reverse())}t=!1}var Y=THREE.Shape.Utils.triangulateShape(p,N),I=p;T=0;for(B=N.length;T<B;T++)Z=N[T],p=p.concat(Z);var pa,V=p.length,K,ca=Y.length;t=[];var E=0;var ja=I.length;
var R=ja-1;for(pa=E+1;E<ja;E++,R++,pa++)R===ja&&(R=0),pa===ja&&(pa=0),t[E]=d(I[E],I[R],I[pa]);var J=[],da=t.concat();T=0;for(B=N.length;T<B;T++){Z=N[T];var va=[];E=0;ja=Z.length;R=ja-1;for(pa=E+1;E<ja;E++,R++,pa++)R===ja&&(R=0),pa===ja&&(pa=0),va[E]=d(Z[E],Z[R],Z[pa]);J.push(va);da=da.concat(va)}for(R=0;R<q;R++){ja=R/q;var ya=h*(1-ja);pa=n*Math.sin(ja*Math.PI/2);E=0;for(ja=I.length;E<ja;E++){var Aa=c(I[E],t[E],pa);f(Aa.x,Aa.y,-ya)}T=0;for(B=N.length;T<B;T++)for(Z=N[T],va=J[T],E=0,ja=Z.length;E<ja;E++)Aa=
c(Z[E],va[E],pa),f(Aa.x,Aa.y,-ya)}pa=n;for(E=0;E<V;E++)Aa=r?c(p[E],da[E],pa):p[E],u?(W.copy(Q.normals[0]).multiplyScalar(Aa.x),F.copy(Q.binormals[0]).multiplyScalar(Aa.y),H.copy(C[0]).addSelf(W).addSelf(F),f(H.x,H.y,H.z)):f(Aa.x,Aa.y,0);for(ja=1;ja<=v;ja++)for(E=0;E<V;E++)Aa=r?c(p[E],da[E],pa):p[E],u?(W.copy(Q.normals[ja]).multiplyScalar(Aa.x),F.copy(Q.binormals[ja]).multiplyScalar(Aa.y),H.copy(C[ja]).addSelf(W).addSelf(F),f(H.x,H.y,H.z)):f(Aa.x,Aa.y,l/v*ja);for(R=q-1;0<=R;R--){ja=R/q;ya=h*(1-ja);
pa=n*Math.sin(ja*Math.PI/2);E=0;for(ja=I.length;E<ja;E++)Aa=c(I[E],t[E],pa),f(Aa.x,Aa.y,l+ya);T=0;for(B=N.length;T<B;T++)for(Z=N[T],va=J[T],E=0,ja=Z.length;E<ja;E++)Aa=c(Z[E],va[E],pa),u?f(Aa.x,Aa.y+C[v-1].y,C[v-1].x+ya):f(Aa.x,Aa.y,l+ya)}var ua=THREE.ExtrudeGeometry.WorldUVGenerator;(function(){if(r){var ea=0*V;for(E=0;E<ca;E++)K=Y[E],g(K[2]+ea,K[1]+ea,K[0]+ea,!0);ea=v+2*q;ea*=V;for(E=0;E<ca;E++)K=Y[E],g(K[0]+ea,K[1]+ea,K[2]+ea,!1)}else{for(E=0;E<ca;E++)K=Y[E],g(K[2],K[1],K[0],!0);for(E=0;E<ca;E++)K=
Y[E],g(K[0]+V*v,K[1]+V*v,K[2]+V*v,!1)}})();(function(){var ea=0;e(I,ea);ea+=I.length;T=0;for(B=N.length;T<B;T++)Z=N[T],e(Z,ea),ea+=Z.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,1-a.vertices[d].y),new THREE.UV(b,1-e),new THREE.UV(c,1-f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,l){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;var h=a.vertices[f].y;f=a.vertices[f].z;var n=a.vertices[g].x,
q=a.vertices[g].y;g=a.vertices[g].z;var r=a.vertices[l].x,v=a.vertices[l].y;a=a.vertices[l].z;return.01>Math.abs(c-h)?[new THREE.UV(b,e),new THREE.UV(d,f),new THREE.UV(n,g),new THREE.UV(r,a)]:[new THREE.UV(c,e),new THREE.UV(h,f),new THREE.UV(q,g),new THREE.UV(v,a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);var g=b+1;for(c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++)for(d=0,e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,l=d+1,h=a/c,n=b/d,q=new THREE.Vector3(0,1,0);for(a=0;a<l;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*h-e,0,a*n-f));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(q),e.vertexNormals.push(q.clone(),q.clone(),q.clone(),q.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/c,(a+1)/d),new THREE.UV((b+
1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var l,h,n=[],q=[];for(h=0;h<=c;h++){var r=[],v=[];for(l=0;l<=b;l++){var p=l/b,t=h/c,u=new THREE.Vector3;u.x=-a*Math.cos(d+p*e)*Math.sin(f+t*g);u.y=a*Math.cos(f+t*g);u.z=a*Math.sin(d+p*e)*Math.sin(f+t*g);this.vertices.push(u);r.push(this.vertices.length-1);v.push(new THREE.UV(p,
t))}n.push(r);q.push(v)}for(h=0;h<c;h++)for(l=0;l<b;l++){d=n[h][l+1];e=n[h][l];f=n[h+1][l];g=n[h+1][l+1];r=this.vertices[d].clone().normalize();v=this.vertices[e].clone().normalize();p=this.vertices[f].clone().normalize();t=this.vertices[g].clone().normalize();u=q[h][l+1].clone();var x=q[h][l].clone(),z=q[h+1][l].clone(),C=q[h+1][l+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[r,p,t])),this.faceVertexUvs[0].push([u,z,C])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,
e,f,[r,v,p])),this.faceVertexUvs[0].push([u,x,z])):(this.faces.push(new THREE.Face4(d,e,f,g,[r,v,p,t])),this.faceVertexUvs[0].push([u,x,z,C]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;
THREE.TextGeometry=function(a,b){a=(new THREE.TextPath(a,b)).toShapes();b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);if(b.bend){var c=a[a.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(c/2,120),new THREE.Vector2(c,0))}THREE.ExtrudeGeometry.call(this,a,b)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;
THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
(""+a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var l=new THREE.Path;l=this.extractGlyphPoints(e[a],b,c,d,l);d+=l.offset;g.push(l.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,l,h=b.glyphs[a]||b.glyphs["?"];if(h){if(h.o){b=h._cachedOutline||(h._cachedOutline=h.o.split(" "));var n=b.length;for(a=0;a<n;){var q=b[a++];switch(q){case "m":q=b[a++]*c+d;var r=b[a++]*c;f.push(new THREE.Vector2(q,r));e.moveTo(q,r);break;case "l":q=b[a++]*c+d;r=b[a++]*c;f.push(new THREE.Vector2(q,
r));e.lineTo(q,r);break;case "q":q=b[a++]*c+d;r=b[a++]*c;var v=b[a++]*c+d;var p=b[a++]*c;e.quadraticCurveTo(v,p,q,r);if(g=f[f.length-1]){var t=g.x;var u=g.y;g=1;for(l=this.divisions;g<=l;g++){var x=g/l,z=THREE.Shape.Utils.b2(x,t,v,q);x=THREE.Shape.Utils.b2(x,u,p,r);f.push(new THREE.Vector2(z,x))}}break;case "b":q=b[a++]*c+d;r=b[a++]*c;v=b[a++]*c+d;p=b[a++]*-c;var C=b[a++]*c+d;var Q=b[a++]*-c;e.bezierCurveTo(q,r,v,p,C,Q);if(g=f[f.length-1])for(t=g.x,u=g.y,g=1,l=this.divisions;g<=l;g++)x=g/l,z=THREE.Shape.Utils.b3(x,
t,v,C,q),x=THREE.Shape.Utils.b3(x,u,p,Q,r),f.push(new THREE.Vector2(z,x))}}}return{offset:h.ha*c,points:f,path:e}}}};
(function(a){var b=function(c){for(var d=c.length,e=0,f=d-1,g=0;g<d;f=g++)e+=c[f].x*c[g].y-c[g].x*c[f].y;return.5*e};a.Triangulate=function(c,d){var e=c.length;if(3>e)return null;var f=[],g=[],l=[],h;if(0<b(c))for(h=0;h<e;h++)g[h]=h;else for(h=0;h<e;h++)g[h]=e-1-h;var n=2*e;for(h=e-1;2<e;){if(0>=n--){console.log("Warning, unable to triangulate polygon!");break}var q=h;e<=q&&(q=0);h=q+1;e<=h&&(h=0);var r=h+1;e<=r&&(r=0);a:{var v=c;var p=q,t=h,u=r,x=e,z=g,C;var Q=v[z[p]].x;var F=v[z[p]].y;var W=v[z[t]].x;
var H=v[z[t]].y;var B=v[z[u]].x;var X=v[z[u]].y;if(1E-10>(W-Q)*(X-F)-(H-F)*(B-Q))v=!1;else{for(C=0;C<x;C++)if(C!=p&&C!=t&&C!=u){var M=v[z[C]].x;var N=v[z[C]].y;var T=B-W;var Z=X-H;var Y=Q-B;var I=F-X;var pa=W-Q;var V=H-F;var K=M-Q;var ca=N-F;var E=M-W;var ja=N-H;M-=B;N-=X;T=T*ja-Z*E;pa=pa*ca-V*K;Y=Y*N-I*M;if(0<=T&&0<=Y&&0<=pa){v=!1;break a}}v=!0}}if(v){f.push([c[g[q]],c[g[h]],c[g[r]]]);l.push([g[q],g[h],g[r]]);q=h;for(r=h+1;r<e;q++,r++)g[q]=g[r];e--;n=2*e}}return d?l:f};a.Triangulate.area=b;return a})(THREE.FontUtils);
self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var f=d/this.segmentsT*this.arc,g=c/this.segmentsR*Math.PI*2;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var l=new THREE.Vector3;l.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);l.y=(this.radius+this.tube*Math.cos(g))*Math.sin(f);l.z=
this.tube*Math.sin(g);this.vertices.push(l);a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR));b.push(l.clone().subSelf(e).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){e=(this.segmentsT+1)*c+d-1;f=(this.segmentsT+1)*(c-1)+d-1;g=(this.segmentsT+1)*(c-1)+d;l=(this.segmentsT+1)*c+d;var h=new THREE.Face4(e,f,g,l,[b[e],b[f],b[g],b[l]]);h.normal.addSelf(b[e]);h.normal.addSelf(b[f]);h.normal.addSelf(b[g]);h.normal.addSelf(b[l]);h.normal.normalize();this.faces.push(h);
this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[l].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function l(r,v,p,t,u,x){var z=Math.cos(r);Math.cos(v);v=Math.sin(r);r*=p/t;p=Math.cos(r);z*=u*(2+p)*.5;v=u*(2+p)*v*.5;u=x*u*Math.sin(r)*.5;return new THREE.Vector3(z,v,u)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.segmentsR;++a)for(this.grid[a]=
Array(this.segmentsT),b=0;b<this.segmentsT;++b){var h=a/this.segmentsR*2*this.p*Math.PI;g=b/this.segmentsT*2*Math.PI;f=l(h,g,this.q,this.p,this.radius,this.heightScale);h=l(h+.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(h,f);d.add(h,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();h=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=h*d.x+g*e.x;f.y+=h*d.y+g*e.y;f.z+=h*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}for(a=0;a<this.segmentsR;++a)for(b=
0;b<this.segmentsT;++b){e=(a+1)%this.segmentsR;f=(b+1)%this.segmentsT;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.UV(a/this.segmentsR,b/this.segmentsT);h=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT);var n=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),q=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,h,n,q])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};
THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];f=this.segments+1;var g=new THREE.Vector3;b=new THREE.TubeGeometry.FrenetFrames(a,b,e);var l=b.tangents;var h=b.normals;var n=b.binormals;this.tangents=l;this.normals=h;this.binormals=n;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);var q=a.getPointAt(d);d=l[b];var r=h[b];var v=n[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
q,c,255)),this.debug.add(new THREE.ArrowHelper(r,q,c,16711680)),this.debug.add(new THREE.ArrowHelper(v,q,c,65280)));for(d=0;d<this.segmentsRadius;d++){var p=d/this.segmentsRadius*2*Math.PI;var t=-this.radius*Math.cos(p);p=this.radius*Math.sin(p);g.copy(q);g.x+=t*r.x+p*v.x;g.y+=t*r.y+p*v.y;g.z+=t*r.z+p*v.z;this.grid[b][d]=this.vertices.push(new THREE.Vector3(g.x,g.y,g.z))-1}}for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++)f=e?(b+1)%this.segments:b+1,g=(d+1)%this.segmentsRadius,a=this.grid[b][d],
c=this.grid[f][d],f=this.grid[f][g],g=this.grid[b][g],l=new THREE.UV(b/this.segments,d/this.segmentsRadius),h=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius),n=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius),r=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(a,c,f,g)),this.faceVertexUvs[0].push([l,h,n,r]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=new THREE.Geometry;
THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],l=new THREE.Vector3,h=new THREE.Matrix4;b+=1;var n;this.tangents=e;this.normals=f;this.binormals=g;for(n=0;n<b;n++){var q=n/(b-1);e[n]=a.getTangentAt(q);e[n].normalize()}f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;n=Math.abs(e[0].x);q=Math.abs(e[0].y);var r=Math.abs(e[0].z);n<=a&&(a=n,d.set(1,0,0));q<=a&&(a=q,d.set(0,1,0));r<=a&&d.set(0,0,1);l.cross(e[0],
d).normalize();f[0].cross(e[0],l);g[0].cross(e[0],f[0]);for(n=1;n<b;n++)f[n]=f[n-1].clone(),g[n]=g[n-1].clone(),l.cross(e[n-1],e[n]),1E-4<l.length()&&(l.normalize(),d=Math.acos(e[n-1].dot(e[n])),h.makeRotationAxis(l,d).multiplyVector3(f[n])),g[n].cross(e[n],f[n]);if(c)for(d=Math.acos(f[0].dot(f[b-1])),d/=b-1,0<e[0].dot(l.cross(f[0],f[b-1]))&&(d=-d),n=1;n<b;n++)h.makeRotationAxis(e[n],d*n).multiplyVector3(f[n]),g[n].cross(e[n],f[n])};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(v){var p=v.normalize().clone();p.index=h.vertices.push(p)-1;var t=Math.atan2(v.z,-v.x)/2/Math.PI+.5;v=Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))/Math.PI+.5;p.uv=new THREE.UV(t,v);return p}function f(v,p,t,u){1>u?(u=new THREE.Face3(v.index,p.index,t.index,[v.clone(),p.clone(),t.clone()]),u.centroid.addSelf(v).addSelf(p).addSelf(t).divideScalar(3),u.normal=u.centroid.clone().normalize(),h.faces.push(u),u=Math.atan2(u.centroid.z,-u.centroid.x),h.faceVertexUvs[0].push([l(v.uv,
v,u),l(p.uv,p,u),l(t.uv,t,u)])):(--u,f(v,g(v,p),g(v,t),u),f(g(v,p),p,g(p,t),u),f(g(v,t),g(p,t),t,u),f(g(v,p),g(p,t),g(v,t),u))}function g(v,p){r[v.index]||(r[v.index]=[]);r[p.index]||(r[p.index]=[]);var t=r[v.index][p.index];void 0===t&&(r[v.index][p.index]=r[p.index][v.index]=t=e((new THREE.Vector3).add(v,p).divideScalar(2)));return t}function l(v,p,t){0>t&&1===v.u&&(v=new THREE.UV(v.u-1,v.v));0===p.x&&0===p.z&&(v=new THREE.UV(t/2/Math.PI+.5,v.v));return v}THREE.Geometry.call(this);c=c||1;d=d||0;
for(var h=this,n=0,q=a.length;n<q;n++)e(new THREE.Vector3(a[n][0],a[n][1],a[n][2]));var r=[];a=this.vertices;n=0;for(q=b.length;n<q;n++)f(a[b[n][0]],a[b[n][1]],a[b[n][2]],d);this.mergeVertices();n=0;for(q=this.vertices.length;n<q;n++)this.vertices[n].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=new THREE.Geometry;THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};
THREE.TetrahedronGeometry.prototype=new THREE.Geometry;THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var l,h,n=b+1;for(l=0;l<=c;l++){var q=l/c;for(h=0;h<=b;h++){var r=h/b;r=a(r,q);e.push(r)}}for(l=0;l<c;l++)for(h=0;h<b;h++){a=l*n+h;e=l*n+h+1;q=(l+1)*n+h;r=(l+1)*n+h+1;var v=new THREE.UV(l/b,h/c);var p=new THREE.UV(l/b,(h+1)/c);var t=new THREE.UV((l+1)/b,h/c);var u=new THREE.UV((l+1)/b,(h+1)/c);d?(f.push(new THREE.Face3(a,e,q)),f.push(new THREE.Face3(e,r,q)),
g.push([v,p,t]),g.push([p,u,t])):(f.push(new THREE.Face4(a,e,r,q)),g.push([v,p,t,u]))}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=new THREE.Geometry;THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;
THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3);a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1);var c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=new THREE.Object3D;THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,.05,.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=new THREE.Object3D;THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.getRotationFromMatrix(this.matrix,this.scale)};
THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(e,f,g){c(e,g);c(f,g)}function c(e,f){d.lineGeometry.vertices.push(new THREE.Vector3);d.lineGeometry.colors.push(new THREE.Color(f));void 0===d.pointMap[e]&&(d.pointMap[e]=[]);d.pointMap[e].push(d.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var d=this;this.lineGeometry=new THREE.Geometry;this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.pointMap={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4",
"n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a);
this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces);this.add(this.lines)};THREE.CameraHelper.prototype=new THREE.Object3D;THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;
THREE.CameraHelper.prototype.update=function(){function a(c,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);c=b.pointMap[c];if(void 0!==c)for(d=0,e=c.length;d<e;d++)b.lineGeometry.vertices[c[d]].copy(THREE.CameraHelper.__v)}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,
1);a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",.7,1.1,-1);a("u2",-.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.lineGeometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){v.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(J,da,va,ya,Aa,ua,ea){var ia=new THREE.Face4(J,da,va,ya,null,Aa.color,Aa.material);if(v.useOldVertexColors){ia.vertexColors=[];for(var ka,wa,La,Sa=0;4>Sa;Sa++){La=ua[Sa];ka=new THREE.Color;ka.setRGB(0,0,0);for(var Oa=0;Oa<La.length;Oa++)wa=Aa.vertexColors[La[Oa]-1],ka.r+=wa.r,ka.g+=wa.g,ka.b+=wa.b;ka.r/=La.length;ka.g/=
La.length;ka.b/=La.length;ia.vertexColors[Sa]=ka}}q.push(ia);v.supportUVs&&(Aa=[f(J,""),f(da,ea),f(va,ea),f(ya,ea)],Aa[0]?Aa[1]?Aa[2]?Aa[3]?r.push(Aa):b("d :( ",ya+":"+ea):b("c :( ",va+":"+ea):b("b :( ",da+":"+ea):b("a :( ",J+":"+ea))}function e(J,da){return Math.min(J,da)+"_"+Math.max(J,da)}function f(J,da){da=J+":"+da;var va=C[da];return va?va:(J>=Q&&J<Q+t.length?b("face pt"):b("edge pt"),c("warning, UV not found for",da),null)}function g(J,da,va){var ya=J+":"+da;ya in C?c("dup vertexNo",J,"oldFaceNo",
da,"value",va,"key",ya,C[ya]):C[ya]=va}function l(J,da){void 0===T[J]&&(T[J]=[]);T[J].push(da)}function h(J,da,va){void 0===Z[J]&&(Z[J]={});Z[J][da]=va}var n=[],q=[],r=[],v=this,p=a.vertices,t=a.faces;n=p.concat();var u=[],x={},z={},C={},Q=p.length,F,W,H=a.faceVertexUvs[0];b("originalFaces, uvs, originalVerticesLength",t.length,H.length,Q);if(v.supportUVs){var B=0;for(F=H.length;B<F;B++){var X=0;for(W=H[B].length;X<W;X++){var M=t[B]["abcd".charAt(X)];g(M,B,H[B][X])}}}0==H.length&&(v.supportUVs=!1);
B=0;for(N in C)B++;B||(v.supportUVs=!1,b("no uvs"));b("-- Original Faces + Vertices UVs completed",C,"vs",H.length);B=0;for(F=t.length;B<F;B++){var N=t[B];u.push(N.centroid);n.push(N.centroid);v.supportUVs&&(H=new THREE.UV,N instanceof THREE.Face3?(H.u=f(N.a,B).u+f(N.b,B).u+f(N.c,B).u,H.v=f(N.a,B).v+f(N.b,B).v+f(N.c,B).v,H.u/=3,H.v/=3):N instanceof THREE.Face4&&(H.u=f(N.a,B).u+f(N.b,B).u+f(N.c,B).u+f(N.d,B).u,H.v=f(N.a,B).v+f(N.b,B).v+f(N.c,B).v+f(N.d,B).v,H.u/=4,H.v/=4),g(Q+B,"",H))}b("-- added UVs for new Faces",
C);F=function(J){function da(ia,ka){void 0===ya[ia]&&(ya[ia]=[]);ya[ia].push(ka)}var va,ya={};var Aa=0;for(va=J.faces.length;Aa<va;Aa++){var ua=J.faces[Aa];if(ua instanceof THREE.Face3){var ea=e(ua.a,ua.b);da(ea,Aa);ea=e(ua.b,ua.c);da(ea,Aa);ea=e(ua.c,ua.a);da(ea,Aa)}else ua instanceof THREE.Face4&&(ea=e(ua.a,ua.b),da(ea,Aa),ea=e(ua.b,ua.c),da(ea,Aa),ea=e(ua.c,ua.d),da(ea,Aa),ea=e(ua.d,ua.a),da(ea,Aa))}return ya}(a);M=0;var T={},Z={};for(B in F){H=F[B];var Y=B.split("_");var I=Y[0];Y=Y[1];l(I,[I,
Y]);l(Y,[I,Y]);X=0;for(W=H.length;X<W;X++)N=H[X],h(I,N,B),h(Y,N,B);2>H.length&&(z[B]=!0)}b("vertexEdgeMap",T,"vertexFaceMap",Z);for(B in F)H=F[B],N=H[0],W=H[1],Y=B.split("_"),I=Y[0],Y=Y[1],H=new THREE.Vector3,z[B]?(H.addSelf(p[I]),H.addSelf(p[Y]),H.multiplyScalar(.5)):(H.addSelf(u[N]),H.addSelf(u[W]),H.addSelf(p[I]),H.addSelf(p[Y]),H.multiplyScalar(.25)),x[B]=Q+t.length+M,n.push(H),M++,v.supportUVs&&(H=new THREE.UV,H.u=f(I,N).u+f(Y,N).u,H.v=f(I,N).v+f(Y,N).v,H.u/=2,H.v/=2,g(x[B],N,H),z[B]||(H=new THREE.UV,
H.u=f(I,W).u+f(Y,W).u,H.v=f(I,W).v+f(Y,W).v,H.u/=2,H.v/=2,g(x[B],W,H)));b("-- Step 2 done");W=["123","12","2","23"];Y=["123","23","3","31"];var pa=["123","31","1","12"],V=["1234","12","2","23"],K=["1234","23","3","34"],ca=["1234","34","4","41"],E=["1234","41","1","12"];B=0;for(F=u.length;B<F;B++)if(N=t[B],H=Q+B,N instanceof THREE.Face3){M=e(N.a,N.b);I=e(N.b,N.c);var ja=e(N.c,N.a);d(H,x[M],N.b,x[I],N,W,B);d(H,x[I],N.c,x[ja],N,Y,B);d(H,x[ja],N.a,x[M],N,pa,B)}else if(N instanceof THREE.Face4){M=e(N.a,
N.b);I=e(N.b,N.c);ja=e(N.c,N.d);var R=e(N.d,N.a);d(H,x[M],N.b,x[I],N,V,B);d(H,x[I],N.c,x[ja],N,K,B);d(H,x[ja],N.d,x[R],N,ca,B);d(H,x[R],N.a,x[M],N,E,B)}else b("face should be a face!",N);x=new THREE.Vector3;N=new THREE.Vector3;B=0;for(F=p.length;B<F;B++)if(void 0!==T[B]){x.set(0,0,0);N.set(0,0,0);I=new THREE.Vector3(0,0,0);H=0;for(X in Z[B])x.addSelf(u[X]),H++;W=0;M=T[B].length;for(X=0;X<M;X++)z[e(T[B][X][0],T[B][X][1])]&&W++;if(2!=W){x.divideScalar(H);for(X=0;X<M;X++)H=T[B][X],H=p[H[0]].clone().addSelf(p[H[1]]).divideScalar(2),
N.addSelf(H);N.divideScalar(M);I.addSelf(p[B]);I.multiplyScalar(M-3);I.addSelf(x);I.addSelf(N.multiplyScalar(2));I.divideScalar(M);n[B]=I}}a.vertices=n;a.faces=q;a.faceVertexUvs[0]=r;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=new THREE.Object3D;THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c=2*-this.positionScreen.x,d=2*-this.positionScreen.y;for(a=0;a<b;a++){var e=this.lensFlares[a];e.x=this.positionScreen.x+c*e.distance;e.y=this.positionScreen.y+d*e.distance;e.wantedRotation=e.x*Math.PI*.25;e.rotation+=.25*(e.wantedRotation-e.rotation)}};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];a=this.geometry.morphTargets.length;this.createAnimation("__default",0,a-1,a/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=new THREE.Mesh;THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var l=e.morphTargets[f].name.match(b);if(l&&1<l.length){var h=l[1];d[h]||(d[h]={start:Infinity,end:-Infinity});l=d[h];f<l.start&&(l.start=f);f>l.end&&(l.end=f);c||=h}}for(h in d)l=d[h],this.createAnimation(h,l.start,l.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){if(a=this.animationsMap[a])a.fps=b,a.duration=(a.end-a.start)/a.fps};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){if(a=this.animationsMap[a])a.duration=b,a.fps=(a.end-a.start)/a.duration};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){if(a=this.animationsMap[a])a.weight=b};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){if(a=this.animationsMap[a])a.time=b};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(t){var u=b.createProgram(),x=b.createShader(b.FRAGMENT_SHADER),z=b.createShader(b.VERTEX_SHADER);b.shaderSource(x,t.fragmentShader);b.shaderSource(z,t.vertexShader);b.compileShader(x);b.compileShader(z);b.attachShader(u,x);b.attachShader(u,z);b.linkProgram(u);return u}var b,c,d,e,f,g,l,h,n,q,r,v,p;this.init=function(t){b=t.context;c=t;d=new Float32Array(16);e=new Uint16Array(6);t=0;d[t++]=-1;d[t++]=-1;d[t++]=0;d[t++]=0;d[t++]=1;d[t++]=-1;d[t++]=1;d[t++]=
0;d[t++]=1;d[t++]=1;d[t++]=1;d[t++]=1;d[t++]=-1;d[t++]=1;d[t++]=0;d[t++]=1;t=0;e[t++]=0;e[t++]=1;e[t++]=2;e[t++]=0;e[t++]=2;e[t++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);l=b.createTexture();h=b.createTexture();b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(n=!1,q=a(THREE.ShaderFlares.lensFlare)):(n=!0,q=a(THREE.ShaderFlares.lensFlareVertexTexture));r={};v={};r.vertex=b.getAttribLocation(q,"position");r.uv=b.getAttribLocation(q,"uv");v.renderType=b.getUniformLocation(q,"renderType");v.map=b.getUniformLocation(q,"map");v.occlusionMap=b.getUniformLocation(q,"occlusionMap");v.opacity=b.getUniformLocation(q,"opacity");v.color=b.getUniformLocation(q,
"color");v.scale=b.getUniformLocation(q,"scale");v.rotation=b.getUniformLocation(q,"rotation");v.screenPosition=b.getUniformLocation(q,"screenPosition");p=!1};this.render=function(t,u,x,z){t=t.__webglFlares;var C=t.length;if(C){var Q=new THREE.Vector3,F=z/x,W=.5*x,H=.5*z,B=16/z,X=new THREE.Vector2(B*F,B),M=new THREE.Vector3(1,1,0),N=new THREE.Vector2(1,1),T=v;B=r;b.useProgram(q);p||(b.enableVertexAttribArray(r.vertex),b.enableVertexAttribArray(r.uv),p=!0);b.uniform1i(T.occlusionMap,0);b.uniform1i(T.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(B.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(B.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var Z,Y;for(Z=0;Z<C;Z++){B=16/z;X.set(B*F,B);var I=t[Z];Q.set(I.matrixWorld.elements[12],I.matrixWorld.elements[13],I.matrixWorld.elements[14]);u.matrixWorldInverse.multiplyVector3(Q);u.projectionMatrix.multiplyVector3(Q);M.copy(Q);N.x=M.x*W+W;N.y=M.y*H+H;if(n||0<N.x&&N.x<x&&0<N.y&&N.y<z){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,l);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,N.x-8,N.y-8,16,16,0);b.uniform1i(T.renderType,0);b.uniform2f(T.scale,X.x,X.y);b.uniform3f(T.screenPosition,M.x,M.y,M.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,N.x-8,N.y-8,16,16,0);b.uniform1i(T.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
l);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);I.positionScreen.copy(M);I.customUpdateCallback?I.customUpdateCallback(I):I.updateLensFlares();b.uniform1i(T.renderType,2);b.enable(b.BLEND);var pa=0;for(Y=I.lensFlares.length;pa<Y;pa++){var V=I.lensFlares[pa];.001<V.opacity&&.001<V.scale&&(M.x=V.x,M.y=V.y,M.z=V.z,B=V.size*V.scale/z,X.x=B*F,X.y=B,b.uniform3f(T.screenPosition,M.x,M.y,M.z),b.uniform2f(T.scale,X.x,X.y),b.uniform1f(T.rotation,V.rotation),b.uniform1f(T.opacity,V.opacity),b.uniform3f(T.color,
V.color.r,V.color.g,V.color.b),c.setBlending(V.blending,V.blendEquation,V.blendSrc,V.blendDst),c.setTexture(V.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4,g=new THREE.Vector3,l=new THREE.Vector3;this.init=function(h){a=h.context;b=h;h=THREE.ShaderLib.depthRGBA;var n=THREE.UniformsUtils.clone(h.uniforms);c=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:n});d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:n,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(h,
n){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(h,n)};this.update=function(h,n){var q,r,v=[];var p=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);b.shadowMapCullFrontFaces?a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);var t=0;for(q=h.__lights.length;t<q;t++){var u=h.__lights[t];if(u.castShadow)if(u instanceof THREE.DirectionalLight&&u.shadowCascade)for(r=0;r<u.shadowCascadeCount;r++){if(u.shadowCascadeArray[r])var x=u.shadowCascadeArray[r];else{var z=u;var C=
r;x=new THREE.DirectionalLight;x.isVirtual=!0;x.onlyShadow=!0;x.castShadow=!0;x.shadowCameraNear=z.shadowCameraNear;x.shadowCameraFar=z.shadowCameraFar;x.shadowCameraLeft=z.shadowCameraLeft;x.shadowCameraRight=z.shadowCameraRight;x.shadowCameraBottom=z.shadowCameraBottom;x.shadowCameraTop=z.shadowCameraTop;x.shadowCameraVisible=z.shadowCameraVisible;x.shadowDarkness=z.shadowDarkness;x.shadowBias=z.shadowCascadeBias[C];x.shadowMapWidth=z.shadowCascadeWidth[C];x.shadowMapHeight=z.shadowCascadeHeight[C];
x.pointsWorld=[];x.pointsFrustum=[];var Q=x.pointsWorld;var F=x.pointsFrustum;for(var W=0;8>W;W++)Q[W]=new THREE.Vector3,F[W]=new THREE.Vector3;Q=z.shadowCascadeNearZ[C];z=z.shadowCascadeFarZ[C];F[0].set(-1,-1,Q);F[1].set(1,-1,Q);F[2].set(-1,1,Q);F[3].set(1,1,Q);F[4].set(-1,-1,z);F[5].set(1,-1,z);F[6].set(-1,1,z);F[7].set(1,1,z);x.originalCamera=n;F=new THREE.Gyroscope;F.position=u.shadowCascadeOffset;F.add(x);F.add(x.target);n.add(F);u.shadowCascadeArray[r]=x;console.log("Created virtualLight",x)}C=
u;Q=r;z=C.shadowCascadeArray[Q];z.position.copy(C.position);z.target.position.copy(C.target.position);z.lookAt(z.target);z.shadowCameraVisible=C.shadowCameraVisible;z.shadowDarkness=C.shadowDarkness;z.shadowBias=C.shadowCascadeBias[Q];F=C.shadowCascadeNearZ[Q];C=C.shadowCascadeFarZ[Q];z=z.pointsFrustum;z[0].z=F;z[1].z=F;z[2].z=F;z[3].z=F;z[4].z=C;z[5].z=C;z[6].z=C;z[7].z=C;v[p]=x;p++}else v[p]=u,p++}t=0;for(q=v.length;t<q;t++){u=v[t];u.shadowMap||(u.shadowMap=new THREE.WebGLRenderTarget(u.shadowMapWidth,
u.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),u.shadowMapSize=new THREE.Vector2(u.shadowMapWidth,u.shadowMapHeight),u.shadowMatrix=new THREE.Matrix4);if(!u.shadowCamera){if(u instanceof THREE.SpotLight)u.shadowCamera=new THREE.PerspectiveCamera(u.shadowCameraFov,u.shadowMapWidth/u.shadowMapHeight,u.shadowCameraNear,u.shadowCameraFar);else if(u instanceof THREE.DirectionalLight)u.shadowCamera=new THREE.OrthographicCamera(u.shadowCameraLeft,u.shadowCameraRight,
u.shadowCameraTop,u.shadowCameraBottom,u.shadowCameraNear,u.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}h.add(u.shadowCamera);b.autoUpdateScene&&h.updateMatrixWorld()}u.shadowCameraVisible&&!u.cameraHelper&&(u.cameraHelper=new THREE.CameraHelper(u.shadowCamera),u.shadowCamera.add(u.cameraHelper));if(u.isVirtual&&x.originalCamera==n){r=n;p=u.shadowCamera;F=u.pointsFrustum;z=u.pointsWorld;g.set(Infinity,Infinity,Infinity);l.set(-Infinity,-Infinity,-Infinity);for(C=
0;8>C;C++)Q=z[C],Q.copy(F[C]),THREE.ShadowMapPlugin.__projector.unprojectVector(Q,r),p.matrixWorldInverse.multiplyVector3(Q),Q.x<g.x&&(g.x=Q.x),Q.x>l.x&&(l.x=Q.x),Q.y<g.y&&(g.y=Q.y),Q.y>l.y&&(l.y=Q.y),Q.z<g.z&&(g.z=Q.z),Q.z>l.z&&(l.z=Q.z);p.left=g.x;p.right=l.x;p.top=l.y;p.bottom=g.y;p.updateProjectionMatrix()}p=u.shadowMap;F=u.shadowMatrix;r=u.shadowCamera;r.position.copy(u.matrixWorld.getPosition());r.lookAt(u.target.matrixWorld.getPosition());r.updateMatrixWorld();r.matrixWorldInverse.getInverse(r.matrixWorld);
u.cameraHelper&&(u.cameraHelper.lines.visible=u.shadowCameraVisible);u.shadowCameraVisible&&u.cameraHelper.update();F.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);F.multiplySelf(r.projectionMatrix);F.multiplySelf(r.matrixWorldInverse);r._viewMatrixArray||(r._viewMatrixArray=new Float32Array(16));r._projectionMatrixArray||(r._projectionMatrixArray=new Float32Array(16));r.matrixWorldInverse.flattenToArray(r._viewMatrixArray);r.projectionMatrix.flattenToArray(r._projectionMatrixArray);f.multiply(r.projectionMatrix,
r.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(p);b.clear();z=h.__webglObjects;u=0;for(p=z.length;u<p;u++)C=z[u],F=C.object,C.render=!1,!F.visible||!F.castShadow||F instanceof THREE.Mesh&&F.frustumCulled&&!e.contains(F)||(F._modelViewMatrix.multiply(r.matrixWorldInverse,F.matrixWorld),C.render=!0);u=0;for(p=z.length;u<p;u++)C=z[u],C.render&&(F=C.object,C=C.buffer,Q=F.customDepthMaterial?F.customDepthMaterial:F.geometry.morphTargets.length?d:c,C instanceof THREE.BufferGeometry?b.renderBufferDirect(r,
h.__lights,null,Q,C,F):b.renderBuffer(r,h.__lights,null,Q,C,F));z=h.__webglObjectsImmediate;u=0;for(p=z.length;u<p;u++)C=z[u],F=C.object,F.visible&&F.castShadow&&(F._modelViewMatrix.multiply(r.matrixWorldInverse,F.matrixWorld),b.renderImmediateObject(r,h.__lights,null,c,F))}t=b.getClearColor();q=b.getClearAlpha();a.clearColor(t.r,t.g,t.b,q);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(r,v){return v.z-r.z}var b,c,d,e,f,g,l,h,n,q;this.init=function(r){b=r.context;c=r;d=new Float32Array(16);e=new Uint16Array(6);r=0;d[r++]=-1;d[r++]=-1;d[r++]=0;d[r++]=1;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=0;d[r++]=-1;d[r++]=1;d[r++]=0;r=d[r++]=0;e[r++]=0;e[r++]=1;e[r++]=2;e[r++]=0;e[r++]=2;e[r++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);r=THREE.ShaderSprite.sprite;var v=b.createProgram(),p=b.createShader(b.FRAGMENT_SHADER),t=b.createShader(b.VERTEX_SHADER);b.shaderSource(p,r.fragmentShader);b.shaderSource(t,r.vertexShader);b.compileShader(p);b.compileShader(t);b.attachShader(v,p);b.attachShader(v,t);b.linkProgram(v);l=v;h={};n={};h.position=b.getAttribLocation(l,"position");h.uv=b.getAttribLocation(l,"uv");n.uvOffset=b.getUniformLocation(l,"uvOffset");n.uvScale=b.getUniformLocation(l,
"uvScale");n.rotation=b.getUniformLocation(l,"rotation");n.scale=b.getUniformLocation(l,"scale");n.alignment=b.getUniformLocation(l,"alignment");n.color=b.getUniformLocation(l,"color");n.map=b.getUniformLocation(l,"map");n.opacity=b.getUniformLocation(l,"opacity");n.useScreenCoordinates=b.getUniformLocation(l,"useScreenCoordinates");n.affectedByDistance=b.getUniformLocation(l,"affectedByDistance");n.screenPosition=b.getUniformLocation(l,"screenPosition");n.modelViewMatrix=b.getUniformLocation(l,"modelViewMatrix");
n.projectionMatrix=b.getUniformLocation(l,"projectionMatrix");q=!1};this.render=function(r,v,p,t){r=r.__webglSprites;var u=r.length;if(u){var x=h,z=n,C=t/p;p*=.5;var Q=.5*t,F=!0;b.useProgram(l);q||(b.enableVertexAttribArray(x.position),b.enableVertexAttribArray(x.uv),q=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(x.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(x.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.uniformMatrix4fv(z.projectionMatrix,
!1,v._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(z.map,0);var W=[];for(x=0;x<u;x++){var H=r[x];H.visible&&0!==H.opacity&&(H.useScreenCoordinates?H.z=-H.position.z:(H._modelViewMatrix.multiply(v.matrixWorldInverse,H.matrixWorld),H.z=-H._modelViewMatrix.elements[14]))}r.sort(a);for(x=0;x<u;x++)H=r[x],H.visible&&0!==H.opacity&&H.map&&H.map.image&&H.map.image.width&&(H.useScreenCoordinates?(b.uniform1i(z.useScreenCoordinates,1),b.uniform3f(z.screenPosition,(H.position.x-p)/p,(Q-H.position.y)/
Q,Math.max(0,Math.min(1,H.position.z)))):(b.uniform1i(z.useScreenCoordinates,0),b.uniform1i(z.affectedByDistance,H.affectedByDistance?1:0),b.uniformMatrix4fv(z.modelViewMatrix,!1,H._modelViewMatrix.elements)),v=H.map.image.width/(H.scaleByViewport?t:1),W[0]=v*C*H.scale.x,W[1]=v*H.scale.y,b.uniform2f(z.uvScale,H.uvScale.x,H.uvScale.y),b.uniform2f(z.uvOffset,H.uvOffset.x,H.uvOffset.y),b.uniform2f(z.alignment,H.alignment.x,H.alignment.y),b.uniform1f(z.opacity,H.opacity),b.uniform3f(z.color,H.color.r,
H.color.g,H.color.b),b.uniform1f(z.rotation,H.rotation),b.uniform2fv(z.scale,W),H.mergeWith3D&&!F?(b.enable(b.DEPTH_TEST),F=!0):!H.mergeWith3D&&F&&(b.disable(b.DEPTH_TEST),F=!1),c.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),c.setTexture(H.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var l=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:l});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:l,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(g,
l){this.enabled&&this.update(g,l)};this.update=function(g,l){var h;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();l._viewMatrixArray||(l._viewMatrixArray=new Float32Array(16));l._projectionMatrixArray||(l._projectionMatrixArray=new Float32Array(16));l.matrixWorldInverse.getInverse(l.matrixWorld);l.matrixWorldInverse.flattenToArray(l._viewMatrixArray);l.projectionMatrix.flattenToArray(l._projectionMatrixArray);f.multiply(l.projectionMatrix,l.matrixWorldInverse);
e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();var n=g.__webglObjects;var q=0;for(h=n.length;q<h;q++){var r=n[q];var v=r.object;r.render=!1;!v.visible||v instanceof THREE.Mesh&&v.frustumCulled&&!e.contains(v)||(v._modelViewMatrix.multiply(l.matrixWorldInverse,v.matrixWorld),r.render=!0)}q=0;for(h=n.length;q<h;q++)if(r=n[q],r.render){v=r.object;r=r.buffer;b.setObjectFaces(v);var p=v.customDepthMaterial?v.customDepthMaterial:v.geometry.morphTargets.length?d:c;r instanceof THREE.BufferGeometry?
b.renderBufferDirect(l,g.__lights,null,p,r,v):b.renderBuffer(l,g.__lights,null,p,r,v)}n=g.__webglObjectsImmediate;q=0;for(h=n.length;q<h;q++)r=n[q],v=r.object,v.visible&&v.castShadow&&(v._modelViewMatrix.multiply(l.matrixWorldInverse,v.matrixWorld),b.renderImmediateObject(l,g.__lights,null,c,v));q=b.getClearColor();h=b.getClearAlpha();a.clearColor(q.r,q.g,q.b,h);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
var CollisionUtils={collides:function(a,b,c,d,e,f){b.matrixWorld.getPosition().clone();c=c.matrixWorld.getPosition().clone();d=d.matrixWorld.getPosition().clone();b=this.getDirectionVector(a,b);a=new THREE.Ray(c,b);c=new THREE.Ray(d,b);b=[];a=a.intersectObjects(f);f=c.intersectObjects(f);0==a.length&&0<f.length?b=f:0==f.length&&0<a.length?b=a:0<a.length&&0<f.length&&(b=a[0].distance>f[0].distance?f:a);return 0<b.length&&b[0].distance<=Math.abs(e)?!0:!1},collidesMultiple:function(a,b,c,d,e){b.matrixWorld.getPosition().clone();
a=this.getDirectionVector(a,b);for(b=0;b<c.length;b++){var f=c[b].matrixWorld.getPosition().clone();f=(new THREE.Ray(f,a)).intersectObjects(e);if(void 0!==f&&0<f.length&&f[0].distance<=Math.abs(d))return!0}return!1},getDirectionVector:function(a,b){return b.matrixWorld.getPosition().clone().subSelf(a).normalize()}},StringFormat={pad:function(a,b,c){var d=0<=a?1:-1;a=Math.abs(a).toString();for(0>d&&b--;a.length<b;)a=c+a;0>d&&(a="-"+a);return a},toFixed:function(a,b){return Math.floor(100*a)/100}};
UTILS={getAxis:function(a){a=a||1E3;a=[{points:[[0,0,0],[a,0,0]],color:16711680},{points:[[0,0,0],[-a,0,0]],color:8388608},{points:[[0,0,0],[0,a,0]],color:65280},{points:[[0,0,0],[0,-a,0]],color:32768},{points:[[0,0,0],[0,0,a]],color:255},{points:[[0,0,0],[0,0,-a]],color:128}];for(var b=new THREE.Object3D,c=0;c<a.length;c++){for(var d=a[c],e=new THREE.Geometry,f=0;f<d.points.length;f++){var g=d.points[f];e.vertices.push(new THREE.Vector3(g[0],g[1],g[2]))}d=new THREE.LineBasicMaterial({color:d.color,
linewidth:2});e=new THREE.Line(e,d);e.position.x=0;e.position.y=0;e.position.z=0;b.add(e)}return b},rangeRand:function(a,b){a=a||-1;return a+Math.random()*((b||1)-a)}};
function CompassDisplay(a,b){var c=document.createElement("canvas"),d=c.getContext("2d"),e=a/2,f=b/2,g=Math.round(b/15);c.width=a;c.height=b;this.direction=0;this.domElement=c;d.font=g+"pt monospace";this.update=function(){d.clearRect(0,0,a,b);d.strokeStyle="#fff";var l=Math.min(e,f),h=.1*l;l-=h;var n=l-h,q=StringFormat.pad(Math.floor(0<=this.direction?this.direction%360:360+this.direction%360),4,"0");d.fillStyle="#fff";d.fillText(q,e-d.measureText(q).width/2,f+g/2);d.save();d.translate(a/2,b/2);
d.rotate(-this.direction*Math.PI/180);q=0;for(var r=2*Math.PI/32,v=0;32>q;q++,v+=r){var p=Math.sin(v),t=Math.cos(v);d.lineWidth=0==q%4?3:.5;d.beginPath();d.moveTo(n*p,n*t);d.lineTo(l*p,l*t);d.closePath();d.stroke()}d.fillText("N",-d.measureText("N").width/2,-b/4);d.restore();d.lineWidth=3;d.beginPath();d.moveTo(e,f-g/2-h);d.lineTo(e,h);d.closePath();d.stroke()}}
function PitchAndRollDisplay(a,b){var c=document.createElement("canvas"),d=c.getContext("2d"),e=a/2,f=b/2,g=a/4,l=a/20,h=Math.min(a,b)/10,n=b/20;c.width=a;c.height=b;this.roll=this.pitch=0;this.maximumPitch=90;d.font=n+"pt monospace";d.fillStyle="white";this.update=function(){d.clearRect(0,0,a,b);d.beginPath();d.moveTo(e,f);d.arc(e,f,e-h,0,2*Math.PI,!0);d.clip();d.save();d.translate(e,f+b*this.pitch/this.maximumPitch);d.save();d.rotate(this.roll);d.translate(-e,0);d.fillStyle="rgba(255, 255, 255, 0.2)";
d.beginPath();d.fillRect(0,0,a,b+f);d.fill();d.fillStyle="rgba(255, 255, 255, 0.4)";d.beginPath();d.fillRect(0,-b-f,a,b+f);d.fill();d.restore();d.strokeStyle="#fff";d.lineWidth=1;d.beginPath();d.moveTo(-g,0);d.lineTo(g,0);d.stroke();var q=2*b/30;d.lineWidth=1;for(var r=0;30>=r;r++){var v=-b+r*q,p=l;0!=v&&(0==r%5&&(p*=2,d.fillText(Math.floor(Math.abs(v)/b*this.maximumPitch),p+n,v+.5*n)),d.beginPath(),d.moveTo(-p,v),d.lineTo(p,v),d.stroke())}d.restore();d.lineWidth=3;d.strokeStyle="white";d.beginPath();
d.moveTo(2*h,f);d.lineTo(e-h,f);d.lineTo(e-h,f+h);d.stroke();d.beginPath();d.moveTo(a-2*h,f);d.lineTo(e+h,f);d.lineTo(e+h,f+h);d.stroke()};this.domElement=c}
function buildGurrus(a){for(var b=new THREE.Object3D,c=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading}),d=0;10>d;d++){var e=[],f=[],g=new THREE.Geometry,l=2*Math.PI*d/10,h=150*Math.sin(l),n=150*Math.cos(l);l=45*(1+.25*Math.sin(2*l));for(var q=0;20>q;q++){for(k=0;3>k;k++)e.push(new THREE.Vector3(l*(Math.random()-Math.random()),l*(Math.random()-Math.random()),l*(Math.random()-Math.random())));var r=e.length-1;f.push(new THREE.Face3(r-2,r-1,r))}g.vertices=e;g.faces=f;g.computeFaceNormals();
e=new THREE.Mesh(g,c);a.buggyDriver||(e.doubleSided=!0);e.position.set(h,0,n);h=new THREE.MeshLambertMaterial({color:16711680,shading:THREE.FlatShading});n=new THREE.Geometry;f=[];g=[];f.push(new THREE.Vector3(-10,0,0));f.push(new THREE.Vector3(10,0,0));f.push(new THREE.Vector3(0,10,0));g.push(new THREE.Face3(0,1,2));n.vertices=f;n.faces=g;n.computeFaceNormals();h=new THREE.Mesh(n,h);a.buggyDriver||(h.doubleSided=!0);h.position.set(0,0,0);h.rotation.set(Math.random(),Math.random(),Math.random());
e.add(h);b.add(e)}return b}
function buildGround(a){var b=a.worldLength||500,c=2*b,d=2*b;b=-.5*c;var e=-.5*d;c/=300;var f=d/300,g,l,h;d=[];for(var n=[],q=h=l=g=0;300>q;q++){var r=h;h=e+q*f;for(var v=0;300>v;v++){py0=l;l=Math.random(0,4);var p=g;g=b+v*c;if(0<v&&0<q){d.push(new THREE.Vector3(p,1.5*Math.random(),r));d.push(new THREE.Vector3(p,1.5*Math.random(),h));d.push(new THREE.Vector3(g,1.5*Math.random(),r));var t=d.length-1;var u=t-1;var x=u-1;x=new THREE.Face3(x,u,t);n.push(x);d.push(new THREE.Vector3(p,1.5*Math.random(),
h));d.push(new THREE.Vector3(g,1.5*Math.random(),h));d.push(new THREE.Vector3(g,1.5*Math.random(),r));t=d.length-1;u=t-1;x=u-1;x=new THREE.Face3(x,u,t);n.push(x)}}}b=new THREE.Geometry;b.vertices=d;b.faces=n;b.computeFaceNormals();e=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading});b=new THREE.Mesh(b,e);a.buggyDriver||(b.doubleSided=!0);return b}
function buildRotabugs(){for(var a=new THREE.Object3D,b=new THREE.LineBasicMaterial({color:65280,linewidth:1}),c=new THREE.ParticleBasicMaterial({color:65280,size:.25}),d=0;10>d;d++){var e=new THREE.Object3D,f=[],g=new THREE.Geometry,l=[],h=new THREE.Geometry,n=[],q=new THREE.SphereGeometry(5*Math.random()+1,10,10),r=new THREE.Vector3(0,0,0);q=q.vertices;for(var v=0;v<q.length;v++){var p=q[v];f.push(r);f.push(p);l.push(p);n.push(p.clone())}g.vertices=f;g.computeVertexNormals();g.computeBoundingSphere();
f=new THREE.Line(g,b);e.add(f);h.vertices=l;l=new THREE.ParticleSystem(h,c);e.add(l);e.originalVertices=n;e.legs=f;e.feet=l;e.position.x=70*(Math.random()-Math.random());e.position.y=5;e.position.z=70*(Math.random()-Math.random());e.originalPosition=new THREE.Vector3(e.position.x,e.position.y,e.position.z);a.add(e)}return a}
function buildPlancton(a){for(var b=new THREE.Object3D,c=new THREE.MeshLambertMaterial({color:65280,shading:THREE.FlatShading}),d=0;2E3>d;d++){var e=[],f=[],g=new THREE.Geometry,l=.1+.4*Math.random();e.push(new THREE.Vector3(0,0,0));e.push(new THREE.Vector3(l,0,0));e.push(new THREE.Vector3(0,l,0));f.push(new THREE.Face3(0,1,2));g.vertices=e;g.faces=f;g.computeFaceNormals();e=new THREE.Mesh(g,c);e.position.x=UTILS.rangeRand(-100,100);e.position.y=UTILS.rangeRand(-100,100);e.position.z=UTILS.rangeRand(-100,
100);e.rotation.x=UTILS.rangeRand(-100,100);e.rotation.y=UTILS.rangeRand(-100,100);e.rotation.z=UTILS.rangeRand(-100,100);a.buggyDriver||(e.doubleSided=!0);b.add(e)}return b}
window.onload=function(){function a(){var za=document.getElementById("container"),Ga=document.getElementById("intro"),fa=document.getElementById("start");if(void 0!==window.AudioContext||void 0!==window.webkitAudioContext)if(hb=document.createElement("audio").canPlayType("audio/ogg")?kb:Lb,!Detector.webgl){Detector.addGetWebGLMessage({parent:za});return}za.parentElement.removeChild(za);fa.addEventListener("click",function Qa(Ra){fa.removeEventListener("click",Qa);Ga.className="loading";fa.innerHTML=
"Please wait while LOADING";Xb=fa;Yb=document.getElementById("intro_wrapper");setTimeout(b,100)})}function b(){u=window.innerWidth;x=window.innerHeight;C=new THREE.Clock;z=new THREE.WebGLRenderer({antialias:!1});z.setSize(u,x);z.setClearColorHex(0,1);document.body.appendChild(z.domElement);Q=new THREE.Scene;Q.fog=new THREE.FogExp2(0,.0225);Q.fog.far=1E4;B=new THREE.Object3D;var za=[["front_left",[-10,0,-10]],["front",[0,0,-10]],["front_right",[10,0,-10]],["front_top_left",[-10,10,-10]],["front_top_right",
[-10,10,-10]],["front_down_left",[-10,-10,-10]],["front_down_right",[-10,-10,-10]],["back",[0,0,10]],["back_left",[-10,0,10]],["back_right",[10,0,10]],["back_top_left",[-10,10,10]],["back_top_right",[10,10,10]],["back_down_left",[-10,-10,10]],["back_down_right",[10,-10,10]],["left",[-10,0,0]],["right",[10,0,0]],["up_left",[-10,10,0]],["up",[0,10,0]],["up_right",[-10,10,0]],["down_left",[-10,-10,0]],["down",[0,-10,0]],["down_right",[10,-10,0]]];B.dummies={};for(var Ga=0;Ga<za.length;Ga++){var fa=za[Ga],
Ha=new THREE.Object3D,Ra=fa[1];Ha.position.set(Ra[0],Ra[1],Ra[2]);B.add(Ha);B.dummies[fa[0]]=Ha}F=new THREE.PerspectiveCamera(60,u/x,1,1E4);F.position=new THREE.Vector3(0,0,0);F.lookAt(W);B.add(F);B.position=new THREE.Vector3(0,100,0);Q.add(B);B.lookAt(X);wa=document.getElementById("cockpit");La=new CompassDisplay(150,150);wa.appendChild(La.domElement);Sa=new PitchAndRollDisplay(150,150);wa.appendChild(Sa.domElement);Aa=new THREE.PointLight(16777215,1,70);B.add(Aa);Ga={buggyDriver:!1,worldLength:500};
ia=buildGurrus(Ga);Q.add(ia);ia.updateMatrixWorld();Q.add(buildGround(Ga));ua=buildRotabugs(Ga);Q.add(ua);ua.updateMatrixWorld();ea=buildPlancton(Ga);Q.add(ea);for(Ga=0;Ga<ua.children.length;Ga++)za=ua.children[Ga],za.updateMatrixWorld(),r(za.feet),fa=za.feet.geometry.boundingBox,fa=new THREE.CubeGeometry(1.05*Math.abs(fa.min.x-fa.max.x),1.05*Math.abs(fa.min.y-fa.max.y),1.05*Math.abs(fa.min.z-fa.max.z)),fa=new THREE.Mesh(fa,new THREE.MeshBasicMaterial({color:16776960,wireframe:!0})),fa.position.set(0,
0,0),za.add(fa),za.collisionMesh=fa,fa.geometry.computeBoundingBox(),fa.visible=!1,ka.push(fa);for(Ga=0;Ga<ia.children.length;Ga++)ka.push(ia.children[Ga]),ia.children[Ga].geometry.computeBoundingBox();document.addEventListener("keydown",c,!1);document.addEventListener("keyup",d,!1);document.addEventListener("mousemove",e,!1);document.addEventListener("mousedown",f,!1);document.addEventListener("mouseup",g,!1);document.addEventListener("contextmenu",function(Qa){Qa.preventDefault()},!1);l()}function c(za){switch(za.keyCode){case 38:case 87:Y=
!0;break;case 40:case 83:I=!0;break;case 37:case 65:E=!0;break;case 39:case 68:ja=!0;break;case 84:K=!0;break;case 71:ca=!0;break;case 70:pa=!0;break;case 72:V=!0}}function d(za){switch(za.keyCode){case 38:case 87:Y=!1;break;case 40:case 83:I=!1;break;case 37:case 65:E=!1;break;case 39:case 68:ja=!1;break;case 84:K=!1;break;case 71:ca=!1;break;case 70:pa=!1;break;case 72:V=!1}}function e(za){va=za.pageX-J;ya=za.pageY-da;R=!0}function f(za){za.preventDefault();za.stopPropagation();switch(za.button){case 0:Y=
!0;break;case 2:I=!0}}function g(za){za.preventDefault();za.stopPropagation();switch(za.button){case 0:Y=!1;break;case 2:I=!1}}function l(){Oa=new AudioContext;for(var za=0;za<hb.length;za++)Bb.push({url:hb[za],loaded:!1,loading:!1});h(Bb[0])}function h(za){var Ga=new XMLHttpRequest;Ga.open("GET",za.url,!0);Ga.responseType="arraybuffer";Ga.onload=function(){Oa.decodeAudioData(Ga.response,function(fa){fa&&n(za.url,fa)})};Ga.send()}function n(za,Ga){var fa;for(fa=0;fa<Bb.length;fa++){var Ha=Bb[fa];
if(Ha.url==za&&!1===Ha.loaded){Ha.loaded=!0;Ha.loading=!1;Ha.buffer=Ga;break}}za=!0;for(fa=0;fa<Bb.length;fa++)if(Ha=Bb[fa],!Ha.loaded&&!Ha.loading){h(Ha);za=!1;break}Xb.innerHTML+=".";za&&(Yb.style.opacity=0,setTimeout(function(){Yb.style.visibility="hidden";cockpit_wrapper.style.opacity=1;q();t();(new TWEEN.Tween(B.position)).to({x:0,y:10,z:0},25E3).onComplete(function(){H=!1}).easing(TWEEN.Easing.Quadratic.Out).start()},1E3))}function q(){function za(cb,Xa,rb){var m=Oa.createPanner(),Va=Oa.createBufferSource(),
Zb=Oa.createGain();m.positionX.setValueAtTime(Xa.x,Oa.currentTime);m.positionY.setValueAtTime(Xa.y,Oa.currentTime);m.positionZ.setValueAtTime(Xa.z,Oa.currentTime);m.panningModel="HRTF";Va.loop=!0;Va.buffer=cb.buffer;Va.connect(m);m.connect(Zb);m.coneOuterGain=.25;m.coneOuterAngle=250;m.coneInnerAngle=0;m.orientationX.value=0;m.orientationY.value=1;m.orientationZ.value=0;cb.buffer.sampleRate=44100;Zb.gain.value=rb;Zb.connect(fa);Va.start(Ga)}var Ga=Oa.currentTime+.02;var fa=Oa.createGain();fa.gain.value=
.9;if(Oa.createDynamicsCompressor){var Ha=Oa.createDynamicsCompressor();Ha.ratio=2}else Ha=Oa.createGain(),Ha.gain.value=1.4;fa.connect(Ha);Ha.connect(Oa.destination);za(Bb[2],new THREE.Vector3(0,15,0),.8);za(Bb[0],new THREE.Vector3(-500,0,500),.9);za(Bb[0],new THREE.Vector3(500,0,-500),.9);za(Bb[1],new THREE.Vector3(500,0,-500),.9);za(Bb[1],new THREE.Vector3(-500,0,500),.9);var Ra=4/ia.children.length;for(Ha=0;Ha<ia.children.length;Ha++){var Qa=ia.children[Ha].matrixWorld.getPosition().clone();Qa.y+=
2;za(Bb[4],Qa,Ra)}Ra=2/ua.children.length;for(Ha=0;Ha<ua.children.length;Ha++)Qa=ua.children[Ha].matrixWorld.getPosition().clone(),za(Bb[3],Qa,Ra);p(Oa)}function r(za){function Ga(rb,m){var Va=new THREE.Vector3(0,0,0);Va.x=Math.min(rb.x,m.x);Va.y=Math.min(rb.y,m.y);Va.z=Math.min(rb.z,m.z);return Va}function fa(rb,m){var Va=new THREE.Vector3(0,0,0);Va.x=Math.max(rb.x,m.x);Va.y=Math.max(rb.y,m.y);Va.z=Math.max(rb.z,m.z);return Va}var Ha={min:new THREE.Vector3,max:new THREE.Vector3},Ra=za.geometry;za=
za.children;Ra.computeBoundingBox();null!==Ra.boundingBox&&(Ha=Ra.boundingBox);for(var Qa=0;Qa<za.length;Qa++){var cb=za[Qa],Xa=cb.geometry;0<cb.children.length?r(cb):Xa.computeBoundingBox();Ha.min=Ga(Ha.min,Xa.boundingBox.min);Ha.max=fa(Ha.max,Xa.boundingBox.max)}Ra.boundingBox=Ha}function v(za){var Ga=Math.pow(za,2),fa=500*Ga,Ha=100*Ga,Ra=Ga=0,Qa=0,cb=B.position;H||(["x","y","z"].forEach(function(Xa){var rb=M[Xa];0<Math.abs(rb)&&(rb-=0<rb?Ha:-Ha,.1>=Math.abs(rb)&&(rb=0),M[Xa]=rb)}),Y?M.z-=fa:I&&
(M.z+=fa),V?M.x+=fa:pa&&(M.x-=fa),K?M.y+=fa:ca&&(M.y-=fa),fa=B.dummies,Ga=M.x*za,Ra=M.y*za,Qa=M.z*za,0>=M.z?CollisionUtils.collidesMultiple(cb,fa.front,[fa.front_left,fa.front_right,fa.front_top_left,fa.front_top_right,fa.front_down_left,fa.front_down_right],Qa,ka)&&(Qa=0,M.z=0):0<M.z&&CollisionUtils.collidesMultiple(cb,fa.back,[fa.back_left,fa.back_right,fa.back_top_left,fa.back_top_right,fa.back_down_left,fa.back_down_right],Qa,ka)&&(Qa=0,M.z=0),0<=M.x?CollisionUtils.collidesMultiple(cb,fa.right,
[fa.front_right,fa.back_right,fa.up_right,fa.down_right,fa.back_top_right,fa.front_top_right,fa.back_down_right,fa.front_down_right],Ga,ka)&&(Ga=0,M.x=0):0>M.x&&CollisionUtils.collidesMultiple(cb,fa.left,[fa.front_left,fa.back_left,fa.front_top_left,fa.front_down_left,fa.back_top_left,fa.back_down_left],Ga,ka)&&(Ga=0,M.x=0),0<=M.y?CollisionUtils.collidesMultiple(cb,fa.up,[fa.up_left,fa.up_right,fa.front_top_right,fa.front_top_left,fa.back_top_right,fa.back_top_left],Ra,ka)&&(Ra=0,M.y=0):0>M.y&&CollisionUtils.collidesMultiple(cb,
fa.down,[fa.down_left,fa.down_right,fa.front_down_left,fa.front_down_right,fa.back_down_left,fa.back_down_right],Ra,ka)&&(Ra=0,M.y=0),fa=50*za,E?(Z-=fa,N-=fa):ja&&(Z+=fa,N-=fa),fa=.05*za,R&&(Z+=va*fa,N+=va*fa,T+=ya*fa));T=Math.max(-85,Math.min(85,T));fa=(90-T)*Math.PI/180;cb=Z*Math.PI/180;B.translateX(Ga);B.translateY(Ra);B.translateZ(Qa);500<=B.position.z+25?B.position.z=-475:-500>=B.position.z-25&&(B.position.z=475);500<=B.position.x+25?B.position.x=-475:-500>=B.position.x-25&&(B.position.x=475);
X.x=B.position.x+100*Math.sin(fa)*Math.cos(cb);X.y=B.position.y+100*Math.cos(fa);X.z=B.position.z+100*Math.sin(fa)*Math.sin(cb);B.lookAt(X);H||(B.position.y+=.02*Math.sin(.001*Date.now()+.01*Math.random()),B.position.y-=.25*za,4>B.position.y&&(B.position.y=4,M.y=0))}function p(za=null){null===za&&(za=Oa);let Ga=za.listener;za=za.currentTime+.001;var fa=B.up;Ga.positionX?(Ga.positionX.setValueAtTime(B.position.x,za),Ga.positionY.setValueAtTime(B.position.y,za),Ga.positionZ.setValueAtTime(B.position.z,
za)):Ga.setPosition(B.position.x,B.position.y,B.position.z);Ga.forwardX?(Ga.forwardX.setValueAtTime(X.x,za),Ga.forwardY.setValueAtTime(X.y,za),Ga.forwardZ.setValueAtTime(X.z,za),Ga.upX.setValueAtTime(fa.x,za),Ga.upY.setValueAtTime(fa.y,za),Ga.upZ.setValueAtTime(fa.z,za)):Ga.setOrientation(X.x,X.y,X.z,fa.x,fa.y,fa.z)}function t(){requestAnimationFrame(t);TWEEN.update();v(C.getDelta());La.direction=N;Sa.pitch=-T;La.update();Sa.update();p(Oa);for(var za=1E-4*Date.now(),Ga=5E-4*Date.now(),fa=0,Ha=ua.children.length;fa<
Ha;fa++){for(var Ra=ua.children[fa],Qa=Ra.originalVertices,cb=Ra.legs,Xa=Ra.feet,rb=Xa.geometry.vertices,m=0;m<Qa.length;m++){var Va=Qa[m],Zb=rb[m],w=za+m+fa;Zb.x=Va.x+.01*Math.sin(w);Zb.z=Va.z+.01*Math.cos(w);Zb.y=Va.y+Math.sin(2*w)}Xa.geometry.verticesNeedUpdate=!0;cb.geometry.verticesNeedUpdate=!0;Ra.position.y=Ra.originalPosition.y+.5*Math.sin(fa+Ga)}za=ea.children;fa=0;for(Ga=za.length;fa<Ga;fa++)Ha=za[fa],Ha.rotation.x+=.01,Ha.rotation.y+=.01,Ha.rotation.z+=.01,Ha.position.x+=UTILS.rangeRand(-.001,
.001),Ha.position.y+=.01*Math.random(),300<Ha.position.y&&(Ha.position.y=-.25*Math.random());z.render(Q,F)}var u,x,z,C,Q,F,W=new THREE.Vector3(0,0,-10),H=!0,B,X=new THREE.Vector3(0,0,0),M=new THREE.Vector3(0,0,0);new THREE.Vector3(0,0,0);var N=0,T=0,Z=0,Y=!1,I=!1,pa=!1,V=!1,K=!1,ca=!1,E=!1,ja=!1,R=!1,J=window.innerWidth/2,da=window.innerHeight/2,va=J,ya=da,Aa,ua,ea,ia,ka=[],wa,La,Sa,Oa,hb,kb=["data/malstrom1-arpeggio.ogg","data/malstrom2-vocoder.ogg","data/nn-xt1-bass.ogg","data/nn-xt2-guitar.ogg",
"data/subtractor1-beep.ogg"],Lb=["data/malstrom1-arpeggio.mp3","data/malstrom2-vocoder.mp3","data/nn-xt1-bass.mp3","data/nn-xt2-guitar.mp3","data/subtractor1-beep.mp3"],Bb=[],Xb,Yb;Stadista.initWithGuard(window,3,()=>{a()})};
